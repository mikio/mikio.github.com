<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ざる魂</title>
  <link href="http://mikio.github.com/index.xml" rel="self" />
  <link href="http://mikio.github.com/"/>
  <updated>2012-04-09T22:30:13Z</updated>
  <id>http://mikio.github.com/index.xml</id>
  <entry><title type="html">SKKはサジェストと相性がいい!</title><author><name>nil</name></author><link href="http://mikio.github.com//article/2012/04/09_skk.html"/><updated>2012-04-09T18:01:00Z</updated><published>2012-04-09T18:01:00Z</published><id>article/2012/04/09_skk.html</id><category scheme="/tags/skk.html" term="skk" label="skk"/><category scheme="/tags/emacs.html" term="emacs" label="emacs"/><content type="html">&lt;p&gt;
emacs&#20197;&#22806;&#12391;&#12418;SKK&#12434;&#23566;&#20837;&#12375;&#12390;&#12415;&#12390;&#27671;&#12389;&#12356;&#12383;&#12398;&#12391;&#12377;&#12364;&#12289;SKK&#12399;&#12454;&#12455;&#12502;&#12450;&#12503;&#12522;&#12398;&#12469;&#12472;&#12455;&#12473;&#12488;&#27231;&#33021;&#12392;&#38750;&#24120;&#12395;&#30456;&#24615;&#12364;&#33391;&#12356;&#12391;&#12377;&#12290;
&#29694;&#22312;&#12398;&#12454;&#12455;&#12502;&#12450;&#12503;&#12522;&#12391;&#12399;&#12289;&#20837;&#21147;&#12395;&#12501;&#12457;&#12540;&#12459;&#12473;&#12364;&#24403;&#12383;&#12427;&#12392;&#22823;&#25269;&#33258;&#21205;&#30340;&#12395;IME&#12364;ON&#12395;&#12394;&#12387;&#12390;&#12289;&#26085;&#26412;&#35486;&#20837;&#21147;&#12364;&#12391;&#12365;&#12427;&#12424;&#12358;&#12395;&#12394;&#12426;&#12414;&#12377;&#12290;
&#12371;&#12428;&#12399;&#12371;&#12428;&#12391;&#20415;&#21033;&#12394;&#12398;&#12391;&#12377;&#12364;&#12289;&#12454;&#12455;&#12502;&#12450;&#12503;&#12522;&#33258;&#36523;&#12398;&#12469;&#12472;&#12455;&#12473;&#12488;&#12392;&#12289;IME&#12398;&#12469;&#12472;&#12455;&#12473;&#12488;&#12364;&#21516;&#26178;&#12395;&#34920;&#31034;&#12373;&#12428;&#12390;&#12375;&#12414;&#12358;&#12383;&#12417;&#12289;
&#38750;&#24120;&#12395;&#35211;&#12395;&#12367;&#12367;&#12394;&#12426;&#12414;&#12377;&#12290;
&lt;/p&gt;
&lt;p&gt;
&lt;img src="img/skk/skk01.png"  alt="img/skk/skk01.png" /&gt;
&lt;/p&gt;
&lt;p&gt;
&#19968;&#26041;&#12289;SKK&#12398;&#22580;&#21512;&#12289;&#12487;&#12501;&#12457;&#12523;&#12488;&#12391;&#12399;&#12300;&#12363;&#12394;&#12301;&#30906;&#23450;&#12514;&#12540;&#12489;&#12391;&#12354;&#12427;&#12383;&#12417;
&#20313;&#35336;&#12394;&#34920;&#31034;&#12364;&#12354;&#12426;&#12414;&#12379;&#12435;&#12290;&#30452;&#25509;&#12402;&#12425;&#12364;&#12394;&#12398;&#12415;&#12364;&#20837;&#21147;&#12373;&#12428;&#12427;&#12398;&#12391;&#12471;&#12531;&#12503;&#12523;&#12391;&#12377;&#12290;
&lt;/p&gt;
&lt;p&gt;
&lt;img src="img/skk/skk02.png"  alt="img/skk/skk02.png" /&gt;
&lt;/p&gt;
&lt;p&gt;
&#22823;&#25269;&#12398;&#12469;&#12472;&#12455;&#12473;&#12488;&#12391;&#12399;&#12289;&#28450;&#23383;&#12395;&#22793;&#25563;&#12375;&#12394;&#12367;&#12390;&#12418;&#12289;&#12450;&#12523;&#12501;&#12449;&#12505;&#12483;&#12488;&#12420;&#12300;&#12402;&#12425;&#12364;&#12394;&#12301;&#12398;&#12415;&#12391;
&#12469;&#12472;&#12455;&#12473;&#12488;&#12527;&#12540;&#12489;&#12434;&#34920;&#31034;&#12375;&#12390;&#12367;&#12428;&#12427;&#12398;&#12391;&#12289;SKK&#12398;&#12424;&#12358;&#12395;&#12487;&#12501;&#12457;&#12523;&#12488;&#12391;&#12300;&#12402;&#12425;&#12364;&#12394;&#12301;&#30906;&#23450;&#12384;&#12392;
&#20313;&#35336;&#12394;&#12418;&#12398;&#12364;&#34920;&#31034;&#12373;&#12428;&#12378;&#12395;&#12289;&#38750;&#24120;&#12395;&#35211;&#12420;&#12377;&#12367;&#12394;&#12426;&#12414;&#12377;&#12290;
&lt;/p&gt;
&lt;p&gt;
&#12454;&#12455;&#12502;&#12450;&#12503;&#12522;&#20197;&#22806;&#12398;&#26222;&#36890;&#12398;&#12450;&#12503;&#12522;(&#20363;&#12360;&#12400;&#12456;&#12463;&#12475;&#12523;&#12392;&#12363;)&#12394;&#12393;&#12391;&#12399;&#12289;&#12469;&#12472;&#12455;&#12473;&#12488;&#12364;&#28961;&#12356;&#12406;&#12435;
&#20351;&#12356;&#21213;&#25163;&#12364;GoogleIME&#12364;&#21155;&#12427;&#12363;&#12418;&#30693;&#12428;&#12414;&#12379;&#12435;&#12364;&#12289;&#33258;&#20998;&#12399;&#26222;&#27573;&#12411;&#12392;&#12435;&#12393;
Firefox&#12392;emacs&#12375;&#12363;&#20351;&#12356;&#12414;&#12379;&#12435;&#12375;&#12289;&#12364;&#12387;&#12388;&#12426;&#25991;&#31456;&#12434;&#26360;&#12367;&#12392;&#12365;&#12399;
Emacs&#12391;&#26360;&#12356;&#12390;&#12467;&#12500;&#12506;&#12377;&#12427;&#26041;&#27861;&#12434;&#12392;&#12427;&#12398;&#12391;&#21839;&#38988;&#12394;&#12375;&#12391;&#12377;&#12290;
&lt;/p&gt;
&lt;p&gt;
&#12392;&#12356;&#12358;&#12371;&#12392;&#12391;&#12289;SKK&#12399;&#12487;&#12473;&#12463;&#12488;&#12483;&#12503;&#29992;&#36884;&#12391;&#12418;&#12362;&#12377;&#12377;&#12417;&#12391;&#12377;&#12424;!
&lt;/p&gt;

</content></entry><entry><title type="html">ClojureのSLIMEのREPLバッファに色がつかない</title><author><name>nil</name></author><link href="http://mikio.github.com//article/2012/04/06_clojureslimerepl.html"/><updated>2012-04-06T14:00:00Z</updated><published>2012-04-06T14:00:00Z</published><id>article/2012/04/06_clojureslimerepl.html</id><category scheme="/tags/clojure.html" term="clojure" label="clojure"/><category scheme="/tags/hamari.html" term="hamari" label="hamari"/><category scheme="/tags/emacs.html" term="emacs" label="emacs"/><category scheme="/tags/slime.html" term="slime" label="slime"/><content type="html">&lt;p&gt;
emacs24&#12395;&#12375;&#12383;&#12398;&#12364;&#21407;&#22240;&#12363;&#12431;&#12363;&#12425;&#12394;&#12356;&#12364;&#12289;&#12356;&#12388;&#12398;&#12414;&#12395;&#12363;SLIME&#12398;REPL&#12496;&#12483;&#12501;&#12449;&#12391;
&#33394;&#20184;&#12369;&#12364;&#12373;&#12428;&#12394;&#12367;&#12394;&#12387;&#12390;&#12356;&#12383;&#12290;
&lt;/p&gt;
&lt;p&gt;
&#12371;&#12398;&#26178;&#12289;&#35373;&#23450;&#12375;&#12390;&#12356;&#12383;&#12398;&#12399;&#19979;&#35352;&#12398;&#12467;&#12540;&#12489;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(add-hook 'slime-repl-mode-hook (lambda () (clojure-mode-font-lock-setup)))
&lt;/pre&gt;


&lt;p&gt;
&lt;a href="https://groups.google.com/forum/?fromgroups#!topic/clojure/jYShTPC_ppk"&gt;https://groups.google.com/forum/?fromgroups#!topic/clojure/jYShTPC_ppk&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&#19978;&#35352;&#12469;&#12452;&#12488;&#12395;&#12424;&#12427;&#12392;&#25163;&#21205;&#12391;font-lock&#12434;&#25351;&#23450;&#12377;&#12427;&#12392;&#12358;&#12414;&#12367;&#12356;&#12392;&#12371;&#12398;&#12371;&#12392;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;M-x clojure-mode-font-lock-setup
M-x font-lock-mode
M-x font-lock-mode
&lt;/pre&gt;

&lt;p&gt;
&#33258;&#20998;&#12418;&#35430;&#12375;&#12383;&#12425;&#12358;&#12414;&#12367;&#12356;&#12387;&#12383;&#12290;
&lt;/p&gt;
&lt;p&gt;
&#12391;&#12289;&#26368;&#32066;&#30340;&#12395;&#12469;&#12452;&#12488;&#12398;&#25351;&#21335;&#12395;&#12354;&#12427;&#12424;&#12358;&#12395;&#19979;&#35352;&#12434;&#35373;&#23450;&#12375;&#12383;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(add-hook 'slime-repl-mode-hook
               (lambda ()
                 (clojure-mode-font-lock-setup)
                 (font-lock-mode)
                 (font-lock-mode)))
&lt;/pre&gt;

&lt;p&gt;
&#12371;&#12428;&#12391;REPL&#12496;&#12483;&#12501;&#12449;&#12395;&#12418;&#32186;&#40599;&#12395;&#33394;&#20184;&#12369;&#12373;&#12428;&#12427;&#12424;&#12358;&#12395;&#12394;&#12387;&#12383;&#12290;
&lt;/p&gt;
</content></entry><entry><title type="html">Windows版のSwank-Clojureでclojure-jack-inが実行実行できない。</title><author><name>nil</name></author><link href="http://mikio.github.com//article/2012/04/06_windowsswank-clojureclojure-jack-in.html"/><updated>2012-04-06T13:53:00Z</updated><published>2012-04-06T13:53:00Z</published><id>article/2012/04/06_windowsswank-clojureclojure-jack-in.html</id><category scheme="/tags/clojure.html" term="clojure" label="clojure"/><category scheme="/tags/dos.html" term="dos" label="dos"/><category scheme="/tags/slime.html" term="slime" label="slime"/><content type="html">&lt;p&gt;
&#26368;&#36817;&#12398;clojure-swank&#12395;&#12399;&#12289;emacs&#12363;&#12425;&#30452;&#25509;swank-server&#12434;&#36215;&#21205;&#12377;&#12427;&#12383;&#12417;&#12398;&#12300;clojure-jack-in&#12301;&#12392;emacs&#12467;&#12510;&#12531;&#12489;&#12364;&#12354;&#12427;&#12290;
&#12371;&#12428;&#12434;&#20351;&#12358;&#12392;&#12289;&#12431;&#12374;&#12431;&#12374;&#21029;&#12398;&#31471;&#26411;&#12391;swank-server&#12434;&#36215;&#21205;&#12379;&#12378;&#12392;&#12418;&#12289;&#30452;&#25509;&#35023;&#12391;&#12469;&#12540;&#12496;&#12540;&#12364;&#36215;&#21205;&#12375;&#12390;&#12367;&#12428;&#12427;&#12398;&#12391;&#12392;&#12387;&#12390;&#12418;&#20415;&#21033;&#12391;&#12354;&#12427;&#12290;
&#12398;&#12399;&#12378;&#12394;&#12398;&#12384;&#12364;&#12289;&#12289;&#12289;WindowsXP&#12384;&#12392;&#20363;&#12395;&#12424;&#12387;&#12390;&#12358;&#12414;&#12367;&#36215;&#21205;&#12391;&#12365;&#12394;&#12356;&#12398;&#12391;(Linux&#29256;&#12384;&#12392;&#21839;&#38988;&#12394;&#12375;)&#12289;&#12385;&#12423;&#12387;&#12392;&#20462;&#27491;&#12375;&#12394;&#12367;&#12385;&#12419;&#12356;&#12369;&#12394;&#12356;&#12290;
&#12371;&#12371;&#12391;&#12399;&#12381;&#12398;&#36942;&#31243;&#12434;&#12513;&#12514;&#12375;&#12390;&#12362;&#12367;&#12290;
&lt;/p&gt;

&lt;div id="outline-container-1" class="outline-3"&gt;
&lt;h3 id="sec-1"&gt;&#32080;&#35542;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1"&gt;


&lt;p&gt;
&#32080;&#35542;&#12434;&#31034;&#12377;&#12392;&#19979;&#35352;&#12398;&#12497;&#12483;&#12481;&#12391;&#12358;&#12414;&#12367;&#12356;&#12367;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ diff -u $&lt;span class="org-variable-name"&gt;HOME&lt;/span&gt;/bin/lein.bat.orig $&lt;span class="org-variable-name"&gt;HOME&lt;/span&gt;/bin/lein.bat
--- /cygdrive/c/Users/mikio/bin/lein.bat.orig  2012-04-05 12:59:29.352024000 +0900
+++ /cygdrive/c/Users/mikio/bin/lein.bat       2012-04-06 13:32:27.537281600 +0900
@@ -23,7 +23,7 @@

 &lt;span class="org-keyword"&gt;if&lt;/span&gt; &lt;span class="org-string"&gt;"x%LEIN_HOME%"&lt;/span&gt; == &lt;span class="org-string"&gt;"x"&lt;/span&gt; (
     &lt;span class="org-keyword"&gt;if&lt;/span&gt; exist &lt;span class="org-string"&gt;"%CD%\.lein"&lt;/span&gt; (
-        if /I NOT %CD%==%USERPROFILE% echo Running&lt;span class="org-keyword"&gt; in&lt;/span&gt; bundled mode.
+        if /I NOT &lt;span class="org-string"&gt;"%CD%"&lt;/span&gt;==&lt;span class="org-string"&gt;"%USERPROFILE%"&lt;/span&gt; echo Running&lt;span class="org-keyword"&gt; in&lt;/span&gt; bundled mode.
         &lt;span class="org-builtin"&gt;set&lt;/span&gt; &lt;span class="org-variable-name"&gt;LEIN_HOME&lt;/span&gt;=%CD%&lt;span class="org-string"&gt;\.&lt;/span&gt;lein
     ) &lt;span class="org-keyword"&gt;else&lt;/span&gt; (
         &lt;span class="org-builtin"&gt;set&lt;/span&gt; &lt;span class="org-variable-name"&gt;LEIN_HOME&lt;/span&gt;=%USERPROFILE%&lt;span class="org-string"&gt;\.&lt;/span&gt;lein
&lt;/pre&gt;


&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-2" class="outline-3"&gt;
&lt;h3 id="sec-2"&gt;&#32076;&#36942;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2"&gt;

&lt;p&gt;&#12414;&#12378;lein.bat&#33258;&#20307;&#12364;&#12358;&#12414;&#12367;&#21205;&#12367;&#12398;&#12363;&#12383;&#12417;&#12377;&#12290;
dos&#31379;&#12391;lein.bat&#12434;&#23455;&#34892;&#12377;&#12427;&#12392;&#19979;&#35352;&#12398;&#12456;&#12521;&#12540;&#12364;&#12391;&#12390;&#12375;&#12414;&#12358;&#12290;   
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;C:\Documents and Settings\mikio&amp;gt;lein
and &amp;#12398;&amp;#20351;&amp;#12356;&amp;#26041;&amp;#12364;&amp;#35492;&amp;#12387;&amp;#12390;&amp;#12356;&amp;#12414;&amp;#12377;&amp;#12290;
&lt;/pre&gt;

&lt;p&gt;
&#12290;&#12290;&#12290;&#12456;&#12521;&#12540;&#12513;&#12483;&#12475;&#12540;&#12472;&#12364;&#19981;&#35242;&#20999;&#12377;&#12366;&#12390;&#20309;&#12375;&#12390;&#12356;&#12356;&#12363;&#12431;&#12363;&#12426;&#12414;&#12379;&#12435;&#12290;
dos&#12398;&#12496;&#12483;&#12481;&#12501;&#12449;&#12452;&#12523;&#12434;&#35501;&#12416;&#12398;&#12399;&#25968;&#24180;&#12406;&#12426;&#12391;&#12377;&#12364;&#12392;&#12426;&#12354;&#12360;&#12378;
&lt;/p&gt;
&lt;p&gt;
&#12487;&#12496;&#12483;&#12464;&#24773;&#22577;&#12434;&#20986;&#12377;&#12383;&#12417;&#12395;&#12300;echo off&#12301;&#12434;&#35299;&#38500;&#12377;&#12427;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;::@echo off

&lt;span class="org-builtin"&gt;set&lt;/span&gt; &lt;span class="org-variable-name"&gt;JAVA_OPTS&lt;/span&gt;=-Dswank.encoding=utf-8-unix
&lt;/pre&gt;

&lt;p&gt;
&#12377;&#12427;&#12392;&#19979;&#35352;&#12391;&#20572;&#27490;&#12375;&#12390;&#12427;&#12371;&#12392;&#12364;&#12431;&#12363;&#12387;&#12383;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;C:\Documents and Settings\mikio&amp;gt;if &lt;span class="org-string"&gt;""&lt;/span&gt; NEQ &lt;span class="org-string"&gt;""&lt;/span&gt; cd &lt;span class="org-string"&gt;""&lt;/span&gt;
and &amp;#12398;&amp;#20351;&amp;#12356;&amp;#26041;&amp;#12364;&amp;#35492;&amp;#12387;&amp;#12390;&amp;#12356;&amp;#12414;&amp;#12377;&amp;#12290;
C:\Documents and Settings\mikio&amp;gt;        if /I NOT C:\Documents and Settings\&lt;span class="org-variable-name"&gt;mikio&lt;/span&gt;==C:\Documents and Settings\mikio echo Running&lt;span class="org-keyword"&gt; in&lt;/span&gt; bundled mode.
&lt;/pre&gt;


&lt;p&gt;
IF&#25991;&#12398;&#26465;&#20214;&#24335;&#12391;&#19982;&#12360;&#12425;&#12428;&#12383;&#22793;&#25968;&#12364;&#31354;&#30333;&#12434;&#21547;&#12416;&#12383;&#12417;&#12395;
&#26465;&#20214;&#24335;&#12364;&#25991;&#27861;&#12456;&#12521;&#12540;&#12395;&#12394;&#12387;&#12390;&#12356;&#12427;&#12424;&#12358;&#12384;&#12290;
&#12381;&#12371;&#12391;&#12289;&#12381;&#12398;&#26465;&#20214;&#24335;&#12398;&#22793;&#25968;&#37096;&#20998;&#12434;&#12480;&#12502;&#12523;&#12463;&#12458;&#12540;&#12486;&#12540;&#12471;&#12519;&#12531;&#12391;&#25324;&#12387;&#12390;&#12415;&#12383;&#12290;
&lt;/p&gt;
&lt;p&gt;
&#12371;&#12398;&#29366;&#24907;&#12391;lein.bat&#12434;&#23455;&#34892;&#12375;&#12390;&#12415;&#12383;&#12392;&#12371;&#12429;&#36890;&#24120;&#12393;&#12362;&#12426;&#23455;&#34892;&#12391;&#12365;&#12383;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;C:\Documents and Settings\mikio&amp;gt;lein.bat
Leiningen is a tool for working with Clojure projects.

Several tasks are available:
classpath   Print the classpath of the current project.
clean       Remove compiled class files and jars from project.
compile     Compile Clojure source into .class files.
deploy      Build jar and deploy to remote repository.
deps        Download :dependencies and put them&lt;span class="org-keyword"&gt; in&lt;/span&gt; :library-path.
&lt;span class="org-builtin"&gt;help&lt;/span&gt;        Display a list of tasks or help for a given task.
install     Install current project or download specified project.
interactive Enter an interactive task shell. Aliased to &lt;span class="org-string"&gt;"int"&lt;/span&gt;.
jack-in     Jack&lt;span class="org-keyword"&gt; in&lt;/span&gt; to a Clojure SLIME session from Emacs.
jar         Package up all the project&lt;span class="org-string"&gt;'s files into a jar file.&lt;/span&gt;
&lt;span class="org-string"&gt;javac       Compile Java source files.&lt;/span&gt;
&lt;span class="org-string"&gt;new         Create a new project skeleton.&lt;/span&gt;
&lt;span class="org-string"&gt;noir        Create and manage noir projects.&lt;/span&gt;
&lt;span class="org-string"&gt;plugin      Manage user-level plugins.&lt;/span&gt;
&lt;span class="org-string"&gt;pom         Write a pom.xml file to disk for Maven interop.&lt;/span&gt;
&lt;span class="org-string"&gt;repl        Start a repl session either with the current project or standalone.&lt;/span&gt;
&lt;span class="org-string"&gt;retest      Run only the test namespaces which failed last time around.&lt;/span&gt;
&lt;span class="org-string"&gt;run         Run the project'&lt;/span&gt;s -main function.
search      Search remote maven repositories for matching jars.
swank       Launch swank server for Emacs to connect.
&lt;span class="org-builtin"&gt;test&lt;/span&gt;        Run the project&lt;span class="org-string"&gt;'s tests.&lt;/span&gt;
&lt;span class="org-string"&gt;test!       Run a project'&lt;/span&gt;s tests after cleaning and fetching dependencies.
trampoline  Run a task without nesting the project&lt;span class="org-string"&gt;'s JVM inside Leiningen'&lt;/span&gt;s.
uberjar     Package up the project files and all dependencies into a jar file.
upgrade     Upgrade Leiningen to the latest stable release.
version     Print version for Leiningen and the current JVM.

Run lein help $&lt;span class="org-variable-name"&gt;TASK&lt;/span&gt; for details.
See also: readme, tutorial, copying, sample, deploying and news.

C:\Documents and Settings\mikio&amp;gt;
&lt;/pre&gt;


&lt;p&gt;
&#12371;&#12398;&#20462;&#27491;&#12364;&#23436;&#20102;&#12375;&#12383;&#26178;&#28857;&#12391;&#12300;M-x clojure-jack-in&#12301;&#12434;&#23455;&#34892;&#12375;&#12390;&#12415;&#12383;&#12392;&#12371;&#12429;
&#28961;&#20107;SLIME&#12398;REPL&#12496;&#12483;&#12501;&#12449;&#12364;&#34920;&#31034;&#12373;&#12428;&#12383;&#12424;!
&lt;/p&gt;
&lt;p&gt;
&#12431;&#12374;&#12431;&#12374;&#21029;&#31379;&#12434;&#38283;&#12356;&#12390;swank-server&#12434;&#36215;&#21205;&#12375;&#12394;&#12367;&#12390;&#28168;&#12416;&#12398;&#12391;&#12363;&#12394;&#12426;&#24555;&#36969;&#12395;&#12394;&#12387;&#12383;&#12424;!
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title type="html">emacsで辞書を引けるようにしてみる</title><author><name>nil</name></author><link href="http://mikio.github.com//article/2012/04/04_emacs.html"/><updated>2012-04-04T21:45:00Z</updated><published>2012-04-04T21:45:00Z</published><id>article/2012/04/04_emacs.html</id><category scheme="/tags/emacs.html" term="emacs" label="emacs"/><category scheme="/tags/sdic.html" term="sdic" label="sdic"/><category scheme="/tags/hamari.html" term="hamari" label="hamari"/><content type="html">&lt;p&gt;
&#26908;&#32034;&#12375;&#12390;&#12418;&#12289;&#22833;&#25943;&#12377;&#12427;&#12394;&#12392;&#24605;&#12387;&#12390;&#12356;&#12383;&#12425;&#36766;&#26360;&#12398;&#20316;&#25104;&#12395;&#22833;&#25943;&#12375;&#12390;&#12356;&#12383;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ make dict
no -S -e gene.txt | /usr/bin/perl contrib/gene.perl &amp;gt; gene.sdic
/bin/sh: no: command not found
/usr/bin/perl contrib/edict.perl edict &amp;gt; jedict.sdic
&lt;/pre&gt;

&lt;p&gt;
&#12300;no&#12301;&#12467;&#12510;&#12531;&#12489;&#12392;&#12399;&#12394;&#12435;&#12382;&#12420;&#65311;
&lt;/p&gt;
&lt;p&gt;
&#12392;&#12356;&#12358;&#12371;&#12392;&#12391;&#12289;Makefile&#12398;&#38619;&#24418;&#12398;Makefile.in&#12434;&#35211;&#12390;&#12415;&#12383;&#12425;&#12289;nkf&#12398;&#12371;&#12392;&#12398;&#12424;&#12358;&#12384;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;gene.dic: contrib/gene.perl gene.txt
    @NKF@ -S -e gene.txt | @PERL@ contrib/gene.perl --compat &amp;gt; $@
&lt;/pre&gt;

&lt;p&gt;
&#12373;&#12425;&#12395;&#12418;&#12358;&#19968;&#24230;configure&#12434;&#23455;&#34892;&#12375;&#12390;&#12415;&#12383;&#12392;&#12371;&#12429;&#19979;&#35352;&#12398;&#12424;&#12358;&#12395;
&#12527;&#12540;&#12491;&#12531;&#12464;&#12364;&#12391;&#12390;&#12356;&#12383;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;onfigure: warning: nkf not found
&lt;/pre&gt;

&lt;p&gt;
&#12394;&#12395;&#12431;&#12392;&#12418;&#12354;&#12428;&#12289;nkf&#12434;&#12356;&#12428;&#12394;&#12356;&#12392;&#12384;&#12394;&#12290;apt-cyg&#12391;&#25506;&#12375;&#12383;&#12369;&#12393;&#28961;&#12363;&#12387;&#12383;&#12398;&#12391;&#25163;&#21205;&#12391;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12375;&#12383;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;tar xvfz nkf-2.1.2.tar.gz
&lt;span class="org-builtin"&gt;cd&lt;/span&gt; nkf-2.1.2/
make
make install
&lt;/pre&gt;

&lt;p&gt;
&#12381;&#12398;&#24460;&#12289;./configre&#12363;&#12425;&#12420;&#12426;&#30452;&#12375;&#12290;&amp;hellip;&#12384;&#12364;nkf&#12364;&#20170;&#12384;&#12395;&#35211;&#12388;&#12363;&#12425;&#12394;&#12356;&#12392;&#12391;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ sh ./configure --with-lispdir=~/Dropbox/dotfiles/emacs/site-lisp/sdic --infodir=~/Dropbox/dotfiles/emacs/info/sdic --with-dictdir=~/Dropbox/dict/sdic
loading cache ./config.cache
checking for a BSD compatible install... (cached) /usr/bin/install -c
checking whether build environment is sane... yes
checking whether make sets ${&lt;span class="org-variable-name"&gt;MAKE&lt;/span&gt;}... (cached) yes
checking for working aclocal... found
checking for working autoconf... found
checking for working automake... found
checking for working autoheader... found
checking for working makeinfo... found
checking for emacs... (cached) /usr/bin/emacs
&lt;/pre&gt;

&lt;p&gt;
&#12424;&#12367;&#35211;&#12427;&#12392;&#12289;cache&#12434;&#20351;&#12387;&#12390;&#12356;&#12427;&#12424;&#12358;&#12391;&#12354;&#12427;&#12290;&#12394;&#12398;&#12391;&#21066;&#38500;&#12375;&#12390;&#12522;&#12488;&#12521;&#12452;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ sh ./configure --with-lispdir=~/Dropbox/dotfiles/emacs/site-lisp/sdic --infodir=~/Dropbox/dotfiles/emacs/info/sdic --with-dictdir=~/Dropbox/dict/sdic
creating cache ./config.cache
checking for a BSD compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking whether make sets ${&lt;span class="org-variable-name"&gt;MAKE&lt;/span&gt;}... yes
checking for working aclocal... found
checking for working autoconf... found
checking for working automake... found
checking for working autoheader... found
checking for working makeinfo... found
checking for emacs... /usr/bin/emacs
checking where emacs files are in... /usr/local/share/emacs
checking where .elc files should go... ~/Dropbox/dotfiles/emacs/site-lisp/sdic
checking for nkf... /usr/local/bin/nkf
checking for perl... /usr/bin/perl
checking for gzip... /usr/bin/gzip
checking for bzip2... /usr/bin/bzip2
checking for cp... /usr/bin/cp
checking for sort... /usr/local/bin/sort
checking for EIWA Dictionary...         gene.sdic
checking for WAEI Dictionary...         jedict.sdic
updating cache ./config.cache
creating ./config.status
creating Makefile
creating lisp/Makefile
creating lisp/sdic.el
creating lisp/sample.emacs
creating install.el
&lt;/pre&gt;

&lt;p&gt;
&#12420;&#12387;&#12392;&#25104;&#21151;&#12290;&#12290;&#12290;&#12354;&#12392;&#12399;&#12362;&#27770;&#12414;&#12426;&#12398;&#12467;&#12510;&#12531;&#12489;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;make clean
make
make install
make install-info
make dict
make install-dict
&lt;/pre&gt;

&lt;p&gt;
&#12392;&#24605;&#12387;&#12383;&#12425;&#12300;make dict&#12301;&#12364;&#12358;&#12414;&#12367;&#12356;&#12363;&#12394;&#12356;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ make dict
make: Nothing to be done for &lt;span class="org-sh-quoted-exec"&gt;`dict'.&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;
&#12393;&#12358;&#12418;&#12289;*.sdic&#12399;&#12289;&#12300;make clean&#12301;&#12391;&#21066;&#38500;&#12373;&#12428;&#12394;&#12356;&#12424;&#12358;&#12384;&#12290;
&#12394;&#12398;&#12391;&#25163;&#21205;&#12391;&#21066;&#38500;&#12375;&#12390;&#12420;&#12426;&#30452;&#12375;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ rm *.sdic
$ make dict
/usr/local/bin/nkf -S -e gene.txt | /usr/bin/perl contrib/gene.perl &amp;gt; gene.sdic
/usr/bin/perl contrib/edict.perl edict &amp;gt; jedict.sdic
$ make install-dict
/bin/sh ./mkinstalldirs ~/Dropbox/dict/sdic
/usr/bin/install -c -m 644      gene.sdic ~/Dropbox/dict/sdic
/usr/bin/install -c -m 644      jedict.sdic ~/Dropbox/dict/sdic
&lt;/pre&gt;

&lt;p&gt;
M-x sdic&#12391;&#35430;&#12375;&#12383;&#12392;&#12371;&#12429;&#12289;&#33521;&#21644;&#12398;&#22793;&#25563;&#12399;&#12358;&#12414;&#12367;&#12356;&#12387;&#12383;&#12290;
e2wm&#12434;&#20351;&#12387;&#12390;&#12356;&#12427;&#12364;&#12289;&#34920;&#31034;&#12373;&#12428;&#12427;&#22580;&#25152;&#12364;&#12424;&#12429;&#12375;&#12367;&#12394;&#12356;&#12398;&#12391;
&#12394;&#12435;&#12392;&#12363;&#35373;&#23450;&#12434;&#35519;&#25972;&#12375;&#12390;&#12289;e2wm&#12398;&#12469;&#12502;&#12454;&#12451;&#12531;&#12489;&#12454;&#12395;&#12375;&#12383;&#12356;&#12392;&#12371;&#12429;&#12290;
&lt;img src="img/sdic/01.png"  alt="img/sdic/01.png" /&gt;
&lt;/p&gt;


&lt;div id="outline-container-1" class="outline-3"&gt;
&lt;h3 id="sec-1"&gt;&#21644;&#33521;&#12364;&#12358;&#12414;&#12367;&#12356;&#12363;&#12394;&#12356;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1"&gt;

&lt;p&gt;&#33521;&#21644;&#12399;&#12358;&#12414;&#12367;&#12356;&#12387;&#12383;&#12364;&#12289;&#21644;&#33521;&#12364;&#12358;&#12414;&#12367;&#12356;&#12363;&#12394;&#12356;&#12290;
&#22810;&#20998;&#21407;&#22240;&#12399;&#12289;cygwin&#12398;grep&#12364;&#26085;&#26412;&#35486;&#12434;&#26908;&#32034;&#12391;&#12365;&#12394;&#12363;&#12425;&#12384;&#12392;&#24605;&#12358;&#12290;
&#35430;&#12375;&#12395;&#19979;&#35352;&#12398;&#12467;&#12510;&#12531;&#12489;&#12434;&#35430;&#12375;&#12383;&#12392;&#12371;&#12429;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;grep &lt;span class="org-string"&gt;'&amp;#12461;&amp;#12473;&amp;#12510;&amp;#12540;&amp;#12463;'&lt;/span&gt; jedict.sdic
&amp;#65306;
&amp;lt;K&amp;gt;&amp;#12541;&amp;lt;/K&amp;gt;&amp;lt;K&amp;gt;&amp;#12367;&amp;#12426;&amp;#12363;&amp;#12360;&amp;#12375;&amp;lt;/K&amp;gt;repetition mark&lt;span class="org-keyword"&gt; in&lt;/span&gt; katakana
&amp;lt;K&amp;gt;&amp;#12542;&amp;lt;/K&amp;gt;&amp;lt;K&amp;gt;&amp;#12367;&amp;#12426;&amp;#12363;&amp;#12360;&amp;#12375;&amp;lt;/K&amp;gt;voiced repetition mark&lt;span class="org-keyword"&gt; in&lt;/span&gt; katakana
&amp;lt;K&amp;gt;&amp;#12445;&amp;lt;/K&amp;gt;&amp;lt;K&amp;gt;&amp;#12367;&amp;#12426;&amp;#12363;&amp;#12360;&amp;#12375;&amp;lt;/K&amp;gt;repetition mark&lt;span class="org-keyword"&gt; in&lt;/span&gt; hiragana
&amp;lt;K&amp;gt;&amp;#12446;&amp;lt;/K&amp;gt;&amp;lt;K&amp;gt;&amp;#12367;&amp;#12426;&amp;#12363;&amp;#12360;&amp;#12375;&amp;lt;/K&amp;gt;voiced repetition mark&lt;span class="org-keyword"&gt; in&lt;/span&gt; hiragana
&amp;lt;K&amp;gt;&amp;#12291;&amp;lt;/K&amp;gt;&amp;lt;K&amp;gt;&amp;#12362;&amp;#12394;&amp;#12376;&amp;#12367;&amp;lt;/K&amp;gt;ditto mark
&amp;lt;K&amp;gt;&amp;#20189;&amp;lt;/K&amp;gt;&amp;lt;K&amp;gt;&amp;#12393;&amp;#12358;&amp;#12376;&amp;#12423;&amp;#12358;&amp;lt;/K&amp;gt;&lt;span class="org-string"&gt;"as above"&lt;/span&gt; mark
&amp;lt;K&amp;gt;&amp;#12293;&amp;lt;/K&amp;gt;repetition of kanji (sometimes voiced)
&amp;lt;K&amp;gt;&amp;#12294;&amp;lt;/K&amp;gt;&amp;lt;K&amp;gt;&amp;#12375;&amp;#12417;&amp;lt;/K&amp;gt;end or closure mark
&amp;#65306;
&lt;/pre&gt;

&lt;p&gt;
&#12362;&#12362;&#12362;&#20840;&#37096;&#12498;&#12483;&#12488;&#12375;&#12390;&#12375;&#12414;&#12387;&#12390;&#12356;&#12427;&#12424;&#12290;&#12290;&#12290;&#12290;
cygwin&#12398;&#12467;&#12531;&#12477;&#12540;&#12523;&#12363;&#12425;grep&#12375;&#12383;&#12392;&#12365;&#12399;&#12498;&#12483;&#12488;&#12377;&#12427;&#12398;&#12384;&#12364;&#12289;
&#33258;&#20998;&#12364;&#12513;&#12452;&#12531;&#12391;&#20351;&#29992;&#12375;&#12390;&#12356;&#12427;emacs&#12399;GUI&#29256;&#12394;&#12398;&#12391;
&#35023;&#12391;&#12358;&#12372;&#12367;&#12418;&#12398;&#12364;&#12289;dos&#12395;&#12394;&#12387;&#12390;&#12356;&#12427;&#12290;&#22810;&#20998;&#12371;&#12428;&#12364;&#21407;&#22240;&#12384;&#12429;&#12358;&#12290;
&#12390;&#12371;&#12392;&#12391;&#12289;shell&#12434;dos&#12376;&#12419;&#12394;&#12367;&#12390;bash&#12395;&#12375;&#12390;&#12415;&#12427;&#12290;
&#12392;&#24605;&#12387;&#12383;&#12364;&#12289;eshell&#12376;&#12419;&#12394;&#12367;&#12390;&#12289;shell&#12399;cygwin&#12364;&#21205;&#12367;&#12424;&#12358;&#12395;&#35373;&#23450;&#12375;&#12390;&#12354;&#12387;&#12383;&#12290;
&#12391;&#12289;shell-mode&#12391;grep&#12375;&#12390;&#12415;&#12427;&#12392;&#12289;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ grep &lt;span class="org-string"&gt;'&amp;#12461;&amp;#12473;&amp;#12510;&amp;#12540;&amp;#12463;'&lt;/span&gt; jedict.sdic
grep &lt;span class="org-string"&gt;'&amp;#7;L&amp;#7;X&amp;#7;}&amp;#7;[&amp;#7;N'&lt;/span&gt; jedict.sdic
grep: Unmatched [ or [^
&lt;/pre&gt;

&lt;p&gt;
&#12371;&#12435;&#12394;&#24863;&#12376;&#12391;&#21270;&#12369;&#12390;&#12375;&#12414;&#12358;&#12290;
&lt;/p&gt;
&lt;p&gt;
 (set-buffer-process-coding-system 'utf-8-unix 'utf-8-unix)
&lt;/p&gt;


&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title type="html">DropboxでGit</title><author><name>nil</name></author><link href="http://mikio.github.com//article/2012/04/04_dropboxgit.html"/><updated>2012-04-04T20:09:00Z</updated><published>2012-04-04T20:09:00Z</published><id>article/2012/04/04_dropboxgit.html</id><category scheme="/tags/dropbox.html" term="dropbox" label="dropbox"/><category scheme="/tags/git.html" term="git" label="git"/><content type="html">&lt;p&gt;
&#12522;&#12509;&#12472;&#12488;&#12522;&#29992;&#12487;&#12451;&#12524;&#12463;&#12488;&#12522;&#12434;Dropbox&#19978;&#12395;&#20316;&#25104;&#12377;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ cd ~/Dropbox
$ mkdir git-repos
$ cd git-repos
&lt;/pre&gt;


&lt;p&gt;
&#12503;&#12525;&#12472;&#12455;&#12463;&#12488;&#12372;&#12392;&#12395;&#12522;&#12509;&#12472;&#12488;&#12522;&#12434;&#20316;&#25104;&#12377;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ mkdir mikio-lab.git
$ cd mikio-lab.git
$ git --bare init --shared
&lt;/pre&gt;

&lt;p&gt;
bare: &#20316;&#26989;&#12501;&#12449;&#12452;&#12523;&#12434;&#12388;&#12367;&#12425;&#12394;&#12356;&#12522;&#12509;&#12472;&#12488;&#12522;&#12434;&#25351;&#23450;&#12377;&#12427;
shared: &#12522;&#12509;&#12472;&#12488;&#12522;&#12434;&#20849;&#26377;&#12487;&#12451;&#12524;&#12463;&#12488;&#12522;&#12395;&#12377;&#12427;&#12290;
&lt;/p&gt;
&lt;p&gt;
&#12522;&#12509;&#12472;&#12488;&#12522;&#12398;clone&#20363;
cygwin&#12384;&#12392;&#12289;/cygdrive&#12363;&#12425;&#12398;&#12501;&#12523;&#12497;&#12473;&#12391;&#12394;&#12356;&#12392;&#12358;&#12414;&#12367;clone&#12391;&#12365;&#12394;&#12356;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ git clone /cygdrive/c/Users/mikio/Dropbox/git-repos/mikio-lab.git/
&lt;/pre&gt;


&lt;p&gt;
&#33394;&#12293;&#32232;&#38598;&#12375;&#12390;&#12289;add&#12375;&#12390;commit&#12375;&#12383;&#12425;push&#12377;&#12427;&#12290;
&#27425;&#22238;&#20197;&#38477;&#12399;&#12289;git push&#12398;&#12415;&#12391;&#33391;&#12356;&#12425;&#12375;&#12356;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ git remote add origin ~/$&lt;span class="org-variable-name"&gt;DROPBOX&lt;/span&gt;/repository/test.git &lt;span class="org-comment-delimiter"&gt;# &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#12371;&amp;#12428;&amp;#12399;&amp;#12394;&amp;#12380;&amp;#12363;&amp;#22833;&amp;#25943;&amp;#12377;&amp;#12427;&lt;/span&gt;
$ git push origin master
&lt;/pre&gt;


&lt;p&gt;
&#35430;&#12375;&#12395;&#21029;&#12487;&#12451;&#12524;&#12463;&#12488;&#12522;&#12391;clone&#12375;&#12390;&#12415;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ git clone /cygdrive/c/Users/mikio/Dropbox/git-repos/mikio-lab.git/ mikio-lab
&lt;/pre&gt;


</content></entry><entry><title type="html">SKKを導入してみる(WindowsXP)</title><author><name>nil</name></author><link href="http://mikio.github.com//article/2012/03/09_skkwindowsxp.html"/><updated>2012-03-09T18:23:00Z</updated><published>2012-03-09T18:23:00Z</published><id>article/2012/03/09_skkwindowsxp.html</id><category scheme="/tags/skk.html" term="skk" label="skk"/><category scheme="/tags/windowsxp.html" term="windowsxp" label="windowsxp"/><content type="html">&lt;p&gt;
&#21435;&#24180;&#12363;&#12425;emacs&#19978;&#12398;&#26085;&#26412;&#35486;&#20837;&#21147;&#12395;&#12399;DDSKK&#12434;&#20351;&#12356;&#32154;&#12369;&#12390;&#12356;&#12427;&#12398;&#12391;&#12377;&#12364;&#12289;
emacs&#12398;&#22806;&#12398;&#19990;&#30028;&#12391;&#12399;googlIME(or MOZC)&#12434;&#20351;&#29992;&#12375;&#12390;&#12356;&#12414;&#12375;&#12383;&#12290;
&#28357;&#22810;&#12395;&#22806;&#12398;&#19990;&#30028;&#12391;&#27963;&#21205;&#12375;&#12394;&#12356;&#12383;&#12417;&#12289;&#21029;&#12395;&#12371;&#12428;&#12391;&#19981;&#33258;&#30001;&#12399;&#12394;&#12363;&#12387;&#12383;&#12398;&#12391;&#12377;&#12364;&#12289;
&#12405;&#12392;&#26368;&#36817;&#12398;WindwosSKK&#30028;&#38536;&#12434;&#35519;&#12409;&#12390;&#12415;&#12427;&#12392;&#12289;&#20170;&#12414;&#12391;SkkIME&#34892;&#19968;&#25246;&#12384;&#12387;&#12383;&#12398;&#12395;
&#12356;&#12367;&#12388;&#12363;&#12463;&#12521;&#12452;&#12450;&#12531;&#12488;&#12364;&#22679;&#12360;&#12390;&#12414;&#12377;!&#12290;&#12290;&#12290;&#12392;&#12356;&#12358;&#12371;&#12392;&#12391;&#12356;&#12367;&#12388;&#12363;&#26908;&#35388;&#12375;&#12390;&#12415;&#12390;
&#26368;&#32066;&#30340;&#12395;&#19979;&#35352;&#12398;&#32068;&#12415;&#21512;&#12431;&#12379;&#12434;&#20351;&#29992;&#12377;&#12427;&#12371;&#12392;&#12395;&#12375;&#12414;&#12375;&#12383;&#12290;&#24555;&#36969;!&#24555;&#36969;&#12540;!
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://code.google.com/p/corvus-skk/"&gt;corvus-SKK(IME)&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.megadriver.info/~fumi/wceskkserv/"&gt;wceSKKServ(&#36766;&#26360;&#12469;&#12540;&#12496;&#12540;)&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://d.hatena.ne.jp/hitode909/20110421/1303274561"&gt;google-ime-skk(&#36766;&#26360;&#12469;&#12540;&#12496;&#12540;)&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;
&#12392;&#12356;&#12358;&#12371;&#12392;&#12391;&#20197;&#19979;&#12395;&#35519;&#12409;&#12383;&#20869;&#23481;&#12434;&#12513;&#12514;&#12375;&#12390;&#12362;&#12365;&#12414;&#12377;&#12290;
&lt;/p&gt;

&lt;div id="outline-container-1" class="outline-3"&gt;
&lt;h3 id="sec-1"&gt;corvus-SKK&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1"&gt;

&lt;ul&gt;
&lt;li&gt;&#26368;&#36817;&#12391;&#12365;&#12383;&#12425;&#12375;&#12356;Windows&#29992;&#12398;FEP
&lt;/li&gt;
&lt;li&gt;&#26368;&#36817;&#12398;FEP&#12384;&#12364;WindowsXP&#12391;&#12418;&#21205;&#12367;
&lt;/li&gt;
&lt;li&gt;&#36766;&#26360;&#12364;&#29420;&#33258;&#24418;&#24335;
&lt;ul&gt;
&lt;li&gt;&#21462;&#12426;&#36796;&#12415;&#12508;&#12479;&#12531;&#12434;&#25276;&#12375;&#12383;&#12479;&#12452;&#12511;&#12531;&#12464;&#12391;&#36766;&#26360;&#12364;&#29420;&#33258;&#24418;&#24335;&#12395;&#22793;&#25563;&#12373;&#12428;&#12427;&#12398;&#12391;&#12289;&#12371;&#12428;&#12399;&#36870;&#12395;&#38263;&#25152;&#12395;&#12394;&#12387;&#12383;&#12290;
&lt;/li&gt;
&lt;li&gt;emacs&#20596;&#12398;&#12518;&#12540;&#12470;&#12540;&#36766;&#26360;&#12434;&#30452;&#25509;&#25351;&#23450;&#12375;&#12390;&#12418;&#21029;&#12501;&#12449;&#12452;&#12523;&#12395;&#12394;&#12427;&#12398;&#12391;&#12289;&#12463;&#12521;&#12452;&#12450;&#12531;&#12488;&#21336;&#20301;&#12391;&#31478;&#21512;&#12379;&#12378;&#12395;&#12377;&#12416;&#12290;
&lt;/li&gt;
&lt;/ul&gt;

&lt;/li&gt;
&lt;li&gt;&#12469;&#12540;&#12496;&#12540;&#12364;&#12402;&#12392;&#12388;&#12375;&#12363;&#20351;&#12360;&#12394;&#12356;
&lt;ul&gt;
&lt;li&gt;wceSKKServ&#12391;&#12354;&#12428;&#12400;&#12289;&#35079;&#25968;&#12398;&#36766;&#26360;&#12434;&#25201;&#12360;&#12427;&#12398;&#12391;&#21839;&#38988;&#12394;&#12375;
&lt;/li&gt;
&lt;/ul&gt;

&lt;/li&gt;
&lt;li&gt;&#12488;&#12522;&#12460;&#12461;&#12540;&#12364;&#12300;M-&#28450;&#23383;&#12461;&#12540;&#12301;&#12375;&#12363;&#12358;&#12369;&#12388;&#12369;&#12390;&#12362;&#12425;&#12378;&#12289;&#12300;&#28450;&#23383;&#12301;&#12461;&#12540;&#12398;&#12415;&#12391;&#12394;&#12356;
&lt;/li&gt;
&lt;li&gt;&#29420;&#33258;&#12398;&#12469;&#12540;&#12496;(corvuserv)&#12434;&#20351;&#29992;&#12375;&#12390;&#12356;&#12427;&#12364;&#12289;&#12414;&#12384;&#23436;&#25104;&#24230;&#12364;&#20302;&#12381;&#12358;&#12290;
&lt;/li&gt;
&lt;li&gt;StickyShift&#12364;&#20351;&#12360;&#12427;!
&lt;/li&gt;
&lt;/ul&gt;



&lt;/div&gt;

&lt;div id="outline-container-1-1" class="outline-4"&gt;
&lt;h4 id="sec-1-1"&gt;&#12300;;&#12301;&#12395;&#12424;&#12427;StickyShift&#12434;&#23455;&#29694;&#12377;&#12427;&#26041;&#27861;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-1-1"&gt;

&lt;ul&gt;
&lt;li&gt;&#35373;&#23450;&#30011;&#38754;&#12391;[&#20301;&#32622;] &#12479;&#12502;&#12391;&#19979;&#35352;&#12398;&#35373;&#23450;&#12434;&#26045;&#12377;&#12290;
&lt;/li&gt;
&lt;/ul&gt;




&lt;pre class="src src-sh"&gt;&amp;#38283;&amp;#22987;&amp;#65306;;
&amp;#20195;&amp;#26367;&amp;#65306;&amp;#12394;&amp;#12375;
&amp;#36865;&amp;#12426;&amp;#65306;&amp;#12394;&amp;#12375;
&lt;/pre&gt;



&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-2" class="outline-3"&gt;
&lt;h3 id="sec-2"&gt;SKK-IME1.5&#25913;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2"&gt;

&lt;ul&gt;
&lt;li&gt;&#23455;&#12399;&#38283;&#30330;&#12364;&#23436;&#20102;&#12375;&#12390;&#12375;&#12414;&#12387;&#12390;&#12362;&#12426;&#12289;&#29694;&#22312;&#12399;&#12289;&#12300;SKK&#26085;&#26412;&#35486;&#20837;&#21147;FEP&#12301;&#12395;&#21463;&#12369;&#32153;&#12364;&#12428;&#12390;&#12356;&#12427;&#12290;  
&lt;/li&gt;
&lt;li&gt;&#12383;&#12384;&#12375;&#12289;&#12371;&#12385;&#12425;&#12399;xp&#12391;&#12399;&#12289;&#19981;&#23433;&#23450;&#12391;&#20351;&#12356;&#12418;&#12398;&#12395;&#12394;&#12425;&#12394;&#12356;&#12290;
&lt;/li&gt;
&lt;/ul&gt;



&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-3" class="outline-3"&gt;
&lt;h3 id="sec-3"&gt;wceSKKServ&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-3"&gt;

&lt;ul&gt;
&lt;li&gt;wceSKKServ&#12392;&#12356;&#12358;&#12469;&#12540;&#12496;&#12540;&#12434;&#20351;&#12387;&#12390;&#12289;ddskk&#12392;&#36766;&#26360;&#12398;&#20849;&#26377;&#12434;&#22259;&#12427;&#12290;
&lt;/li&gt;
&lt;li&gt;wceSKKServ&#12391;&#20351;&#29992;&#12377;&#12427;&#36766;&#26360;&#12399;&#12289;euc-jp&#12375;&#12363;&#21463;&#20184;&#12394;&#12356;&#27169;&#27096;&#12290;
&lt;/li&gt;
&lt;li&gt;&#12469;&#12540;&#12496;&#12395;&#12399;&#12518;&#12540;&#12470;&#36766;&#26360;&#12399;&#25351;&#23450;&#12391;&#12365;&#12394;&#12356;&#12290;
&lt;/li&gt;
&lt;li&gt;&#24467;&#12387;&#12390;&#12289;ddskk&#12391;&#32946;&#12390;&#12383;&#36766;&#26360;&#12434;skkIME&#12391;&#12418;&#21033;&#29992;&#12377;&#12427;&#12392;&#12356;&#12358;&#12371;&#12392;&#12399;&#12391;&#12365;&#12394;&#12356;&#12290;
&lt;/li&gt;
&lt;li&gt;&#12393;&#12358;&#12375;&#12390;&#12418;&#12375;&#12383;&#12356;&#22580;&#21512;&#12399;&#12289;&#12467;&#12500;&#12540;&#12375;&#12383;&#12418;&#12398;&#12434;&#20351;&#12358;&#12290;
&lt;/li&gt;
&lt;li&gt;&#20363;&#12360;&#12400;&#12473;&#12479;&#12540;&#12488;&#12450;&#12483;&#12503;&#12391;&#12518;&#12540;&#12470;&#12540;&#36766;&#26360;&#12434;&#12467;&#12500;&#12540;&#12377;&#12427;&#12392;&#12363;&#12290;
&lt;/li&gt;
&lt;li&gt;&#12469;&#12540;&#12496;&#12540;&#12434;&#20351;&#12358;&#12371;&#12392;&#12398;&#12513;&#12522;&#12483;&#12488;&#12399;&#12289;&#12469;&#12540;&#12496;&#20596;&#12391;&#35079;&#25968;&#12398;&#36766;&#26360;&#12434;&#35373;&#23450;&#12375;&#12390;&#12362;&#12369;&#12400;&#12289;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&#12356;&#12385;&#12356;&#12385;&#35079;&#25968;&#12398;&#35373;&#23450;&#12434;&#12379;&#12378;&#12392;&#12418;&#12289;&#12463;&#12521;&#12452;&#12450;&#12531;&#12488;&#20596;(emacs, skkime&#12394;&#12393;)&#12391;&#12399;&#12289;&#12383;&#12384;&#12402;&#12392;&#12388;&#12398;&#35373;&#23450;&#12391;&#12377;&#12416;&#12290;  
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&#12469;&#12540;&#12496;&#12434;&#20351;&#12358;&#12513;&#12522;&#12483;&#12488;&#12392;&#12375;&#12390;&#12399;&#12289;&#20197;&#19979;&#12364;&#12354;&#12427;&#12290;
&lt;ul&gt;
&lt;li&gt;linux&#29872;&#22659;&#12395;&#12362;&#12356;&#12390;&#36766;&#26360;&#12434;&#20849;&#29992;&#12377;&#12427;&#12371;&#12392;&#12391;&#12513;&#12514;&#12522;&#12398;&#31680;&#32004;
&lt;/li&gt;
&lt;li&gt;&#20104;&#12417;&#12469;&#12540;&#12496;&#12540;&#12392;&#12375;&#12390;&#31435;&#12385;&#12354;&#12370;&#12390;&#12362;&#12367;&#12371;&#12392;&#12391;&#12289;&#36215;&#21205;&#12364;&#12473;&#12512;&#12540;&#12474;&#12395;&#12394;&#12427;
&lt;/li&gt;
&lt;li&gt;&#12469;&#12540;&#12496;&#12540;&#20596;&#12395;&#35079;&#25968;&#12398;&#36766;&#26360;&#12434;&#30331;&#37682;&#12377;&#12427;&#12371;&#12392;&#12391;&#12289;&#12463;&#12521;&#12452;&#12450;&#12531;&#12488;&#20596;&#12391;&#12399;&#12289;
   &#12381;&#12398;&#12469;&#12540;&#12496;&#12540;&#12434;&#12402;&#12392;&#12388;&#35373;&#23450;&#12377;&#12427;&#12384;&#12369;&#12391;&#35079;&#25968;&#12398;&#36766;&#26360;&#12434;&#25351;&#23450;&#12375;&#12383;&#12371;&#12392;&#12395;&#12394;&#12426;&#12289;&#35373;&#23450;&#12364;&#27005;&#12395;&#12394;&#12427;&#12290;
&lt;/li&gt;
&lt;/ul&gt;

&lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-4" class="outline-3"&gt;
&lt;h3 id="sec-4"&gt;google-ime-skk&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-4"&gt;

&lt;p&gt;&#26368;&#36817;&#12399;&#12289;GoogleIME&#12364;&#12399;&#12420;&#12387;&#12390;&#12356;&#12427;&#12398;&#12391;
SKK&#12434;&#12371;&#12398;&#12414;&#12414;&#20351;&#12356;&#32154;&#12369;&#12390;&#12356;&#12356;&#12398;&#12363;&#33509;&#24178;&#27671;&#12398;&#36855;&#12356;&#12364;&#12354;&#12426;&#12414;&#12375;&#12383;&#12364;
Google-IME-SKK&#12398;&#23384;&#22312;&#12434;&#30693;&#12387;&#12390;&#12289;&#12381;&#12398;&#19981;&#23433;&#12418;&#21561;&#12387;&#39131;&#12403;&#12414;&#12375;&#12383;&#12290;
&#12394;&#12380;&#12394;&#12425;&#12289;SKK&#12363;&#12425;Google&#12398;&#36766;&#26360;&#12364;&#20351;&#12360;&#12427;&#12363;&#12425;&#12391;&#12377;&#12290;
&#12371;&#12428;&#12391;&#12289;&#12493;&#12483;&#12488;&#12391;&#35441;&#38988;&#12398;&#35328;&#33865;&#12392;&#12363;&#12418;&#31777;&#21336;&#12395;&#22793;&#25563;&#21487;&#33021;&#12384;&#12375;
&#12525;&#12540;&#12459;&#12523;&#12398;&#36766;&#26360;&#12391;&#12498;&#12483;&#12488;&#12375;&#12394;&#12363;&#12387;&#12383;&#22580;&#21512;&#12391;&#12418;&#12289;googleIME&#12364;&#22823;&#25269;&#25342;&#12387;&#12390;&#12367;&#12428;&#12414;&#12377;&#12290;
&#12414;&#12383;&#12289;Linux&#19978;&#12398;GoogleIEM&#12391;&#12354;&#12427;MOZC&#12398;&#22580;&#21512;&#12289;&#30906;&#12363;&#12493;&#12483;&#12488;&#12398;&#12487;&#12540;&#12479;&#12399;&#21453;&#26144;&#12373;&#12428;&#12394;&#12356;&#12398;&#12391;&#12377;&#12364;&#12289;
&#12371;&#12398;&#12469;&#12540;&#12496;&#12434;&#20351;&#12360;&#12400;&#12289;&#12381;&#12398;&#21839;&#38988;&#12418;&#35299;&#27770;&#12375;&#12414;&#12377;&#12290;
&#12473;&#12496;&#12521;&#12471;&#12473;!
&lt;/p&gt;

&lt;/div&gt;

&lt;div id="outline-container-4-1" class="outline-4"&gt;
&lt;h4 id="sec-4-1"&gt;xp&#29872;&#22659;&#12391;&#12398;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-4-1"&gt;


&lt;p&gt;
gem&#12434;&#20837;&#12428;&#12390;&#12363;&#12425;&#19979;&#35352;&#12391;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12377;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;dos&amp;gt; gem install google-ime-skk
dos&amp;gt; gem install json
&lt;/pre&gt;


&lt;p&gt;
&#19979;&#35352;&#12398;&#12424;&#12358;&#12394;&#12496;&#12483;&#12481;&#12501;&#12449;&#12452;&#12523;&#12434;&#20316;&#12387;&#12390;&#12473;&#12479;&#12540;&#12488;&#12450;&#12483;&#12503;&#12395;&#30331;&#37682;&#12375;&#12390;&#12362;&#12367;&#12290;
&#12300;gskk.bat&#12301;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;google-ime-skk.bat
&lt;/pre&gt;


&lt;p&gt;
&#12467;&#12531;&#12477;&#12540;&#12523;&#12364;&#34920;&#31034;&#12373;&#12428;&#12427;&#12398;&#12364;&#23244;&#12392;&#12356;&#12358;&#21521;&#12365;&#12418;&#12354;&#12427;&#12384;&#12429;&#12358;&#12364;
&#33258;&#20998;&#12398;&#22580;&#21512;&#12399;&#12289;&#12354;&#12392;&#12391;&#12525;&#12464;&#12364;&#35211;&#12428;&#12383;&#12411;&#12358;&#12364;&#23305;&#12375;&#12356;&#12371;&#12392;&#12364;&#22810;&#12356;&#12398;&#12391;
&#12381;&#12398;&#12414;&#12414;&#12395;&#12375;&#12390;&#12356;&#12427;&#12290;
&lt;/p&gt;
&lt;p&gt;
&#12414;&#12383;&#12289;&#12496;&#12540;&#12481;&#12515;&#12523;&#12487;&#12473;&#12463;&#12488;&#12483;&#12503;(WinDeskwide)&#12434;&#20351;&#12387;&#12390;&#12356;&#12427;&#12398;&#12391;
&#19981;&#35201;&#12394;&#12454;&#12451;&#12531;&#12489;&#12454;&#12399;&#20840;&#37096;&#12381;&#12387;&#12385;&#12395;&#38598;&#12417;&#12390;&#12473;&#12483;&#12461;&#12522;&#12391;&#12365;&#12427;&#12398;&#12391;&#21839;&#38988;&#12394;&#12356;&#12290;
&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title type="html">Clojureでゲームプログラミングその1 実験編</title><author><name>nil</name></author><link href="http://mikio.github.com//article/2011/11/09_clojure1.html"/><updated>2011-11-09T19:29:00Z</updated><published>2011-11-09T19:29:00Z</published><id>article/2011/11/09_clojure1.html</id><category scheme="/tags/clojure.html" term="clojure" label="clojure"/><category scheme="/tags/gamedev.html" term="gamedev" label="gamedev"/><content type="html">&lt;div id="outline-container-1" class="outline-3"&gt;
&lt;h3 id="sec-1"&gt;&#12399;&#12376;&#12417;&#12395;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1"&gt;


&lt;p&gt;
Lisp&#12391;GAME&#12388;&#12367;&#12429;&#12358;&#12363;&#12394;&#12392;&#12290;
&#26368;&#21021;CommonLisp&#12391;&#12388;&#12367;&#12429;&#12358;&#12363;&#12394;&#12392;&#24605;&#12387;&#12383;&#12369;&#12393;&#12418;&#12289;&#29694;&#26178;&#28857;&#12391;CommonLisp&#12392;Clojure(+Java)&#12434;&#27604;&#36611;&#12375;&#12383;&#12392;&#12365;&#12395;
&#24460;&#32773;&#12398;&#12411;&#12358;&#12364;&#35443;&#12375;&#12356;&#12363;&#12394;&#12392;&#12356;&#12358;&#12371;&#12392;&#12391;&#12289;&#12414;&#12378;&#12399;Clojure&#12391;&#12388;&#12367;&#12387;&#12390;&#12415;&#12390;&#12289;&#33853;&#12385;&#30528;&#12356;&#12383;&#12425;CommonLisp&#12391;&#12418;&#12388;&#12367;&#12387;&#12390;&#12415;&#12424;&#12358;&#12363;&#12394;&#12392;&#12290;
&lt;/p&gt;
&lt;p&gt;
&#12392;&#12426;&#12354;&#12360;&#12378;&#12289;&#19979;&#35352;&#12398;&#27969;&#12428;&#12391;&#12289;&#30011;&#20687;&#12434;&#34920;&#31034;&#12375;&#12390;&#21205;&#12363;&#12377;&#12392;&#12371;&#12429;&#12414;&#12391;&#12481;&#12515;&#12524;&#12531;&#12472;&#12375;&#12390;&#12415;&#12427;&#12290;
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&#12454;&#12451;&#12531;&#12489;&#12454;&#34920;&#31034;
&lt;/li&gt;
&lt;li&gt;&#30011;&#20687;&#34920;&#31034;
&lt;/li&gt;
&lt;li&gt;&#12513;&#12452;&#12531;&#12523;&#12540;&#12503;&#12398;&#23455;&#29694;
&lt;/li&gt;
&lt;li&gt;&#30011;&#20687;&#31227;&#21205;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;
&#12418;&#12385;&#12429;&#12435;&#21069;&#22238;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12375;&#12383;SLIME&#12392;Leiningen&#12434;&#20351;&#12387;&#12390;&#20316;&#26989;&#12375;&#12414;&#12377;&#12424;&#12290;
&#12385;&#12394;&#12415;&#12395;Clojure&#12391;&#12300;&#12418;&#12398;&#12301;&#12434;&#20316;&#12427;&#12398;&#12399;&#21021;&#12417;&#12390;&#12394;&#12398;&#12391;&#12289;&#12507;&#12531;&#12488;&#25163;&#25506;&#12426;&#12391;&#12377;&#12290;
&#12375;&#12363;&#12418;Clojure&#12391;Game&#12503;&#12525;&#12464;&#12521;&#12511;&#12531;&#12464;&#12398;&#24773;&#22577;&#12387;&#12390;&#12411;&#12392;&#12435;&#12393;&#12394;&#12356;&#12435;&#12384;&#12424;&#12394;&#12290;&#12373;&#12390;&#12290;
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-2" class="outline-3"&gt;
&lt;h3 id="sec-2"&gt;&#12454;&#12451;&#12531;&#12489;&#12454;&#34920;&#31034;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2"&gt;

&lt;p&gt;Clojure&#12391;&#12398;GUI&#12399;&#12373;&#12387;&#12401;&#12426;&#12431;&#12363;&#12425;&#12435;&#12369;&#12393;&#12418;&#12289;&#12392;&#12426;&#12354;&#12360;&#12378;Java&#12398;&#12469;&#12531;&#12503;&#12523;&#12392;&#12363;&#12434;&#38972;&#12426;&#12395;&#12454;&#12451;&#12531;&#12489;&#12454;&#12434;&#34920;&#31034;&#12375;&#12390;&#12415;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-Clojure"&gt;(import (javax.swing JFrame))
(def frame (JFrame. &lt;span class="org-string"&gt;"Clojure SampleGame"&lt;/span&gt;)) 
(doto frame
(.setSize 640 480)
  (.setVisible true))
&lt;/pre&gt;

&lt;p&gt;
&#12391;&#12383;&#12290;&#31777;&#21336;&#12377;&#12366;&#12427;&#65281;&#32080;&#27083;&#24863;&#21205;&#12375;&#12414;&#12377;&#12290;
&lt;img src="img/clojure-game01/01.png"  alt="img/clojure-game01/01.png" /&gt;
&lt;/p&gt;
&lt;p&gt;
&#27425;&#12399;&#30011;&#20687;&#12434;&#34920;&#31034;&#12375;&#12390;&#12415;&#12427;&#12290;
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-3" class="outline-3"&gt;
&lt;h3 id="sec-3"&gt;&#30011;&#20687;&#34920;&#31034;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-3"&gt;


&lt;p&gt;
&#12414;&#12378;&#12399;&#12289;&#30011;&#20687;&#12501;&#12449;&#12452;&#12523;&#12398;&#35501;&#12415;&#36796;&#12415;&#12384;&#12290;&#19979;&#35352;&#12398;&#12467;&#12540;&#12489;&#12434;clojure&#12391;&#21205;&#12363;&#12375;&#12390;&#12415;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;&lt;span class="org-preprocessor"&gt;java.awt.image.BufferedImage&lt;/span&gt; bimage&lt;span class="org-comment-delimiter"&gt;;&lt;/span&gt;
image = &lt;span class="org-preprocessor"&gt;javax.imageio.ImageIO.read&lt;/span&gt;(new &lt;span class="org-preprocessor"&gt;java.io.File&lt;/span&gt;(&lt;span class="org-string"&gt;"hoge.png"&lt;/span&gt;))&lt;span class="org-comment-delimiter"&gt;;&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;
&#19979;&#35352;&#12398;&#30011;&#20687;&#12434;&#34920;&#31034;&#12375;&#12390;&#12415;&#12427;&#12290;&#12371;&#12428;&#12399;&#26132;&#20316;&#12387;&#12383;&#12466;&#12540;&#12512;&#12391;&#20351;&#29992;&#12375;&#12383;&#12418;&#12398;&#12391;&#12450;&#12491;&#12513;&#12540;&#12471;&#12519;&#12531;&#12497;&#12479;&#12540;&#12531;&#12418;&#12399;&#12356;&#12387;&#12390;&#12427;&#12290;
&lt;img src="img/clojure-game01/gai.png"  alt="img/clojure-game01/gai.png" /&gt;
&lt;/p&gt;
&lt;p&gt;
&#30011;&#20687;&#12501;&#12449;&#12452;&#12523;&#12399;&#12503;&#12525;&#12472;&#12455;&#12463;&#12488;&#30452;&#19979;&#12395;&#12362;&#12356;&#12390;&#12354;&#12427;&#65288;REPL&#12434;&#36215;&#21205;&#12375;&#12383;&#12487;&#12451;&#12524;&#12463;&#12488;&#12522;)&#12290;
&#22806;&#37096;&#12501;&#12449;&#12452;&#12523;&#12399;&#12503;&#12525;&#12472;&#12455;&#12463;&#12488;&#12523;&#12540;&#12488;&#12363;&#12425;&#12398;&#30456;&#23550;&#12497;&#12473;&#12391;OK&#12398;&#12424;&#12358;&#12391;&#12354;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(&lt;span class="org-builtin"&gt;import&lt;/span&gt; (java.awt.image &lt;span class="org-preprocessor"&gt;BufferedImage&lt;/span&gt;))
(&lt;span class="org-builtin"&gt;import&lt;/span&gt; (javax.imageio &lt;span class="org-preprocessor"&gt;ImageIO&lt;/span&gt;))
(&lt;span class="org-builtin"&gt;import&lt;/span&gt; (java.io &lt;span class="org-preprocessor"&gt;File&lt;/span&gt;))
(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;image&lt;/span&gt; (&lt;span class="org-preprocessor"&gt;ImageIO/read&lt;/span&gt; (&lt;span class="org-preprocessor"&gt;File.&lt;/span&gt; &lt;span class="org-string"&gt;"gai.png"&lt;/span&gt;))) 
&lt;/pre&gt;

&lt;p&gt;
&#12392;&#12426;&#12354;&#12360;&#12378;&#12358;&#12414;&#12367;&#35501;&#12415;&#36796;&#12417;&#12383;&#12387;&#12413;&#12356;&#12398;&#12391;&#12289;&#12454;&#12451;&#12531;&#12489;&#12454;&#12395;&#34920;&#31034;&#12375;&#12390;&#12415;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(&lt;span class="org-builtin"&gt;import&lt;/span&gt; (java.awt &lt;span class="org-preprocessor"&gt;Graphics&lt;/span&gt;))
(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;graphics&lt;/span&gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; frame (&lt;span class="org-preprocessor"&gt;getGraphics&lt;/span&gt;)))
(&lt;span class="org-builtin"&gt;doto&lt;/span&gt; graphics
  (&lt;span class="org-preprocessor"&gt;.drawImage&lt;/span&gt; image 0 0 frame))
&lt;/pre&gt;

&lt;p&gt;
&#12391;&#12383;&#65281;
&lt;img src="img/clojure-game01/02.png"  alt="img/clojure-game01/02.png" /&gt;
&lt;/p&gt;
&lt;p&gt;
&#32218;&#12418;&#12363;&#12369;&#12383;&#12424;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(&lt;span class="org-builtin"&gt;..&lt;/span&gt; graphics (&lt;span class="org-preprocessor"&gt;drawLine&lt;/span&gt; 0 0 640 480))
&lt;/pre&gt;


&lt;p&gt;
&lt;img src="img/clojure-game01/03.png"  alt="img/clojure-game01/03.png" /&gt;
&lt;/p&gt;

&lt;p&gt;
&#12392;&#12371;&#12429;&#12391;&#12371;&#12428;&#12414;&#12391;&#12398;&#30011;&#20687;&#34920;&#31034;&#12399;&#12479;&#12452;&#12488;&#12523;&#12496;&#12540;&#12395;&#12417;&#12426;&#36796;&#12435;&#12391;&#12375;&#12414;&#12387;&#12390;&#12356;&#12427;&#12290;
&#12371;&#12428;&#12399;&#25551;&#30011;&#21629;&#20196;&#12398;&#24231;&#27161;&#21407;&#28857;&#12364;&#12289;&#12454;&#12451;&#12531;&#12489;&#12454;&#12381;&#12398;&#12418;&#12398;&#24038;&#19978;&#12434;&#21407;&#28857;&#12392;&#12375;&#12390;&#12356;&#12427;&#12383;&#12417;&#12391;&#12354;&#12427;&#12290;
&#12371;&#12428;&#12434;&#22238;&#36991;&#12377;&#12427;&#12395;&#12399;&#12289;Graphics#translate&#12434;&#21628;&#12403;&#20986;&#12377;&#12290;
&lt;/p&gt;

&lt;/div&gt;

&lt;div id="outline-container-3-1" class="outline-4"&gt;
&lt;h4 id="sec-3-1"&gt;&#20301;&#32622;&#35519;&#25972;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-3-1"&gt;

&lt;p&gt;&#12378;&#12428;&#12398;&#21407;&#22240;&#12391;&#12354;&#12427;&#12479;&#12452;&#12488;&#12523;&#12496;&#12540;&#12420;&#26528;&#12362;&#24773;&#22577;&#12399;&#12289;java.awt.Insets&#12392;&#12358;&#12356;&#12463;&#12521;&#12473;&#12395;&#26684;&#32013;&#12373;&#12428;&#12390;&#12356;&#12427;&#12290;
&#12371;&#12428;&#12399;Jframe#getInsets&#12513;&#12477;&#12483;&#12489;&#12391;&#21462;&#24471;&#12391;&#12356;&#12427;&#12398;&#12391;&#12289;&#26463;&#32283;&#12375;&#12390;&#12362;&#12367;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;insets&lt;/span&gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; frame &lt;span class="org-preprocessor"&gt;getInsets&lt;/span&gt;)) 
&lt;/pre&gt;


&lt;p&gt;
&#30906;&#35469;&#12290;&#12381;&#12428;&#12387;&#12413;&#12356;&#20516;&#12364;&#20837;&#12387;&#12390;&#12356;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;user&amp;gt; insets
#&amp;lt;&lt;span class="org-preprocessor"&gt;Insets&lt;/span&gt; &lt;span class="org-preprocessor"&gt;java.awt.Insets&lt;/span&gt;[top=24,left=1,bottom=5,right=1]&amp;gt;
&lt;/pre&gt;


&lt;p&gt;
&#12391;&#12399;&#12289;&#12371;&#12398;insets&#12434;&#20351;&#12387;&#12390;&#25551;&#30011;&#29992;&#21407;&#28857;&#12434;&#12378;&#12425;&#12375;&#12390;&#12415;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(&lt;span class="org-builtin"&gt;..&lt;/span&gt; frame (&lt;span class="org-preprocessor"&gt;setVisible&lt;/span&gt; true))
(&lt;span class="org-builtin"&gt;..&lt;/span&gt; graphics (translate (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets left) (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets top)))
(&lt;span class="org-builtin"&gt;..&lt;/span&gt; graphics (&lt;span class="org-preprocessor"&gt;clearRect&lt;/span&gt; 0 0 640 480))
(&lt;span class="org-builtin"&gt;..&lt;/span&gt; graphics (&lt;span class="org-preprocessor"&gt;drawImage&lt;/span&gt; image 0 0 frame))
&lt;/pre&gt;

&lt;p&gt;
&lt;img src="img/clojure-game01/04.png"  alt="img/clojure-game01/04.png" /&gt; 
&lt;/p&gt;
&lt;p&gt;
&#12371;&#12428;&#12391;&#24038;&#19978;&#21407;&#28857;&#12364;&#12289;&#12378;&#12428;&#12390;&#12356;&#12356;&#20855;&#21512;&#12395;&#34920;&#31034;&#12373;&#12428;&#12383;&#12290;
&lt;/p&gt;
&lt;p&gt;
insents&#12434;&#21033;&#29992;&#12375;&#12383;&#12388;&#12356;&#12391;&#12395;&#35500;&#26126;&#12290;
&#23455;&#12399;&#12454;&#12451;&#12531;&#12489;&#12454;&#12469;&#12452;&#12474;&#12391;640x480&#12434;&#25351;&#23450;&#12375;&#12390;&#12356;&#12427;&#12369;&#12428;&#12393;&#12418;&#12289;
&#12479;&#12452;&#12488;&#12523;&#12496;&#12540;&#12420;&#26528;&#12398;&#12469;&#12452;&#12474;&#12364;&#12354;&#12427;&#12383;&#12417;&#12289;&#25551;&#30011;&#38936;&#22495;&#12399;640x480&#12424;&#12426;&#12418;&#12385;&#12423;&#12387;&#12392;&#23567;&#12373;&#12356;&#12290;
&#12394;&#12398;&#12391;&#12289;&#20363;&#12360;&#12400;640x480&#12385;&#12423;&#12358;&#12393;&#12398;&#12469;&#12452;&#12474;&#12398;&#30011;&#20687;&#12434;&#34920;&#31034;&#12375;&#12424;&#12358;&#12392;&#12375;&#12390;&#12418;&#23569;&#12375;&#20999;&#12428;&#12390;&#12375;&#12414;&#12387;&#12383;&#12426;&#12377;&#12427;&#12290;
&#12392;&#12356;&#12358;&#12371;&#12392;&#12391;&#12289;insents&#12434;&#21033;&#29992;&#12375;&#12390;&#25551;&#30011;&#38936;&#22495;&#12364;&#32020;&#31883;&#12395;640x480&#20284;&#12394;&#12427;&#12424;&#12358;&#12395;&#35519;&#25972;&#12377;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(&lt;span class="org-builtin"&gt;doto&lt;/span&gt; frame
    (&lt;span class="org-preprocessor"&gt;.setSize&lt;/span&gt; (&lt;span class="org-variable-name"&gt;+&lt;/span&gt; 640 (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets left) (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets right)) (&lt;span class="org-variable-name"&gt;+&lt;/span&gt; 480 (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets top) (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets bottom)))
    (&lt;span class="org-preprocessor"&gt;.setVisible&lt;/span&gt; true))
&lt;/pre&gt;

&lt;p&gt;
&#20197;&#19978;&#12391;&#25551;&#30011;&#38936;&#22495;&#12398;&#32048;&#12363;&#12356;&#35519;&#25972;&#12364;&#23436;&#20102;&#12375;&#12383;&#12290;
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-3-2" class="outline-4"&gt;
&lt;h4 id="sec-3-2"&gt;&#30011;&#20687;&#12398;&#19968;&#37096;&#12434;&#34920;&#31034;&#12375;&#12383;&#12356;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-3-2"&gt;

&lt;p&gt;&#12392;&#12371;&#12429;&#12391;&#12289;&#29694;&#29366;&#12384;&#12392;&#12450;&#12491;&#12513;&#12497;&#12479;&#12540;&#12531;&#12364;&#12377;&#12409;&#12390;&#34920;&#31034;&#12373;&#12428;&#12390;&#12356;&#12390;&#12415;&#12387;&#12392;&#12418;&#12394;&#12356;&#12398;&#12391;
&#19968;&#37096;&#12384;&#12369;&#12434;&#34920;&#31034;&#12375;&#12383;&#12356;&#12290;
&#12371;&#12398;&#35201;&#20214;&#12434;&#28288;&#12383;&#12377;&#12395;&#12399;&#12289;Graphics#DrawImage&#12391;&#19979;&#35352;&#12398;&#12424;&#12358;&#12395;&#24341;&#25968;&#12434;&#25351;&#23450;&#12377;&#12428;&#12400;&#33391;&#12356;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(&lt;span class="org-preprocessor"&gt;.drawImage&lt;/span&gt;
    image   &lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#25551;&amp;#30011;&amp;#30011;&amp;#20687;&lt;/span&gt;
    0 0     &lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#36578;&amp;#36865;&amp;#20808;&amp;#12398;&amp;#24038;&amp;#19978;&amp;#24231;&amp;#27161;&lt;/span&gt;
    32 32   &lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#36578;&amp;#36865;&amp;#20808;&amp;#12398;&amp;#21491;&amp;#19979;&amp;#24231;&amp;#27161;&lt;/span&gt;
    0 0     &lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#30011;&amp;#20687;&amp;#20803;&amp;#12398;&amp;#24038;&amp;#19978;&amp;#24231;&amp;#27161;&lt;/span&gt;
    32 32   &lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#30011;&amp;#20687;&amp;#20803;&amp;#12398;&amp;#21491;&amp;#19979;&amp;#24231;&amp;#27161;&lt;/span&gt;
    frame)  &lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#25551;&amp;#30011;&amp;#23550;&amp;#35937;&lt;/span&gt;
&lt;/pre&gt;



&lt;pre class="src src-cojure"&gt;(import java.awt.Color)
(def clear-color (Color. 0 0 127))

(let [g (.. frame (getGraphics))]
  (doto g
    (.translate (.. insets left) (.. insets top))
    (.setColor clear-color)
    (.fillRect 0 0 640 480)
    (.drawImage image
                0 0 32 32
                0 0 32 32
                frame)
    (.dispose)))
&lt;/pre&gt;

&lt;p&gt;
&lt;img src="img/clojure-game01/05.png"  alt="img/clojure-game01/05.png" /&gt;
&lt;/p&gt;

&lt;p&gt;
&#12394;&#12435;&#12393;&#12418;&#25551;&#30011;&#12375;&#12390;&#12427;&#12392;&#12289;&#21069;&#12398;&#30011;&#20687;&#12364;&#27531;&#12387;&#12390;&#30906;&#35469;&#12375;&#12389;&#12425;&#12356;&#12398;&#12391;
&#25551;&#30011;&#21069;&#12395;&#12463;&#12522;&#12450;&#12459;&#12521;&#12540;&#12391;&#22615;&#12426;&#12388;&#12406;&#12375;&#12390;&#12356;&#12427;&#12290;
&#12388;&#12356;&#12391;&#12395;&#12464;&#12521;&#12501;&#12451;&#12483;&#12463;&#12458;&#12502;&#12472;&#12455;&#12463;&#12488;&#12418;&#12381;&#12398;&#37117;&#24230;&#30772;&#26820;&#12377;&#12427;&#12424;&#12358;&#12395;&#12375;&#12383;&#12290;
&lt;/p&gt;
&lt;p&gt;
&#12388;&#12366;&#12399;&#12466;&#12540;&#12512;&#12398;&#12363;&#12394;&#12417;&#12289;&#12513;&#12452;&#12531;&#12523;&#12540;&#12503;&#12434;&#23455;&#29694;&#12375;&#12390;&#12415;&#12427;&#12290;
&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-4" class="outline-3"&gt;
&lt;h3 id="sec-4"&gt;&#12513;&#12452;&#12531;&#12523;&#12540;&#12503;&#12398;&#23455;&#29694;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-4"&gt;

&lt;p&gt;&#12513;&#12452;&#12531;&#12523;&#12540;&#12503;&#12398;&#23455;&#29694;&#26041;&#27861;&#12395;&#12399;&#12395;&#12399;&#12356;&#12429;&#12356;&#12429;&#12354;&#12369;&#12428;&#12393;&#12418;
&#12392;&#12426;&#12354;&#12360;&#12378;&#21205;&#12363;&#12377;&#12371;&#12392;&#12364;&#30446;&#30340;&#12394;&#12398;&#12391;&#12289;
&#23455;&#35013;&#12364;&#31777;&#21336;&#12381;&#12358;&#12394;java.util.TimerTask&#12434;&#20351;&#29992;&#12375;&#12390;&#12415;&#12427;&#12290;
&lt;/p&gt;
&lt;p&gt;
Clojure&#12391;&#32153;&#25215;&#12364;&#24517;&#35201;&#12394;Java&#12463;&#12521;&#12473;&#12434;&#20351;&#12358;&#12395;&#12399;&#12289;proxy&#12434;&#20351;&#12358;&#12290;
&#20197;&#19979;&#12398;&#12424;&#12358;&#12395;TimerTask&#12434;&#32153;&#25215;&#12375;&#12383;&#12463;&#12521;&#12473;&#12434;&#12388;&#12367;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(&lt;span class="org-builtin"&gt;import&lt;/span&gt; (java.util &lt;span class="org-preprocessor"&gt;Timer&lt;/span&gt; &lt;span class="org-preprocessor"&gt;TimerTask&lt;/span&gt;))
(&lt;span class="org-builtin"&gt;import&lt;/span&gt; (java.util &lt;span class="org-preprocessor"&gt;TimerTask&lt;/span&gt;))
(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;mainloop&lt;/span&gt;
  (&lt;span class="org-variable-name"&gt;proxy&lt;/span&gt; [&lt;span class="org-preprocessor"&gt;TimerTask&lt;/span&gt;] []
    (run []
      (&lt;span class="org-variable-name"&gt;println&lt;/span&gt; &lt;span class="org-string"&gt;"&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;"&lt;/span&gt;))
    )) 
&lt;/pre&gt;


&lt;p&gt;
&#12486;&#12473;&#12488;&#12375;&#12390;&#12415;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;user&amp;gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; mainloop run) 
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
nil
&lt;/pre&gt;

&lt;p&gt;
&#12358;&#12414;&#12367;&#12356;&#12387;&#12390;&#12356;&#12427;&#12424;&#12358;&#12391;&#12354;&#12427;&#12290;
&lt;/p&gt;
&lt;p&gt;
&#32154;&#12356;&#12390;Time&#12463;&#12521;&#12473;&#12395;mainloop&#12434;&#28193;&#12375;&#12390;&#12415;&#12427;&#12290;&#12371;&#12428;&#12364;&#12399;&#12414;&#12387;&#12383;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;user&amp;gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; (&lt;span class="org-preprocessor"&gt;Timer.&lt;/span&gt;) schedule mainloop 0 500)

&lt;span class="org-preprocessor"&gt;Malformed&lt;/span&gt; member expression
  [&lt;span class="org-preprocessor"&gt;Thrown&lt;/span&gt; class &lt;span class="org-preprocessor"&gt;java.lang.IllegalArgumentException&lt;/span&gt;]

Restarts:
 0: [QUIT] &lt;span class="org-preprocessor"&gt;Quit&lt;/span&gt; to the SLIME top level

Backtrace:
  0: &lt;span class="org-preprocessor"&gt;clojure.lang.Compiler$HostExpr$Parser.parse&lt;/span&gt;(Compiler.java:825)
  1: &lt;span class="org-preprocessor"&gt;clojure.lang.Compiler.analyzeSeq&lt;/span&gt;(Compiler.java:5369)

&lt;/pre&gt;

&lt;p&gt;
&#12300;Malformed member expression&#12301;&#12398;&#21407;&#22240;&#12364;&#12431;&#12363;&#12425;&#12394;&#12367;&#12390;&#12363;&#12394;&#12426;&#12399;&#12414;&#12387;&#12383;&#12290;
&#12368;&#12368;&#12387;&#12383;&#32080;&#26524;&#12289;java&#12398;long&#22411;&#12434;&#24341;&#25968;&#12392;&#12375;&#12390;&#28193;&#12377;&#12392;&#12365;&#12399;&#12289;long&#38306;&#25968;&#12434;&#21628;&#12403;&#20986;&#12377;&#24517;&#35201;&#12364;&#12354;&#12427;&#12371;&#12392;&#12364;&#12431;&#12363;&#12387;&#12383;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;user&amp;gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; (&lt;span class="org-preprocessor"&gt;Timer.&lt;/span&gt;) schedule mainloop (&lt;span class="org-variable-name"&gt;long&lt;/span&gt; 0) (&lt;span class="org-variable-name"&gt;long&lt;/span&gt; 500))
&lt;span class="org-preprocessor"&gt;No&lt;/span&gt; matching field found: schedule for class &lt;span class="org-preprocessor"&gt;java.util.Timer&lt;/span&gt;
  [&lt;span class="org-preprocessor"&gt;Thrown&lt;/span&gt; class &lt;span class="org-preprocessor"&gt;java.lang.IllegalArgumentException&lt;/span&gt;]

Restarts:
 0: [QUIT] &lt;span class="org-preprocessor"&gt;Quit&lt;/span&gt; to the SLIME top level

Backtrace:
  0: &lt;span class="org-preprocessor"&gt;clojure.lang.Reflector.getInstanceField&lt;/span&gt;(Reflector.java:245)
  1: &lt;span class="org-preprocessor"&gt;clojure.lang.Reflector.invokeNoArgInstanceMember&lt;/span&gt;(Reflector.java:267)
&lt;/pre&gt;

&lt;p&gt;
&#12392;&#12371;&#12371;&#12391;&#12414;&#12383;&#12456;&#12521;&#12540;&#12290;&#12391;&#12414;&#12383;&#12368;&#12368;&#12387;&#12383;&#32080;&#26524;&#12289;&#12513;&#12477;&#12483;&#12489;&#12398;&#21628;&#12403;&#20986;&#12375;&#26041;&#12364;&#38291;&#36949;&#12387;&#12390;&#12356;&#12383;orz&#12290;
schedule&#12434;&#12459;&#12483;&#12467;&#12391;&#12367;&#12367;&#12425;&#12394;&#12356;&#12392;&#39364;&#30446;&#12425;&#12375;&#12356;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;user&amp;gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; (&lt;span class="org-preprocessor"&gt;Timer.&lt;/span&gt;) (schedule mainloop (&lt;span class="org-variable-name"&gt;long&lt;/span&gt; 0) (&lt;span class="org-variable-name"&gt;long&lt;/span&gt; 500)))
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
nil
&lt;/pre&gt;

&lt;p&gt;
&#12392;&#12356;&#12358;&#12371;&#12392;&#12391;&#12420;&#12387;&#12392;Timer&#12463;&#12521;&#12473;&#12395;Timer&#12479;&#12473;&#12463;&#12391;&#20316;&#12387;&#12383;&#12513;&#12452;&#12531;&#12523;&#12540;&#12503;&#12434;&#28193;&#12377;&#12371;&#12392;&#12364;&#12391;&#12365;&#12383;&#12290;&#12405;&#12357;&#12290;
&#27425;&#12399;&#30011;&#20687;&#12434;&#21205;&#12363;&#12375;&#12390;&#12415;&#12427;&#12290;
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-5" class="outline-3"&gt;
&lt;h3 id="sec-5"&gt;&#30011;&#20687;&#12398;&#31227;&#21205;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-5"&gt;

&lt;p&gt;&#12356;&#12424;&#12356;&#12424;&#30011;&#20687;&#12395;&#39746;&#12434;&#19982;&#12360;&#12427;w&#12290;&#12381;&#12398;&#28858;&#12395;&#12399;&#29366;&#24907;&#12434;&#31649;&#29702;&#12375;&#12394;&#12369;&#12428;&#12400;&#12394;&#12425;&#12394;&#12356;&#12290;&#24231;&#27161;&#12384;&#12290;
Clojure&#12399;&#12487;&#12501;&#12457;&#12523;&#12488;&#12391;&#12399;&#20516;&#12434;&#26356;&#26032;&#12391;&#12365;&#12394;&#12356;&#12290;&#12371;&#12428;&#12434;&#22793;&#26356;&#12377;&#12427;&#12383;&#12417;&#12395;&#12399;&#29305;&#21029;&#12394;&#23450;&#32681;&#12364;&#24517;&#35201;&#12290;
&#12473;&#12524;&#12483;&#12489;&#12434;&#20351;&#12358;&#20104;&#23450;&#12399;&#20170;&#12398;&#12392;&#12371;&#12429;&#28961;&#12356;&#12398;&#12391;&#12289;&#25201;&#12356;&#12398;&#31777;&#21336;&#12381;&#12358;&#12394;atom&#12434;&#20351;&#29992;&#12375;&#12390;&#12415;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;&lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#12503;&amp;#12524;&amp;#12452;&amp;#12516;&amp;#12540;&amp;#23450;&amp;#32681;&lt;/span&gt;
(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;player&lt;/span&gt; (&lt;span class="org-variable-name"&gt;atom&lt;/span&gt; {&lt;span class="org-constant"&gt;:pos&lt;/span&gt; [0 0]}))
&lt;/pre&gt;


&lt;p&gt;
&#12371;&#12435;&#12394;&#24863;&#12376;&#12391;&#21442;&#29031;&#12391;&#12365;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;user&amp;gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;)
[0 0]
user&amp;gt; 
&lt;/pre&gt;


&lt;p&gt;
x&#24231;&#27161;&#12399;&#37197;&#21015;&#12398;0&#30058;&#30446;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;user&amp;gt; (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0) 
0
&lt;/pre&gt;


&lt;p&gt;
y&#24231;&#27161;&#12399;&#37197;&#21015;&#12398;1&#30058;&#30446;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;user&amp;gt; (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 1) 
0
&lt;/pre&gt;


&lt;p&gt;
player&#12398;&#24231;&#27161;&#12434;&#26356;&#26032;&#12375;&#12390;&#12415;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;user&amp;gt; player
#&amp;lt;Atom@2a134eca: {&lt;span class="org-constant"&gt;:pos&lt;/span&gt; [0 0]}&amp;gt;

&lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#22793;&amp;#26356;&lt;/span&gt;
user&amp;gt; (&lt;span class="org-variable-name"&gt;swap!&lt;/span&gt; player assoc &lt;span class="org-constant"&gt;:pos&lt;/span&gt; [0 1])
{&lt;span class="org-constant"&gt;:pos&lt;/span&gt; [0 1]}

&lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#12383;&amp;#12375;&amp;#12363;&amp;#12395;&amp;#26356;&amp;#26032;&amp;#12373;&amp;#12428;&amp;#12383;&lt;/span&gt;
user&amp;gt; player
#&amp;lt;Atom@2a134eca: {&lt;span class="org-constant"&gt;:pos&lt;/span&gt; [0 1]}&amp;gt;
&lt;/pre&gt;


&lt;p&gt;
x&#24231;&#27161;&#12434;&#26356;&#26032;&#12373;&#12379;&#12427;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;user&amp;gt; (&lt;span class="org-variable-name"&gt;swap!&lt;/span&gt; player assoc &lt;span class="org-constant"&gt;:pos&lt;/span&gt; [(&lt;span class="org-variable-name"&gt;+&lt;/span&gt; 1 (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0)) 1])
{&lt;span class="org-constant"&gt;:pos&lt;/span&gt; [1 1]}
user&amp;gt; (&lt;span class="org-variable-name"&gt;swap!&lt;/span&gt; player assoc &lt;span class="org-constant"&gt;:pos&lt;/span&gt; [(&lt;span class="org-variable-name"&gt;+&lt;/span&gt; 1 (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0)) 1])
{&lt;span class="org-constant"&gt;:pos&lt;/span&gt; [2 1]}
user&amp;gt; (&lt;span class="org-variable-name"&gt;swap!&lt;/span&gt; player assoc &lt;span class="org-constant"&gt;:pos&lt;/span&gt; [(&lt;span class="org-variable-name"&gt;+&lt;/span&gt; 1 (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0)) 1])
{&lt;span class="org-constant"&gt;:pos&lt;/span&gt; [3 1]}
user&amp;gt; (&lt;span class="org-variable-name"&gt;swap!&lt;/span&gt; player assoc &lt;span class="org-constant"&gt;:pos&lt;/span&gt; [(&lt;span class="org-variable-name"&gt;+&lt;/span&gt; 1 (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0)) 1])
{&lt;span class="org-constant"&gt;:pos&lt;/span&gt; [4 1]}
&lt;/pre&gt;


&lt;p&gt;
&#12391;&#12399;&#12371;&#12371;&#12414;&#12391;&#12398;&#31227;&#21205;&#20966;&#29702;&#12434;&#32068;&#12415;&#36796;&#12416;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;mainloop&lt;/span&gt;
  (&lt;span class="org-variable-name"&gt;proxy&lt;/span&gt; [&lt;span class="org-preprocessor"&gt;TimerTask&lt;/span&gt;] []
    (run []
      (&lt;span class="org-variable-name"&gt;swap!&lt;/span&gt; player assoc &lt;span class="org-constant"&gt;:pos&lt;/span&gt; [(&lt;span class="org-variable-name"&gt;+&lt;/span&gt; 1 (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0)) 1]) &lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#24231;&amp;#27161;&amp;#26356;&amp;#26032;&lt;/span&gt;
      (&lt;span class="org-builtin"&gt;if&lt;/span&gt; (&lt;span class="org-variable-name"&gt;&amp;lt;&lt;/span&gt; 640 (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0))
             (&lt;span class="org-variable-name"&gt;swap!&lt;/span&gt; player assoc &lt;span class="org-constant"&gt;:pos&lt;/span&gt; [0 0]))

      (&lt;span class="org-builtin"&gt;let&lt;/span&gt; [g (&lt;span class="org-builtin"&gt;..&lt;/span&gt; frame (&lt;span class="org-preprocessor"&gt;getGraphics&lt;/span&gt;))
            player-x (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0)
            player-y (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 1)]

        (&lt;span class="org-builtin"&gt;doto&lt;/span&gt; g
          (&lt;span class="org-preprocessor"&gt;.translate&lt;/span&gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets left) (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets top))
          (&lt;span class="org-preprocessor"&gt;.setColor&lt;/span&gt; clear-color)
          (&lt;span class="org-preprocessor"&gt;.fillRect&lt;/span&gt; 0 0 640 480)
          (&lt;span class="org-preprocessor"&gt;.drawImage&lt;/span&gt; image
                      player-x player-y
                      (&lt;span class="org-variable-name"&gt;+&lt;/span&gt; player-x 32) (&lt;span class="org-variable-name"&gt;+&lt;/span&gt; player-y 32)
                      0 0 32 32
                      frame)
          (&lt;span class="org-preprocessor"&gt;.dispose&lt;/span&gt;))))))
&lt;/pre&gt;


&lt;p&gt;
&#23450;&#32681;&#12375;&#12383;&#12513;&#12452;&#12531;&#12523;&#12540;&#12503;&#12434;20ms&#38291;&#38548;&#12391;&#21628;&#12403;&#20986;&#12377;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(&lt;span class="org-builtin"&gt;..&lt;/span&gt; (&lt;span class="org-preprocessor"&gt;Timer.&lt;/span&gt;) (schedule mainloop (&lt;span class="org-variable-name"&gt;long&lt;/span&gt; 0) (&lt;span class="org-variable-name"&gt;long&lt;/span&gt; 20)))
&lt;/pre&gt;


&lt;iframe width="425" height="349" src="http://www.youtube.com/embed/T4LLkAqETLQ?hl=ja&amp;fs=1" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;
&#30011;&#38754;&#12364;&#12385;&#12425;&#12388;&#12365;&#12392;&#12356;&#12358;&#12363;&#12289;&#30011;&#20687;&#12364;&#28857;&#28357;&#12375;&#12390;&#12356;&#12390;&#35441;&#12395;&#12394;&#12425;&#12394;&#12356;&#12290;
&#27425;&#12399;&#12371;&#12398;&#12481;&#12521;&#12484;&#12461;&#12434;&#25233;&#12360;&#12427;&#12383;&#12417;&#12395; java.awt.image.BufferStrategy&#12434;&#20351;&#12387;&#12390;&#12415;&#12427;&#12290; 
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-6" class="outline-3"&gt;
&lt;h3 id="sec-6"&gt;&#12385;&#12425;&#12388;&#12365;&#38450;&#27490;&#23550;&#31574;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6"&gt;

&lt;p&gt;&#19979;&#35352;&#12398;&#12424;&#12358;&#12395;JFrame#setIgnoreRepaint, JFrame#createBufferStrategy&#12434;&#21628;&#12403;&#20986;&#12375;&#12496;&#12483;&#12501;&#12449;&#12398;&#28310;&#20633;&#12434;&#12377;&#12427;&#12290;
&#12371;&#12398;&#26178;&#27880;&#24847;&#12377;&#12409;&#12365;&#12399;&#12289;JFrame#createBufferStrategy&#12399;JFrame#setVisible&#12398;&#12354;&#12392;&#12395;&#21628;&#12403;&#20986;&#12373;&#12394;&#12369;&#12428;&#12400;&#12394;&#12425;&#12394;&#12356;&#12371;&#12392;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(&lt;span class="org-builtin"&gt;doto&lt;/span&gt; frame
    (&lt;span class="org-preprocessor"&gt;.setSize&lt;/span&gt; (&lt;span class="org-variable-name"&gt;+&lt;/span&gt; 640 (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets left) (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets right)) (&lt;span class="org-variable-name"&gt;+&lt;/span&gt; 480 (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets top) (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets bottom)))
    (&lt;span class="org-preprocessor"&gt;.setVisible&lt;/span&gt; true)
    (&lt;span class="org-preprocessor"&gt;.setIgnoreRepaint&lt;/span&gt; true) &lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#12454;&amp;#12451;&amp;#12531;&amp;#12489;&amp;#12454;&amp;#12398;&amp;#20877;&amp;#25551;&amp;#30011;&amp;#12434;&amp;#28961;&amp;#21177;&amp;#12395;(BufferStrategy&amp;#12434;&amp;#20351;&amp;#12358;&amp;#12398;&amp;#12391;)&lt;/span&gt;
    (&lt;span class="org-preprocessor"&gt;.createBufferStrategy&lt;/span&gt; 2) &lt;span class="org-comment-delimiter"&gt;;;  &lt;/span&gt;&lt;span class="org-comment"&gt;setVisible&amp;#12513;&amp;#12477;&amp;#12483;&amp;#12489;&amp;#12398;&amp;#12354;&amp;#12392;&amp;#12391;&amp;#21628;&amp;#12400;&amp;#12394;&amp;#12356;&amp;#12392;&amp;#23455;&amp;#34892;&amp;#26178;&amp;#12456;&amp;#12521;&amp;#12540;&amp;#12395;&amp;#12394;&amp;#12427;&lt;/span&gt;
    )
&lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#12496;&amp;#12483;&amp;#12501;&amp;#12449;&amp;#20316;&amp;#25104;&lt;/span&gt;
(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;buffer&lt;/span&gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; frame (&lt;span class="org-preprocessor"&gt;getBufferStrategy&lt;/span&gt;)))
&lt;/pre&gt;


&lt;p&gt;
buffer&#12434;&#20351;&#12387;&#12390;&#20197;&#19979;&#12398;&#12424;&#12358;&#12395;&#21628;&#12403;&#20986;&#12375;&#12290;TimerTask&#12463;&#12521;&#12473;&#12458;&#12502;&#12472;&#12455;&#12463;&#12488;&#12399;&#37117;&#24230;&#29983;&#25104;&#12391;&#12365;&#12427;&#12424;&#12358;&#12395;&#38306;&#25968;&#21270;&#12375;&#12390;&#12362;&#12356;&#12383;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(&lt;span class="org-keyword"&gt;defn&lt;/span&gt; &lt;span class="org-function-name"&gt;create-mainloop&lt;/span&gt;
  []
  (&lt;span class="org-variable-name"&gt;proxy&lt;/span&gt; [&lt;span class="org-preprocessor"&gt;TimerTask&lt;/span&gt;] []
    (run []
      (&lt;span class="org-variable-name"&gt;swap!&lt;/span&gt; player assoc &lt;span class="org-constant"&gt;:pos&lt;/span&gt; [(&lt;span class="org-variable-name"&gt;+&lt;/span&gt; 1 (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0)) 1]) &lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#24231;&amp;#27161;&amp;#26356;&amp;#26032;&lt;/span&gt;
      (&lt;span class="org-builtin"&gt;if&lt;/span&gt; (&lt;span class="org-variable-name"&gt;&amp;lt;&lt;/span&gt; 640 (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0))
             (&lt;span class="org-variable-name"&gt;swap!&lt;/span&gt; player assoc &lt;span class="org-constant"&gt;:pos&lt;/span&gt; [0 0]))

      (&lt;span class="org-builtin"&gt;if&lt;/span&gt; (&lt;span class="org-variable-name"&gt;not&lt;/span&gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; buffer (&lt;span class="org-preprocessor"&gt;contentsLost&lt;/span&gt;)))
        (&lt;span class="org-builtin"&gt;let&lt;/span&gt; [g (&lt;span class="org-builtin"&gt;..&lt;/span&gt; buffer (&lt;span class="org-preprocessor"&gt;getDrawGraphics&lt;/span&gt;))
              player-x (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0)
              player-y (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 1)]
          (&lt;span class="org-builtin"&gt;doto&lt;/span&gt; g
            (&lt;span class="org-preprocessor"&gt;.translate&lt;/span&gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets left) (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets top))
            (&lt;span class="org-preprocessor"&gt;.setColor&lt;/span&gt; clear-color)
            (&lt;span class="org-preprocessor"&gt;.fillRect&lt;/span&gt; 0 0 640 480)
            (&lt;span class="org-preprocessor"&gt;.translate&lt;/span&gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets left) (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets top))
            (&lt;span class="org-preprocessor"&gt;.drawImage&lt;/span&gt; image
                        player-x player-y
                        (&lt;span class="org-variable-name"&gt;+&lt;/span&gt; player-x 32) (&lt;span class="org-variable-name"&gt;+&lt;/span&gt; player-y 32)
                        0 0 32 32
                        frame)
            (&lt;span class="org-preprocessor"&gt;.dispose&lt;/span&gt;))
          (&lt;span class="org-builtin"&gt;..&lt;/span&gt; buffer (show))
          )))))
&lt;/pre&gt;

&lt;iframe width="425" height="349" src="http://www.youtube.com/embed/3mO4EUh9cl0?hl=ja&amp;fs=1" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;



&lt;p&gt;
&#26368;&#32066;&#30340;&#12394;&#12467;&#12540;&#12489;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(&lt;span class="org-builtin"&gt;ns&lt;/span&gt; hello-cube.core)

(&lt;span class="org-builtin"&gt;import&lt;/span&gt; (javax.swing &lt;span class="org-preprocessor"&gt;JFrame&lt;/span&gt;))
(&lt;span class="org-builtin"&gt;import&lt;/span&gt; (java.util &lt;span class="org-preprocessor"&gt;Timer&lt;/span&gt; &lt;span class="org-preprocessor"&gt;TimerTask&lt;/span&gt;))
(&lt;span class="org-builtin"&gt;import&lt;/span&gt; (java.awt &lt;span class="org-preprocessor"&gt;Graphics&lt;/span&gt; &lt;span class="org-preprocessor"&gt;Color&lt;/span&gt;))
(&lt;span class="org-builtin"&gt;import&lt;/span&gt; (java.awt.image &lt;span class="org-preprocessor"&gt;BufferedImage&lt;/span&gt;))
(&lt;span class="org-builtin"&gt;import&lt;/span&gt; (javax.imageio &lt;span class="org-preprocessor"&gt;ImageIO&lt;/span&gt;))
(&lt;span class="org-builtin"&gt;import&lt;/span&gt; (java.io &lt;span class="org-preprocessor"&gt;File&lt;/span&gt;))

(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;clear-color&lt;/span&gt; (&lt;span class="org-preprocessor"&gt;Color.&lt;/span&gt; 0 0 127))
(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;frame&lt;/span&gt; (&lt;span class="org-preprocessor"&gt;JFrame.&lt;/span&gt; &lt;span class="org-string"&gt;"Clojure Sample Game"&lt;/span&gt;)) 
(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;image&lt;/span&gt; (&lt;span class="org-preprocessor"&gt;ImageIO/read&lt;/span&gt; (&lt;span class="org-preprocessor"&gt;File.&lt;/span&gt; &lt;span class="org-string"&gt;"gai.png"&lt;/span&gt;))) &lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#30011;&amp;#20687;&amp;#35501;&amp;#12415;&amp;#36796;&amp;#12415;&lt;/span&gt;
(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;player&lt;/span&gt; (&lt;span class="org-variable-name"&gt;atom&lt;/span&gt; {&lt;span class="org-constant"&gt;:pos&lt;/span&gt; [0 0]}))

&lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#26528;&amp;#12434;&amp;#32771;&amp;#24942;&amp;#12375;&amp;#12390;&amp;#12469;&amp;#12452;&amp;#12474;&amp;#25351;&amp;#23450;&lt;/span&gt;
(&lt;span class="org-builtin"&gt;doto&lt;/span&gt; frame
    (&lt;span class="org-preprocessor"&gt;.setVisible&lt;/span&gt; true)
    (&lt;span class="org-preprocessor"&gt;.setIgnoreRepaint&lt;/span&gt; true) &lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#12454;&amp;#12451;&amp;#12531;&amp;#12489;&amp;#12454;&amp;#12398;&amp;#20877;&amp;#25551;&amp;#30011;&amp;#12434;&amp;#28961;&amp;#21177;&amp;#12395;(BufferStrategy&amp;#12434;&amp;#20351;&amp;#12358;&amp;#12398;&amp;#12391;)&lt;/span&gt;
    (&lt;span class="org-preprocessor"&gt;.createBufferStrategy&lt;/span&gt; 2) &lt;span class="org-comment-delimiter"&gt;;;  &lt;/span&gt;&lt;span class="org-comment"&gt;setVisible&amp;#12513;&amp;#12477;&amp;#12483;&amp;#12489;&amp;#12398;&amp;#12354;&amp;#12392;&amp;#12391;&amp;#21628;&amp;#12400;&amp;#12394;&amp;#12356;&amp;#12392;&amp;#23455;&amp;#34892;&amp;#26178;&amp;#12456;&amp;#12521;&amp;#12540;&amp;#12395;&amp;#12394;&amp;#12427;&lt;/span&gt;
    )

&lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#12496;&amp;#12483;&amp;#12501;&amp;#12449;&amp;#20316;&amp;#25104;&lt;/span&gt;
(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;buffer&lt;/span&gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; frame (&lt;span class="org-preprocessor"&gt;getBufferStrategy&lt;/span&gt;)))
(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;insets&lt;/span&gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; frame &lt;span class="org-preprocessor"&gt;getInsets&lt;/span&gt;))  &lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#12454;&amp;#12451;&amp;#12531;&amp;#12489;&amp;#12454;&amp;#12434;&amp;#34920;&amp;#31034;&amp;#12375;&amp;#12390;&amp;#12363;&amp;#12425;&amp;#20986;&amp;#12394;&amp;#12356;&amp;#12392;&amp;#20516;&amp;#12364;&amp;#20837;&amp;#12425;&amp;#12394;&amp;#12356;&amp;#12290;&lt;/span&gt;

(&lt;span class="org-builtin"&gt;doto&lt;/span&gt; frame
    (&lt;span class="org-preprocessor"&gt;.setSize&lt;/span&gt; (&lt;span class="org-variable-name"&gt;+&lt;/span&gt; 640 (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets left) (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets right)) (&lt;span class="org-variable-name"&gt;+&lt;/span&gt; 480 (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets top) (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets bottom))))


(&lt;span class="org-keyword"&gt;defn&lt;/span&gt; &lt;span class="org-function-name"&gt;create-mainloop&lt;/span&gt;
  []
  (&lt;span class="org-variable-name"&gt;proxy&lt;/span&gt; [&lt;span class="org-preprocessor"&gt;TimerTask&lt;/span&gt;] []
    (run []
      (&lt;span class="org-variable-name"&gt;swap!&lt;/span&gt; player assoc &lt;span class="org-constant"&gt;:pos&lt;/span&gt; [(&lt;span class="org-variable-name"&gt;+&lt;/span&gt; 1 (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0)) 1]) &lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#24231;&amp;#27161;&amp;#26356;&amp;#26032;&lt;/span&gt;
      (&lt;span class="org-builtin"&gt;if&lt;/span&gt; (&lt;span class="org-variable-name"&gt;&amp;lt;&lt;/span&gt; 640 (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0))
             (&lt;span class="org-variable-name"&gt;swap!&lt;/span&gt; player assoc &lt;span class="org-constant"&gt;:pos&lt;/span&gt; [0 0]))

      (&lt;span class="org-builtin"&gt;if&lt;/span&gt; (&lt;span class="org-variable-name"&gt;not&lt;/span&gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; buffer (&lt;span class="org-preprocessor"&gt;contentsLost&lt;/span&gt;)))
        (&lt;span class="org-builtin"&gt;let&lt;/span&gt; [g (&lt;span class="org-builtin"&gt;..&lt;/span&gt; buffer (&lt;span class="org-preprocessor"&gt;getDrawGraphics&lt;/span&gt;))
              player-x (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0)
              player-y (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 1)]
          (&lt;span class="org-builtin"&gt;doto&lt;/span&gt; g
            (&lt;span class="org-preprocessor"&gt;.translate&lt;/span&gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets left) (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets top))
            (&lt;span class="org-preprocessor"&gt;.setColor&lt;/span&gt; clear-color)
            (&lt;span class="org-preprocessor"&gt;.fillRect&lt;/span&gt; 0 0 640 480)
            (&lt;span class="org-preprocessor"&gt;.translate&lt;/span&gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets left) (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets top))
            (&lt;span class="org-preprocessor"&gt;.drawImage&lt;/span&gt; image
                        player-x player-y
                        (&lt;span class="org-variable-name"&gt;+&lt;/span&gt; player-x 32) (&lt;span class="org-variable-name"&gt;+&lt;/span&gt; player-y 32)
                        0 0 32 32
                        frame)
            (&lt;span class="org-preprocessor"&gt;.dispose&lt;/span&gt;))
          (&lt;span class="org-builtin"&gt;..&lt;/span&gt; buffer (show))
          )))))

(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;timer&lt;/span&gt; (&lt;span class="org-preprocessor"&gt;Timer.&lt;/span&gt;))
(&lt;span class="org-builtin"&gt;..&lt;/span&gt; timer (schedule (create-mainloop) (&lt;span class="org-variable-name"&gt;long&lt;/span&gt; 0) (&lt;span class="org-variable-name"&gt;long&lt;/span&gt; 20)))
&lt;/pre&gt;


&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-7" class="outline-3"&gt;
&lt;h3 id="sec-7"&gt;&#25152;&#24863;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-7"&gt;

&lt;p&gt;&#12411;&#12392;&#12435;&#12393;Java&#12398;&#12513;&#12477;&#12483;&#12489;&#12375;&#12363;&#20351;&#12387;&#12390;&#12394;&#12356;&#12369;&#12393;&#12418;SLIME&#12398;&#33391;&#12373;&#12399;&#20307;&#24863;&#12391;&#12365;&#12383;&#12290;
&#12467;&#12540;&#12489;&#12364;&#21363;&#26178;&#21453;&#26144;&#12373;&#12428;&#12390;&#30011;&#20687;&#12364;&#21205;&#12367;&#12398;&#12399;&#27005;&#12375;&#12356;&#12290;
&#29702;&#24819;&#12399;SLIME&#19978;&#12363;&#12425;GameObject&#12434;&#12522;&#12450;&#12523;&#12479;&#12452;&#12512;&#12395;&#25805;&#20316;&#12377;&#12427;&#12371;&#12392;&#12384;&#12369;&#12393;&#12289;&#12371;&#12428;&#12434;&#23455;&#29694;&#12377;&#12427;&#12395;&#12399;atom&#12391;&#12399;&#28961;&#29702;&#12363;&#12418;&#12290;
&#12354;&#12392;&#12399;&#12473;&#12524;&#12483;&#12489;&#12392;SLIME&#12398;&#38306;&#20418;&#12364;&#12424;&#12367;&#12431;&#12363;&#12387;&#12390;&#12394;&#12356;&#12290;TimerTask&#12434;&#20351;&#12356;&#12395;&#12367;&#12367;&#24863;&#12376;&#12383;&#12398;&#12391;&#12513;&#12452;&#12531;&#12523;&#12540;&#12503;&#12399;&#21029;&#12398;&#26041;&#27861;&#12391;&#23455;&#29694;&#12375;&#12383;&#12356;&#12290;
&lt;/p&gt;
&lt;p&gt;
&#27425;&#22238;&#12399;&#12418;&#12358;&#12385;&#12423;&#12387;&#12392;&#12467;&#12540;&#12489;&#12398;&#12522;&#12501;&#12449;&#12463;&#12479;&#12522;&#12531;&#12464;&#12434;&#26045;&#12375;&#12388;&#12388;&#12289;
&#12450;&#12491;&#12513;&#12540;&#12471;&#12519;&#12531;&#12392;&#12461;&#12540;&#12508;&#12540;&#12489;&#25805;&#20316;&#12434;&#12391;&#12365;&#12427;&#12424;&#12358;&#12395;&#12375;&#12390;&#12415;&#12427;&#12290;
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-8" class="outline-3"&gt;
&lt;h3 id="sec-8"&gt;&#21442;&#32771;&#26360;&#31821;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-8"&gt;


&lt;ul class="thumbnails"&gt;
&lt;li class="span2"&gt;
&lt;a href="http://www.amazon.co.jp/gp/product/4274067890/ref=as_li_tf_il?ie=UTF8&amp;amp;tag=ocha04-22&amp;amp;linkCode=as2&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4274067890"&gt;&lt;img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&amp;amp;Format=_SL160_&amp;amp;ASIN=4274067890&amp;amp;MarketPlace=JP&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;tag=ocha04-22&amp;amp;ServiceVersion=20070822"&gt;&lt;/a&gt;&lt;img width="1" height="1" border="0" style="border:none !important; margin:0px !important;" alt="" src="http://www.assoc-amazon.jp/e/ir?t=ocha04-22&amp;amp;l=as2&amp;amp;o=9&amp;amp;a=4274067890"&gt;
&lt;/li&gt;
&lt;li class="span2"&gt;
&lt;a href="http://www.amazon.co.jp/gp/product/4899772319/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;amp;tag=ocha04-22&amp;amp;linkCode=as2&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4899772319"&gt;&lt;img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&amp;amp;Format=_SL160_&amp;amp;ASIN=4899772319&amp;amp;MarketPlace=JP&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;tag=ocha04-22&amp;amp;ServiceVersion=20070822"&gt;&lt;/a&gt;&lt;img width="1" height="1" border="0" style="border:none !important; margin:0px !important;" alt="" src="http://www.assoc-amazon.jp/e/ir?t=ocha04-22&amp;amp;l=as2&amp;amp;o=9&amp;amp;a=4899772319"&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title type="html">一瞬だけclojureやめようかと思った理由</title><author><name>nil</name></author><link href="http://mikio.github.com//article/2011/10/04_clojure.html"/><updated>2011-10-04T19:28:00Z</updated><published>2011-10-04T19:28:00Z</published><id>article/2011/10/04_clojure.html</id><category scheme="/tags/clojure.html" term="clojure" label="clojure"/><content type="html">&lt;p&gt;
&#32080;&#23616;CLojure&#12420;&#12387;&#12390;&#12414;&#12377;&#12290;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OracleJAVA&#12398;&#20808;&#34892;&#12365;&#12364;&#24618;&#12375;&#12356;&#12290;&#26368;&#36817;&#12391;&#12399;MAC&#12395;&#20837;&#12387;&#12390;&#12394;&#12356;&#12392;&#12356;&#12358;&#12375;&#12290;
&lt;ul&gt;
&lt;li&gt;&#8594;10/19 &#12381;&#12358;&#12391;&#12418;&#12394;&#12356;&#12363;&#12418;&#12290;Twitter&#12364;JCP&#12408;&#21152;&#20837;&#12375;&#12383;&#12290;OpenJDK&#12418;&#12354;&#12427;&#12290;

&lt;/li&gt;
&lt;/ul&gt;

&lt;/li&gt;
&lt;li&gt;SBCL&#12398;&#36215;&#21205;&#12364;&#12420;&#12383;&#12425;&#26089;&#12356;&#12290;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12364;&#31777;&#21336;
&lt;ul&gt;
&lt;li&gt;&#8594;&#36215;&#21205;&#12364;&#36933;&#12356;&#21839;&#38988;&#12399;SLIME&#12391;&#20351;&#12358;&#12363;&#12425;&#27671;&#12395;&#12375;&#12390;&#12399;&#12356;&#12369;&#12394;&#12356;&#12290;

&lt;/li&gt;
&lt;/ul&gt;

&lt;/li&gt;
&lt;li&gt;&#36215;&#21205;&#12364;&#12420;&#12383;&#12425;&#37325;&#12356;&#12375;&#12289;&#20966;&#29702;&#31995;&#12398;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12418;&#12381;&#12428;&#12411;&#12393;&#22823;&#22793;&#12391;&#12394;&#12356;&#20170;&#12289;JVM&#12395;&#12424;&#12427;&#12509;&#12540;&#12479;&#12499;&#12522;&#12486;&#12451;&#12398;&#20778;&#20301;&#24615;&#12387;&#12390;&#34180;&#12428;&#12390;&#12394;&#12356;&#12363;&#65311;
&lt;ul&gt;
&lt;li&gt;&#8594;&#26410;&#35299;&#27770;

&lt;/li&gt;
&lt;/ul&gt;

&lt;/li&gt;
&lt;li&gt;lisper&#12392;&#12356;&#12360;&#12400;CommonLisp&#12387;&#12390;&#12452;&#12513;&#12540;&#12472;&#12384;&#12375;&#12289;clojure&#20351;&#12356;&#12387;&#12390;&#12394;&#12435;&#12363;&#20124;&#31278;&#12394;&#12452;&#12513;&#12540;&#12472;&#12290;
&lt;ul&gt;
&lt;li&gt;&#8594; &#28023;&#22806;&#12391;&#12399;&#32080;&#27083;&#12394;&#20154;&#27671;&#12384;&#12375;&#12289;Clojure&#12434;&#12354;&#12427;&#31243;&#24230;&#20351;&#12356;&#12371;&#12394;&#12379;&#12427;&#12424;&#12358;&#12395;&#12394;&#12387;&#12390;&#12363;&#12425;CommonLisp&#12420;&#12428;&#12400;&#33391;&#12356;&#12290;

&lt;/li&gt;
&lt;/ul&gt;

&lt;/li&gt;
&lt;li&gt;&#26085;&#26412;&#35486;&#12398;&#24773;&#22577;&#12364;&#23569;&#12394;&#12356;&#12290;
&lt;ul&gt;
&lt;li&gt;&#8594;&#26410;&#35299;&#27770;
&lt;/li&gt;
&lt;/ul&gt;

&lt;/li&gt;
&lt;/ul&gt;


</content></entry><entry><title type="html">clojureとCoommonLispの比較</title><author><name>nil</name></author><link href="http://mikio.github.com//article/2011/09/09_clojurecoommonlisp.html"/><updated>2011-09-09T18:57:00Z</updated><published>2011-09-09T18:57:00Z</published><id>article/2011/09/09_clojurecoommonlisp.html</id><category scheme="/tags/clojure.html" term="clojure" label="clojure"/><category scheme="/tags/lisp.html" term="lisp" label="lisp"/><content type="html">&lt;p&gt;
Clojure&#12398;&#36215;&#21205;&#12364;&#36933;&#12356;&#12371;&#12392;&#12395;&#12452;&#12521;&#12452;&#12521;&#12375;&#12390;&#12289;&#12420;&#12387;&#12401;Clojure&#21193;&#24375;&#12377;&#12427;&#12424;&#12426;CommonnLisp&#21193;&#24375;&#12377;&#12409;&#12365;&#12376;&#12419;&#12397;&#65311;
&#12387;&#12390;&#12371;&#12392;&#12391;&#35519;&#12409;&#12383;&#27604;&#36611;&#34920;&#12290;
&lt;/p&gt;
&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;
&lt;caption&gt;&lt;/caption&gt;
&lt;colgroup&gt;&lt;col class="left" /&gt;&lt;col class="left" /&gt;&lt;col class="left" /&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td class="left"&gt;&#27604;&#36611;&#20869;&#23481;&lt;/td&gt;&lt;td class="left"&gt;Clojure&lt;/td&gt;&lt;td class="left"&gt;CommonLisp&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;&#36215;&#21205;&lt;/td&gt;&lt;td class="left"&gt;&#36933;&#12356;&lt;/td&gt;&lt;td class="left"&gt;&#26089;&#12356;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;&#23455;&#34892;&#12501;&#12449;&#12452;&#12523;&lt;/td&gt;&lt;td class="left"&gt;&#23567;&#12373;&#12356;&lt;/td&gt;&lt;td class="left"&gt;&#22823;&#12365;&#12356;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;&#37197;&#24067;&#12398;&#12375;&#12420;&#12377;&#12373;&lt;/td&gt;&lt;td class="left"&gt;&#38754;&#20498;&lt;/td&gt;&lt;td class="left"&gt;&#38754;&#20498;&#65288;&#22810;&#20998;&#65289;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;&#12521;&#12452;&#12502;&#12521;&#12522;&lt;/td&gt;&lt;td class="left"&gt;&#20805;&#23455;&amp;amp;&#31777;&#21336;&#12395;&#21033;&#29992;&#12391;&#12365;&#12427;&lt;/td&gt;&lt;td class="left"&gt;QuickLisp&#12364;&#23450;&#30058;&#12395;&#12394;&#12426;&#12388;&#12388;&#12354;&#12427;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;&#12473;&#12479;&#12452;&#12523;&lt;/td&gt;&lt;td class="left"&gt;&#38306;&#25968;&#30340;&lt;/td&gt;&lt;td class="left"&gt;&#25163;&#32154;&#12365;&#30340;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;&#12503;&#12525;&#12472;&#12455;&#12463;&#12488;&#31649;&#29702;&lt;/td&gt;&lt;td class="left"&gt;lein&#12434;&#20351;&#12360;&#12400;&#31777;&#21336;&lt;/td&gt;&lt;td class="left"&gt;CL-PROJECT(QuickLisp, ASDF)&#12391;&#31777;&#21336;&#12363;&#12418;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;&#26360;&#31821;&#20805;&#23455;&#24230;&lt;/td&gt;&lt;td class="left"&gt;&#12354;&#12435;&#12414;&#12426;&#12394;&#12356;&lt;/td&gt;&lt;td class="left"&gt;&#20805;&#23455;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;&#12507;&#12473;&#12486;&#12451;&#12531;&#12464;&#29872;&#22659;&lt;/td&gt;&lt;td class="left"&gt;GAE, Heroku&#12394;&#12393;&#32080;&#27083;&#12354;&#12427;&lt;/td&gt;&lt;td class="left"&gt;&#33258;&#23429;&#12469;&#12540;&#12496;,VPS,GAE(ABCL)&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;&#12454;&#12455;&#12502;&#12469;&#12540;&#12496;&#12540;&lt;/td&gt;&lt;td class="left"&gt;jetty&lt;/td&gt;&lt;td class="left"&gt;CLACK?&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;&#20840;&#25991;&#26908;&#32034;&lt;/td&gt;&lt;td class="left"&gt;lucine&lt;/td&gt;&lt;td class="left"&gt;&#65311;&#65311;&#65311;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;game&#12521;&#12452;&#12502;&#12521;&#12522;&lt;/td&gt;&lt;td class="left"&gt;jogl?&lt;/td&gt;&lt;td class="left"&gt;sdl&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;p&gt;
Clojure&#12399;&#12289;&#38306;&#25968;&#22411;&#12384;&#12363;&#12425;&#12420;&#12426;&#12383;&#12356;&#12371;&#12392;&#12420;&#12427;&#12398;&#12395;&#12418;&#12356;&#12429;&#12356;&#12429;&#24341;&#12387;&#25499;&#12363;&#12426;&#12381;&#12358;&#12384;&#12364;
CommonLisp&#12391;&#12399;&#20195;&#20837;&#12458;&#12483;&#12465;&#12540;&#12398;&#35328;&#35486;&#12384;&#12363;&#12425;&#12420;&#12426;&#12420;&#12377;&#12381;&#12358;&#12290;
&lt;/p&gt;
</content></entry><entry><title type="html">SchemeとCommonLispとClojure</title><author><name>nil</name></author><link href="http://mikio.github.com//article/2011/09/04_schemecommonlispclojure.html"/><updated>2011-09-04T19:28:00Z</updated><published>2011-09-04T19:28:00Z</published><id>article/2011/09/04_schemecommonlispclojure.html</id><category scheme="/tags/clojure.html" term="clojure" label="clojure"/><category scheme="/tags/scheme.html" term="scheme" label="scheme"/><category scheme="/tags/commonlisp.html" term="commonlisp" label="commonlisp"/><category scheme="/tags/lisp.html" term="lisp" label="lisp"/><content type="html">&lt;p&gt;
&#24341;&#12365;&#32154;&#12365;&#35519;&#26619;&#20013;&#12290;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SLIME&#12399;&#12418;&#12392;&#12418;&#12392;CommonLisp&#29992;&#12398;&#12418;&#12398;&#12290;
&lt;/li&gt;
&lt;li&gt;gosh(scheme)&#12399;&#12418;&#12392;&#12418;&#12392;SLIME&#12395;&#23550;&#24540;&#12375;&#12390;&#12356;&#12394;&#12363;&#12387;&#12383;&#12290;
&lt;/li&gt;
&lt;li&gt;2009&#24180;&#12395;&#26368;&#21021;&#12398;&#12496;&#12540;&#12472;&#12519;&#12531;&#12364;&#12391;&#12365;&#12383;&#12424;&#12358;&#12391;&#12354;&#12427;&#12290;&#24847;&#22806;&#12290;

&lt;/li&gt;
&lt;li&gt;scheme&#12399;&#38306;&#25968;&#22411;&#12290;&#21517;&#21069;&#31354;&#38291;&#12399;&#38306;&#25968;&#12392;&#22793;&#25968;&#12391;&#21516;&#12376;&#31354;&#38291;&#12434;&#12418;&#12388;&#12290;
&lt;/li&gt;
&lt;li&gt;&#12414;&#12383;&#12289;&#22793;&#25968;&#12399;&#21205;&#30340;&#12473;&#12467;&#12540;&#12503;&#12391;&#12354;&#12426;&#12289;&#12525;&#12540;&#12459;&#12523;&#22793;&#25968;&#12364;&#12464;&#12525;&#12540;&#12496;&#12523;&#22793;&#25968;&#12434;&#19978;&#26360;&#12365;&#12377;&#12427;&#65311;
&lt;/li&gt;
&lt;li&gt;clojure&#12418;&#21516;&#27096;&#12290;

&lt;/li&gt;
&lt;li&gt;common Lisp&#12399;&#25163;&#32154;&#30340;&#12363;&#12418;&#12290;&#21517;&#21069;&#31354;&#38291;&#12399;&#38306;&#25968;&#12392;&#22793;&#25968;&#12391;&#21306;&#21029;&#12373;&#12428;&#12427;&#12290;
&lt;/li&gt;
&lt;li&gt;&#12414;&#12383;&#12289;&#22793;&#25968;&#12399;&#21205;&#30340;&#12473;&#12467;&#12540;&#12503;&#12391;&#12354;&#12426;&#12289;&#12525;&#12540;&#12459;&#12523;&#22793;&#25968;&#12364;&#12464;&#12525;&#12540;&#12496;&#12523;&#22793;&#25968;&#12434;&#19978;&#26360;&#12365;&#12375;&#12394;&#12356;&#12290;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;
&#20197;&#19978;&#12363;&#12425;&#12289;
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&#12513;&#12452;&#12531;&#12399;clojure(&#38609;&#29992;)
&lt;/li&gt;
&lt;li&gt;&#20877;&#24112;&#12398;&#21193;&#24375;&#12395;scheme(SICP, Scheme&#25163;&#32722;&#12356;&#12394;&#12393;)
&lt;/li&gt;
&lt;li&gt;&#12469;&#12502;&#12392;&#12375;&#12390;CommonLisp&#12434;&#20351;&#12387;&#12390;&#12356;&#12371;&#12358;(&#36259;&#21619;)
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&#12391;&#12418;&#19968;&#30058;&#23455;&#29992;&#12395;&#24441;&#31435;&#12388;&#12398;&#12399;EmacsLisp&#12384;&#12424;&#12394;&#12290;&#12365;&#12387;&#12392;&#12290;
&lt;/p&gt;
</content></entry>
</feed>
