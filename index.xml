<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ざる魂</title>
  <link href="http://mikio.github.com/index.xml" rel="self" />
  <link href="http://mikio.github.com/"/>
  <updated>2012-04-04T08:26:57Z</updated>
  <id>http://mikio.github.com/index.xml</id>
  <entry><title type="html">emacsで辞書を引けるようにしてみる</title><author><name>nil</name></author><link href="http://mikio.github.com//article/2012/03/31_emacs.html"/><updated>2012-03-31T07:10:00Z</updated><published>2012-03-31T07:10:00Z</published><id>article/2012/03/31_emacs.html</id><category scheme="/tags/emacs.html" term="emacs" label="emacs"/><category scheme="/tags/sdic.html" term="sdic" label="sdic"/><content type="html">&lt;p&gt;
&#26908;&#32034;&#12375;&#12390;&#12418;&#12289;&#22833;&#25943;&#12377;&#12427;&#12394;&#12392;&#24605;&#12387;&#12390;&#12356;&#12383;&#12425;&#36766;&#26360;&#12398;&#20316;&#25104;&#12395;&#22833;&#25943;&#12375;&#12390;&#12356;&#12383;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ make dict
no -S -e gene.txt | /usr/bin/perl contrib/gene.perl &amp;gt; gene.sdic
/bin/sh: no: command not found
/usr/bin/perl contrib/edict.perl edict &amp;gt; jedict.sdic
&lt;/pre&gt;

&lt;p&gt;
&#12300;no&#12301;&#12467;&#12510;&#12531;&#12489;&#12392;&#12399;&#12394;&#12435;&#12382;&#12420;&#65311;
&lt;/p&gt;
&lt;p&gt;
&#12392;&#12356;&#12358;&#12371;&#12392;&#12391;&#12289;Makefile&#12398;&#38619;&#24418;&#12398;Makefile.in&#12434;&#35211;&#12390;&#12415;&#12383;&#12425;&#12289;nkf&#12398;&#12371;&#12392;&#12398;&#12424;&#12358;&#12384;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;gene.dic: contrib/gene.perl gene.txt
    @NKF@ -S -e gene.txt | @PERL@ contrib/gene.perl --compat &amp;gt; $@
&lt;/pre&gt;

&lt;p&gt;
&#12373;&#12425;&#12395;&#12418;&#12358;&#19968;&#24230;configure&#12434;&#23455;&#34892;&#12375;&#12390;&#12415;&#12383;&#12392;&#12371;&#12429;&#19979;&#35352;&#12398;&#12424;&#12358;&#12395;
&#12527;&#12540;&#12491;&#12531;&#12464;&#12364;&#12391;&#12390;&#12356;&#12383;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;onfigure: warning: nkf not found
&lt;/pre&gt;

&lt;p&gt;
&#12394;&#12395;&#12431;&#12392;&#12418;&#12354;&#12428;&#12289;nkf&#12434;&#12356;&#12428;&#12394;&#12356;&#12392;&#12384;&#12394;&#12290;cygwin&#12384;&#12369;&#12393;&#12354;&#12387;&#12383;&#12387;&#12369;&#65311;
apt-cyg&#12391;&#12399;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12391;&#12365;&#12394;&#12363;&#12387;&#12383;&#12398;&#12391;&#12289;&#25163;&#21205;&#12391;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12375;&#12383;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;tar xvfz nkf-2.1.2.tar.gz
&lt;span class="org-builtin"&gt;cd&lt;/span&gt; nkf-2.1.2/
make
make install
&lt;/pre&gt;

&lt;p&gt;
&#12381;&#12398;&#24460;&#12289;./configre&#12363;&#12425;&#12420;&#12426;&#30452;&#12375;&#12290;&amp;hellip;&#12384;&#12364;nkf&#12364;&#20170;&#12384;&#12395;&#35211;&#12388;&#12363;&#12425;&#12394;&#12356;&#12392;&#12391;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ sh ./configure --with-lispdir=~/Dropbox/dotfiles/emacs/site-lisp/sdic --infodir=~/Dropbox/dotfiles/emacs/info/sdic --with-dictdir=~/Dropbox/dict/sdic
loading cache ./config.cache
checking for a BSD compatible install... (cached) /usr/bin/install -c
checking whether build environment is sane... yes
checking whether make sets ${&lt;span class="org-variable-name"&gt;MAKE&lt;/span&gt;}... (cached) yes
checking for working aclocal... found
checking for working autoconf... found
checking for working automake... found
checking for working autoheader... found
checking for working makeinfo... found
checking for emacs... (cached) /usr/bin/emacs
&lt;/pre&gt;

&lt;p&gt;
&#12424;&#12367;&#35211;&#12427;&#12392;&#12289;cache&#12434;&#20351;&#12387;&#12390;&#12356;&#12427;&#12424;&#12358;&#12391;&#12354;&#12427;&#12290;&#12394;&#12398;&#12391;&#21066;&#38500;&#12375;&#12390;&#12522;&#12488;&#12521;&#12452;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ sh ./configure --with-lispdir=~/Dropbox/dotfiles/emacs/site-lisp/sdic --infodir=~/Dropbox/dotfiles/emacs/info/sdic --with-dictdir=~/Dropbox/dict/sdic
creating cache ./config.cache
checking for a BSD compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking whether make sets ${&lt;span class="org-variable-name"&gt;MAKE&lt;/span&gt;}... yes
checking for working aclocal... found
checking for working autoconf... found
checking for working automake... found
checking for working autoheader... found
checking for working makeinfo... found
checking for emacs... /usr/bin/emacs
checking where emacs files are in... /usr/local/share/emacs
checking where .elc files should go... ~/Dropbox/dotfiles/emacs/site-lisp/sdic
checking for nkf... /usr/local/bin/nkf
checking for perl... /usr/bin/perl
checking for gzip... /usr/bin/gzip
checking for bzip2... /usr/bin/bzip2
checking for cp... /usr/bin/cp
checking for sort... /usr/local/bin/sort
checking for EIWA Dictionary...         gene.sdic
checking for WAEI Dictionary...         jedict.sdic
updating cache ./config.cache
creating ./config.status
creating Makefile
creating lisp/Makefile
creating lisp/sdic.el
creating lisp/sample.emacs
creating install.el
&lt;/pre&gt;

&lt;p&gt;
&#20170;&#24230;&#12399;&#25104;&#21151;&#12375;&#12383;&#12290;&#12354;&#12392;&#12399;&#12510;&#12491;&#12517;&#12450;&#12523;&#12393;&#12362;&#12426;&#12395;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;make clean
make
make install
make install-info
make dict
make install-dict
&lt;/pre&gt;

&lt;p&gt;
&#12392;&#24605;&#12387;&#12383;&#12425;&#12300;make dict&#12301;&#12364;&#12358;&#12414;&#12367;&#12356;&#12363;&#12394;&#12356;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ make dict
make: Nothing to be done for &lt;span class="org-sh-quoted-exec"&gt;`dict'.&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;
&#12393;&#12358;&#12418;&#12289;*.sdic&#12399;&#12289;&#12300;make clean&#12301;&#12391;&#21066;&#38500;&#12373;&#12428;&#12394;&#12356;&#12424;&#12358;&#12384;&#12290;
&#12394;&#12398;&#12391;&#25163;&#21205;&#12391;&#21066;&#38500;&#12375;&#12390;&#12420;&#12426;&#12394;&#12362;&#12375;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ rm *.sdic
$ make dict
/usr/local/bin/nkf -S -e gene.txt | /usr/bin/perl contrib/gene.perl &amp;gt; gene.sdic
/usr/bin/perl contrib/edict.perl edict &amp;gt; jedict.sdic
$ make install-dict
/bin/sh ./mkinstalldirs ~/Dropbox/dict/sdic
/usr/bin/install -c -m 644      gene.sdic ~/Dropbox/dict/sdic
/usr/bin/install -c -m 644      jedict.sdic ~/Dropbox/dict/sdic
&lt;/pre&gt;

&lt;p&gt;
&#20170;&#24230;&#12399;&#12358;&#12414;&#12367;&#12356;&#12387;&#12383;&#12290;
M-x sdic&#12391;&#35430;&#12375;&#12383;&#12392;&#12371;&#12429;&#12289;&#33521;&#21644;&#12398;&#22793;&#25563;&#12399;&#12358;&#12414;&#12367;&#12356;&#12387;&#12383;&#12290;
e2wm&#12434;&#20351;&#12387;&#12390;&#12356;&#12427;&#12364;&#12289;&#34920;&#31034;&#12373;&#12428;&#12427;&#22580;&#25152;&#12364;&#12424;&#12429;&#12375;&#12367;&#12394;&#12356;&#12398;&#12391;
&#12394;&#12435;&#12392;&#12363;&#35373;&#23450;&#12434;&#35519;&#25972;&#12375;&#12390;&#12289;e2wm&#12398;&#12469;&#12502;&#12454;&#12451;&#12531;&#12489;&#12454;&#12395;&#12375;&#12383;&#12356;&#12392;&#12371;&#12429;&#12290;
&lt;img src="img/sdic/01.png"  alt="img/sdic/01.png" /&gt;
&lt;/p&gt;

&lt;p&gt;
&#33521;&#21644;&#12399;&#12358;&#12414;&#12367;&#12356;&#12387;&#12383;&#12364;&#12289;&#21644;&#33521;&#12364;&#12358;&#12414;&#12367;&#12356;&#12363;&#12394;&#12356;&#12290;
&#22810;&#20998;&#21407;&#22240;&#12399;&#12289;cygwin&#12398;grep&#12364;&#26085;&#26412;&#35486;&#12434;&#26908;&#32034;&#12391;&#12365;&#12394;&#12363;&#12425;&#12384;&#12392;&#24605;&#12358;&#12290;
&#35430;&#12375;&#12395;&#19979;&#35352;&#12398;&#12467;&#12510;&#12531;&#12489;&#12434;&#35430;&#12375;&#12383;&#12392;&#12371;&#12429;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;grep &lt;span class="org-string"&gt;'&amp;#12461;&amp;#12473;&amp;#12510;&amp;#12540;&amp;#12463;'&lt;/span&gt; jedict.sdic
&amp;#65306;
&amp;lt;K&amp;gt;&amp;#12541;&amp;lt;/K&amp;gt;&amp;lt;K&amp;gt;&amp;#12367;&amp;#12426;&amp;#12363;&amp;#12360;&amp;#12375;&amp;lt;/K&amp;gt;repetition mark&lt;span class="org-keyword"&gt; in&lt;/span&gt; katakana
&amp;lt;K&amp;gt;&amp;#12542;&amp;lt;/K&amp;gt;&amp;lt;K&amp;gt;&amp;#12367;&amp;#12426;&amp;#12363;&amp;#12360;&amp;#12375;&amp;lt;/K&amp;gt;voiced repetition mark&lt;span class="org-keyword"&gt; in&lt;/span&gt; katakana
&amp;lt;K&amp;gt;&amp;#12445;&amp;lt;/K&amp;gt;&amp;lt;K&amp;gt;&amp;#12367;&amp;#12426;&amp;#12363;&amp;#12360;&amp;#12375;&amp;lt;/K&amp;gt;repetition mark&lt;span class="org-keyword"&gt; in&lt;/span&gt; hiragana
&amp;lt;K&amp;gt;&amp;#12446;&amp;lt;/K&amp;gt;&amp;lt;K&amp;gt;&amp;#12367;&amp;#12426;&amp;#12363;&amp;#12360;&amp;#12375;&amp;lt;/K&amp;gt;voiced repetition mark&lt;span class="org-keyword"&gt; in&lt;/span&gt; hiragana
&amp;lt;K&amp;gt;&amp;#12291;&amp;lt;/K&amp;gt;&amp;lt;K&amp;gt;&amp;#12362;&amp;#12394;&amp;#12376;&amp;#12367;&amp;lt;/K&amp;gt;ditto mark
&amp;lt;K&amp;gt;&amp;#20189;&amp;lt;/K&amp;gt;&amp;lt;K&amp;gt;&amp;#12393;&amp;#12358;&amp;#12376;&amp;#12423;&amp;#12358;&amp;lt;/K&amp;gt;&lt;span class="org-string"&gt;"as above"&lt;/span&gt; mark
&amp;lt;K&amp;gt;&amp;#12293;&amp;lt;/K&amp;gt;repetition of kanji (sometimes voiced)
&amp;lt;K&amp;gt;&amp;#12294;&amp;lt;/K&amp;gt;&amp;lt;K&amp;gt;&amp;#12375;&amp;#12417;&amp;lt;/K&amp;gt;end or closure mark
&amp;#65306;
&lt;/pre&gt;

&lt;p&gt;
&#20840;&#37096;&#12498;&#12483;&#12488;&#12375;&#12390;&#12375;&#12414;&#12387;&#12390;&#12356;&#12427;&#12290;&#12290;&#12290;&#12290;
cygwin&#12398;&#12467;&#12531;&#12477;&#12540;&#12523;&#12363;&#12425;grep&#12375;&#12383;&#12392;&#12365;&#12399;&#12498;&#12483;&#12488;&#12377;&#12427;&#12398;&#12384;&#12364;&#12289;
&#33258;&#20998;&#12364;&#12513;&#12452;&#12531;&#12391;&#20351;&#29992;&#12375;&#12390;&#12356;&#12427;emacs&#12399;GUI&#29256;&#12394;&#12398;&#12391;
&#35023;&#12391;&#12358;&#12372;&#12367;&#12418;&#12398;&#12364;&#12289;dos&#12395;&#12394;&#12387;&#12390;&#12356;&#12427;&#12290;&#22810;&#20998;&#12371;&#12428;&#12364;&#21407;&#22240;&#12384;&#12429;&#12358;&#12290;
&#12390;&#12371;&#12392;&#12391;&#12289;shell&#12434;dos&#12376;&#12419;&#12394;&#12367;&#12390;bash&#12395;&#12375;&#12390;&#12415;&#12427;&#12290;
&#12392;&#24605;&#12387;&#12383;&#12364;&#12289;eshell&#12376;&#12419;&#12394;&#12367;&#12390;&#12289;shell&#12399;cygwin&#12364;&#21205;&#12367;&#12424;&#12358;&#12395;&#35373;&#23450;&#12375;&#12390;&#12354;&#12387;&#12383;&#12290;
&#12391;&#12289;shell-mode&#12391;grep&#12375;&#12390;&#12415;&#12427;&#12392;&#12289;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ grep &lt;span class="org-string"&gt;'&amp;#12461;&amp;#12473;&amp;#12510;&amp;#12540;&amp;#12463;'&lt;/span&gt; jedict.sdic
grep &lt;span class="org-string"&gt;'&amp;#7;L&amp;#7;X&amp;#7;}&amp;#7;[&amp;#7;N'&lt;/span&gt; jedict.sdic
grep: Unmatched [ or [^
&lt;/pre&gt;

&lt;p&gt;
&#12371;&#12435;&#12394;&#24863;&#12376;&#12391;&#21270;&#12369;&#12390;&#12375;&#12414;&#12358;&#12290;
&lt;/p&gt;
&lt;p&gt;
 (set-buffer-process-coding-system 'utf-8-unix 'utf-8-unix)
&lt;/p&gt;


</content></entry><entry><title type="html">Clojureでゲームプログラミングその1 実験編</title><author><name>nil</name></author><link href="http://mikio.github.com//article/2011/11/09_clojure1.html"/><updated>2011-11-09T19:29:00Z</updated><published>2011-11-09T19:29:00Z</published><id>article/2011/11/09_clojure1.html</id><category scheme="/tags/clojure.html" term="clojure" label="clojure"/><category scheme="/tags/gamedev.html" term="gamedev" label="gamedev"/><content type="html">&lt;div id="outline-container-1" class="outline-3"&gt;
&lt;h3 id="sec-1"&gt;&#12399;&#12376;&#12417;&#12395;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1"&gt;


&lt;p&gt;
Lisp&#12391;GAME&#12388;&#12367;&#12429;&#12358;&#12363;&#12394;&#12392;&#12290;
&#26368;&#21021;CommonLisp&#12391;&#12388;&#12367;&#12429;&#12358;&#12363;&#12394;&#12392;&#24605;&#12387;&#12383;&#12369;&#12393;&#12418;&#12289;&#29694;&#26178;&#28857;&#12391;CommonLisp&#12392;Clojure(+Java)&#12434;&#27604;&#36611;&#12375;&#12383;&#12392;&#12365;&#12395;
&#24460;&#32773;&#12398;&#12411;&#12358;&#12364;&#35443;&#12375;&#12356;&#12363;&#12394;&#12392;&#12356;&#12358;&#12371;&#12392;&#12391;&#12289;&#12414;&#12378;&#12399;Clojure&#12391;&#12388;&#12367;&#12387;&#12390;&#12415;&#12390;&#12289;&#33853;&#12385;&#30528;&#12356;&#12383;&#12425;CommonLisp&#12391;&#12418;&#12388;&#12367;&#12387;&#12390;&#12415;&#12424;&#12358;&#12363;&#12394;&#12392;&#12290;
&lt;/p&gt;
&lt;p&gt;
&#12392;&#12426;&#12354;&#12360;&#12378;&#12289;&#19979;&#35352;&#12398;&#27969;&#12428;&#12391;&#12289;&#30011;&#20687;&#12434;&#34920;&#31034;&#12375;&#12390;&#21205;&#12363;&#12377;&#12392;&#12371;&#12429;&#12414;&#12391;&#12481;&#12515;&#12524;&#12531;&#12472;&#12375;&#12390;&#12415;&#12427;&#12290;
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&#12454;&#12451;&#12531;&#12489;&#12454;&#34920;&#31034;
&lt;/li&gt;
&lt;li&gt;&#30011;&#20687;&#34920;&#31034;
&lt;/li&gt;
&lt;li&gt;&#12513;&#12452;&#12531;&#12523;&#12540;&#12503;&#12398;&#23455;&#29694;
&lt;/li&gt;
&lt;li&gt;&#30011;&#20687;&#31227;&#21205;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;
&#12418;&#12385;&#12429;&#12435;&#21069;&#22238;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12375;&#12383;SLIME&#12392;Leiningen&#12434;&#20351;&#12387;&#12390;&#20316;&#26989;&#12375;&#12414;&#12377;&#12424;&#12290;
&#12385;&#12394;&#12415;&#12395;Clojure&#12391;&#12300;&#12418;&#12398;&#12301;&#12434;&#20316;&#12427;&#12398;&#12399;&#21021;&#12417;&#12390;&#12394;&#12398;&#12391;&#12289;&#12507;&#12531;&#12488;&#25163;&#25506;&#12426;&#12391;&#12377;&#12290;
&#12375;&#12363;&#12418;Clojure&#12391;Game&#12503;&#12525;&#12464;&#12521;&#12511;&#12531;&#12464;&#12398;&#24773;&#22577;&#12387;&#12390;&#12411;&#12392;&#12435;&#12393;&#12394;&#12356;&#12435;&#12384;&#12424;&#12394;&#12290;&#12373;&#12390;&#12290;
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-2" class="outline-3"&gt;
&lt;h3 id="sec-2"&gt;&#12454;&#12451;&#12531;&#12489;&#12454;&#34920;&#31034;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2"&gt;

&lt;p&gt;Clojure&#12391;&#12398;GUI&#12399;&#12373;&#12387;&#12401;&#12426;&#12431;&#12363;&#12425;&#12435;&#12369;&#12393;&#12418;&#12289;&#12392;&#12426;&#12354;&#12360;&#12378;Java&#12398;&#12469;&#12531;&#12503;&#12523;&#12392;&#12363;&#12434;&#38972;&#12426;&#12395;&#12454;&#12451;&#12531;&#12489;&#12454;&#12434;&#34920;&#31034;&#12375;&#12390;&#12415;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-Clojure"&gt;(import (javax.swing JFrame))
(def frame (JFrame. &lt;span class="org-string"&gt;"Clojure SampleGame"&lt;/span&gt;)) 
(doto frame
(.setSize 640 480)
  (.setVisible true))
&lt;/pre&gt;

&lt;p&gt;
&#12391;&#12383;&#12290;&#31777;&#21336;&#12377;&#12366;&#12427;&#65281;&#32080;&#27083;&#24863;&#21205;&#12375;&#12414;&#12377;&#12290;
&lt;img src="img/clojure-game01/01.png"  alt="img/clojure-game01/01.png" /&gt;
&lt;/p&gt;
&lt;p&gt;
&#27425;&#12399;&#30011;&#20687;&#12434;&#34920;&#31034;&#12375;&#12390;&#12415;&#12427;&#12290;
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-3" class="outline-3"&gt;
&lt;h3 id="sec-3"&gt;&#30011;&#20687;&#34920;&#31034;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-3"&gt;


&lt;p&gt;
&#12414;&#12378;&#12399;&#12289;&#30011;&#20687;&#12501;&#12449;&#12452;&#12523;&#12398;&#35501;&#12415;&#36796;&#12415;&#12384;&#12290;&#19979;&#35352;&#12398;&#12467;&#12540;&#12489;&#12434;clojure&#12391;&#21205;&#12363;&#12375;&#12390;&#12415;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;&lt;span class="org-preprocessor"&gt;java.awt.image.BufferedImage&lt;/span&gt; bimage&lt;span class="org-comment-delimiter"&gt;;&lt;/span&gt;
image = &lt;span class="org-preprocessor"&gt;javax.imageio.ImageIO.read&lt;/span&gt;(new &lt;span class="org-preprocessor"&gt;java.io.File&lt;/span&gt;(&lt;span class="org-string"&gt;"hoge.png"&lt;/span&gt;))&lt;span class="org-comment-delimiter"&gt;;&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;
&#19979;&#35352;&#12398;&#30011;&#20687;&#12434;&#34920;&#31034;&#12375;&#12390;&#12415;&#12427;&#12290;&#12371;&#12428;&#12399;&#26132;&#20316;&#12387;&#12383;&#12466;&#12540;&#12512;&#12391;&#20351;&#29992;&#12375;&#12383;&#12418;&#12398;&#12391;&#12450;&#12491;&#12513;&#12540;&#12471;&#12519;&#12531;&#12497;&#12479;&#12540;&#12531;&#12418;&#12399;&#12356;&#12387;&#12390;&#12427;&#12290;
&lt;img src="img/clojure-game01/gai.png"  alt="img/clojure-game01/gai.png" /&gt;
&lt;/p&gt;
&lt;p&gt;
&#30011;&#20687;&#12501;&#12449;&#12452;&#12523;&#12399;&#12503;&#12525;&#12472;&#12455;&#12463;&#12488;&#30452;&#19979;&#12395;&#12362;&#12356;&#12390;&#12354;&#12427;&#65288;REPL&#12434;&#36215;&#21205;&#12375;&#12383;&#12487;&#12451;&#12524;&#12463;&#12488;&#12522;)&#12290;
&#22806;&#37096;&#12501;&#12449;&#12452;&#12523;&#12399;&#12503;&#12525;&#12472;&#12455;&#12463;&#12488;&#12523;&#12540;&#12488;&#12363;&#12425;&#12398;&#30456;&#23550;&#12497;&#12473;&#12391;OK&#12398;&#12424;&#12358;&#12391;&#12354;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(&lt;span class="org-builtin"&gt;import&lt;/span&gt; (java.awt.image &lt;span class="org-preprocessor"&gt;BufferedImage&lt;/span&gt;))
(&lt;span class="org-builtin"&gt;import&lt;/span&gt; (javax.imageio &lt;span class="org-preprocessor"&gt;ImageIO&lt;/span&gt;))
(&lt;span class="org-builtin"&gt;import&lt;/span&gt; (java.io &lt;span class="org-preprocessor"&gt;File&lt;/span&gt;))
(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;image&lt;/span&gt; (&lt;span class="org-preprocessor"&gt;ImageIO/read&lt;/span&gt; (&lt;span class="org-preprocessor"&gt;File.&lt;/span&gt; &lt;span class="org-string"&gt;"gai.png"&lt;/span&gt;))) 
&lt;/pre&gt;

&lt;p&gt;
&#12392;&#12426;&#12354;&#12360;&#12378;&#12358;&#12414;&#12367;&#35501;&#12415;&#36796;&#12417;&#12383;&#12387;&#12413;&#12356;&#12398;&#12391;&#12289;&#12454;&#12451;&#12531;&#12489;&#12454;&#12395;&#34920;&#31034;&#12375;&#12390;&#12415;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(&lt;span class="org-builtin"&gt;import&lt;/span&gt; (java.awt &lt;span class="org-preprocessor"&gt;Graphics&lt;/span&gt;))
(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;graphics&lt;/span&gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; frame (&lt;span class="org-preprocessor"&gt;getGraphics&lt;/span&gt;)))
(&lt;span class="org-builtin"&gt;doto&lt;/span&gt; graphics
  (&lt;span class="org-preprocessor"&gt;.drawImage&lt;/span&gt; image 0 0 frame))
&lt;/pre&gt;

&lt;p&gt;
&#12391;&#12383;&#65281;
&lt;img src="img/clojure-game01/02.png"  alt="img/clojure-game01/02.png" /&gt;
&lt;/p&gt;
&lt;p&gt;
&#32218;&#12418;&#12363;&#12369;&#12383;&#12424;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(&lt;span class="org-builtin"&gt;..&lt;/span&gt; graphics (&lt;span class="org-preprocessor"&gt;drawLine&lt;/span&gt; 0 0 640 480))
&lt;/pre&gt;


&lt;p&gt;
&lt;img src="img/clojure-game01/03.png"  alt="img/clojure-game01/03.png" /&gt;
&lt;/p&gt;

&lt;p&gt;
&#12392;&#12371;&#12429;&#12391;&#12371;&#12428;&#12414;&#12391;&#12398;&#30011;&#20687;&#34920;&#31034;&#12399;&#12479;&#12452;&#12488;&#12523;&#12496;&#12540;&#12395;&#12417;&#12426;&#36796;&#12435;&#12391;&#12375;&#12414;&#12387;&#12390;&#12356;&#12427;&#12290;
&#12371;&#12428;&#12399;&#25551;&#30011;&#21629;&#20196;&#12398;&#24231;&#27161;&#21407;&#28857;&#12364;&#12289;&#12454;&#12451;&#12531;&#12489;&#12454;&#12381;&#12398;&#12418;&#12398;&#24038;&#19978;&#12434;&#21407;&#28857;&#12392;&#12375;&#12390;&#12356;&#12427;&#12383;&#12417;&#12391;&#12354;&#12427;&#12290;
&#12371;&#12428;&#12434;&#22238;&#36991;&#12377;&#12427;&#12395;&#12399;&#12289;Graphics#translate&#12434;&#21628;&#12403;&#20986;&#12377;&#12290;
&lt;/p&gt;

&lt;/div&gt;

&lt;div id="outline-container-3-1" class="outline-4"&gt;
&lt;h4 id="sec-3-1"&gt;&#20301;&#32622;&#35519;&#25972;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-3-1"&gt;

&lt;p&gt;&#12378;&#12428;&#12398;&#21407;&#22240;&#12391;&#12354;&#12427;&#12479;&#12452;&#12488;&#12523;&#12496;&#12540;&#12420;&#26528;&#12362;&#24773;&#22577;&#12399;&#12289;java.awt.Insets&#12392;&#12358;&#12356;&#12463;&#12521;&#12473;&#12395;&#26684;&#32013;&#12373;&#12428;&#12390;&#12356;&#12427;&#12290;
&#12371;&#12428;&#12399;Jframe#getInsets&#12513;&#12477;&#12483;&#12489;&#12391;&#21462;&#24471;&#12391;&#12356;&#12427;&#12398;&#12391;&#12289;&#26463;&#32283;&#12375;&#12390;&#12362;&#12367;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;insets&lt;/span&gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; frame &lt;span class="org-preprocessor"&gt;getInsets&lt;/span&gt;)) 
&lt;/pre&gt;


&lt;p&gt;
&#30906;&#35469;&#12290;&#12381;&#12428;&#12387;&#12413;&#12356;&#20516;&#12364;&#20837;&#12387;&#12390;&#12356;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;user&amp;gt; insets
#&amp;lt;&lt;span class="org-preprocessor"&gt;Insets&lt;/span&gt; &lt;span class="org-preprocessor"&gt;java.awt.Insets&lt;/span&gt;[top=24,left=1,bottom=5,right=1]&amp;gt;
&lt;/pre&gt;


&lt;p&gt;
&#12391;&#12399;&#12289;&#12371;&#12398;insets&#12434;&#20351;&#12387;&#12390;&#25551;&#30011;&#29992;&#21407;&#28857;&#12434;&#12378;&#12425;&#12375;&#12390;&#12415;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(&lt;span class="org-builtin"&gt;..&lt;/span&gt; frame (&lt;span class="org-preprocessor"&gt;setVisible&lt;/span&gt; true))
(&lt;span class="org-builtin"&gt;..&lt;/span&gt; graphics (translate (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets left) (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets top)))
(&lt;span class="org-builtin"&gt;..&lt;/span&gt; graphics (&lt;span class="org-preprocessor"&gt;clearRect&lt;/span&gt; 0 0 640 480))
(&lt;span class="org-builtin"&gt;..&lt;/span&gt; graphics (&lt;span class="org-preprocessor"&gt;drawImage&lt;/span&gt; image 0 0 frame))
&lt;/pre&gt;

&lt;p&gt;
&lt;img src="img/clojure-game01/04.png"  alt="img/clojure-game01/04.png" /&gt; 
&lt;/p&gt;
&lt;p&gt;
&#12371;&#12428;&#12391;&#24038;&#19978;&#21407;&#28857;&#12364;&#12289;&#12378;&#12428;&#12390;&#12356;&#12356;&#20855;&#21512;&#12395;&#34920;&#31034;&#12373;&#12428;&#12383;&#12290;
&lt;/p&gt;
&lt;p&gt;
insents&#12434;&#21033;&#29992;&#12375;&#12383;&#12388;&#12356;&#12391;&#12395;&#35500;&#26126;&#12290;
&#23455;&#12399;&#12454;&#12451;&#12531;&#12489;&#12454;&#12469;&#12452;&#12474;&#12391;640x480&#12434;&#25351;&#23450;&#12375;&#12390;&#12356;&#12427;&#12369;&#12428;&#12393;&#12418;&#12289;
&#12479;&#12452;&#12488;&#12523;&#12496;&#12540;&#12420;&#26528;&#12398;&#12469;&#12452;&#12474;&#12364;&#12354;&#12427;&#12383;&#12417;&#12289;&#25551;&#30011;&#38936;&#22495;&#12399;640x480&#12424;&#12426;&#12418;&#12385;&#12423;&#12387;&#12392;&#23567;&#12373;&#12356;&#12290;
&#12394;&#12398;&#12391;&#12289;&#20363;&#12360;&#12400;640x480&#12385;&#12423;&#12358;&#12393;&#12398;&#12469;&#12452;&#12474;&#12398;&#30011;&#20687;&#12434;&#34920;&#31034;&#12375;&#12424;&#12358;&#12392;&#12375;&#12390;&#12418;&#23569;&#12375;&#20999;&#12428;&#12390;&#12375;&#12414;&#12387;&#12383;&#12426;&#12377;&#12427;&#12290;
&#12392;&#12356;&#12358;&#12371;&#12392;&#12391;&#12289;insents&#12434;&#21033;&#29992;&#12375;&#12390;&#25551;&#30011;&#38936;&#22495;&#12364;&#32020;&#31883;&#12395;640x480&#20284;&#12394;&#12427;&#12424;&#12358;&#12395;&#35519;&#25972;&#12377;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(&lt;span class="org-builtin"&gt;doto&lt;/span&gt; frame
    (&lt;span class="org-preprocessor"&gt;.setSize&lt;/span&gt; (&lt;span class="org-variable-name"&gt;+&lt;/span&gt; 640 (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets left) (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets right)) (&lt;span class="org-variable-name"&gt;+&lt;/span&gt; 480 (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets top) (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets bottom)))
    (&lt;span class="org-preprocessor"&gt;.setVisible&lt;/span&gt; true))
&lt;/pre&gt;

&lt;p&gt;
&#20197;&#19978;&#12391;&#25551;&#30011;&#38936;&#22495;&#12398;&#32048;&#12363;&#12356;&#35519;&#25972;&#12364;&#23436;&#20102;&#12375;&#12383;&#12290;
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-3-2" class="outline-4"&gt;
&lt;h4 id="sec-3-2"&gt;&#30011;&#20687;&#12398;&#19968;&#37096;&#12434;&#34920;&#31034;&#12375;&#12383;&#12356;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-3-2"&gt;

&lt;p&gt;&#12392;&#12371;&#12429;&#12391;&#12289;&#29694;&#29366;&#12384;&#12392;&#12450;&#12491;&#12513;&#12497;&#12479;&#12540;&#12531;&#12364;&#12377;&#12409;&#12390;&#34920;&#31034;&#12373;&#12428;&#12390;&#12356;&#12390;&#12415;&#12387;&#12392;&#12418;&#12394;&#12356;&#12398;&#12391;
&#19968;&#37096;&#12384;&#12369;&#12434;&#34920;&#31034;&#12375;&#12383;&#12356;&#12290;
&#12371;&#12398;&#35201;&#20214;&#12434;&#28288;&#12383;&#12377;&#12395;&#12399;&#12289;Graphics#DrawImage&#12391;&#19979;&#35352;&#12398;&#12424;&#12358;&#12395;&#24341;&#25968;&#12434;&#25351;&#23450;&#12377;&#12428;&#12400;&#33391;&#12356;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(&lt;span class="org-preprocessor"&gt;.drawImage&lt;/span&gt;
    image   &lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#25551;&amp;#30011;&amp;#30011;&amp;#20687;&lt;/span&gt;
    0 0     &lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#36578;&amp;#36865;&amp;#20808;&amp;#12398;&amp;#24038;&amp;#19978;&amp;#24231;&amp;#27161;&lt;/span&gt;
    32 32   &lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#36578;&amp;#36865;&amp;#20808;&amp;#12398;&amp;#21491;&amp;#19979;&amp;#24231;&amp;#27161;&lt;/span&gt;
    0 0     &lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#30011;&amp;#20687;&amp;#20803;&amp;#12398;&amp;#24038;&amp;#19978;&amp;#24231;&amp;#27161;&lt;/span&gt;
    32 32   &lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#30011;&amp;#20687;&amp;#20803;&amp;#12398;&amp;#21491;&amp;#19979;&amp;#24231;&amp;#27161;&lt;/span&gt;
    frame)  &lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#25551;&amp;#30011;&amp;#23550;&amp;#35937;&lt;/span&gt;
&lt;/pre&gt;



&lt;pre class="src src-cojure"&gt;(import java.awt.Color)
(def clear-color (Color. 0 0 127))

(let [g (.. frame (getGraphics))]
  (doto g
    (.translate (.. insets left) (.. insets top))
    (.setColor clear-color)
    (.fillRect 0 0 640 480)
    (.drawImage image
                0 0 32 32
                0 0 32 32
                frame)
    (.dispose)))
&lt;/pre&gt;

&lt;p&gt;
&lt;img src="img/clojure-game01/05.png"  alt="img/clojure-game01/05.png" /&gt;
&lt;/p&gt;

&lt;p&gt;
&#12394;&#12435;&#12393;&#12418;&#25551;&#30011;&#12375;&#12390;&#12427;&#12392;&#12289;&#21069;&#12398;&#30011;&#20687;&#12364;&#27531;&#12387;&#12390;&#30906;&#35469;&#12375;&#12389;&#12425;&#12356;&#12398;&#12391;
&#25551;&#30011;&#21069;&#12395;&#12463;&#12522;&#12450;&#12459;&#12521;&#12540;&#12391;&#22615;&#12426;&#12388;&#12406;&#12375;&#12390;&#12356;&#12427;&#12290;
&#12388;&#12356;&#12391;&#12395;&#12464;&#12521;&#12501;&#12451;&#12483;&#12463;&#12458;&#12502;&#12472;&#12455;&#12463;&#12488;&#12418;&#12381;&#12398;&#37117;&#24230;&#30772;&#26820;&#12377;&#12427;&#12424;&#12358;&#12395;&#12375;&#12383;&#12290;
&lt;/p&gt;
&lt;p&gt;
&#12388;&#12366;&#12399;&#12466;&#12540;&#12512;&#12398;&#12363;&#12394;&#12417;&#12289;&#12513;&#12452;&#12531;&#12523;&#12540;&#12503;&#12434;&#23455;&#29694;&#12375;&#12390;&#12415;&#12427;&#12290;
&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-4" class="outline-3"&gt;
&lt;h3 id="sec-4"&gt;&#12513;&#12452;&#12531;&#12523;&#12540;&#12503;&#12398;&#23455;&#29694;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-4"&gt;

&lt;p&gt;&#12513;&#12452;&#12531;&#12523;&#12540;&#12503;&#12398;&#23455;&#29694;&#26041;&#27861;&#12395;&#12399;&#12395;&#12399;&#12356;&#12429;&#12356;&#12429;&#12354;&#12369;&#12428;&#12393;&#12418;
&#12392;&#12426;&#12354;&#12360;&#12378;&#21205;&#12363;&#12377;&#12371;&#12392;&#12364;&#30446;&#30340;&#12394;&#12398;&#12391;&#12289;
&#23455;&#35013;&#12364;&#31777;&#21336;&#12381;&#12358;&#12394;java.util.TimerTask&#12434;&#20351;&#29992;&#12375;&#12390;&#12415;&#12427;&#12290;
&lt;/p&gt;
&lt;p&gt;
Clojure&#12391;&#32153;&#25215;&#12364;&#24517;&#35201;&#12394;Java&#12463;&#12521;&#12473;&#12434;&#20351;&#12358;&#12395;&#12399;&#12289;proxy&#12434;&#20351;&#12358;&#12290;
&#20197;&#19979;&#12398;&#12424;&#12358;&#12395;TimerTask&#12434;&#32153;&#25215;&#12375;&#12383;&#12463;&#12521;&#12473;&#12434;&#12388;&#12367;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(&lt;span class="org-builtin"&gt;import&lt;/span&gt; (java.util &lt;span class="org-preprocessor"&gt;Timer&lt;/span&gt; &lt;span class="org-preprocessor"&gt;TimerTask&lt;/span&gt;))
(&lt;span class="org-builtin"&gt;import&lt;/span&gt; (java.util &lt;span class="org-preprocessor"&gt;TimerTask&lt;/span&gt;))
(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;mainloop&lt;/span&gt;
  (&lt;span class="org-variable-name"&gt;proxy&lt;/span&gt; [&lt;span class="org-preprocessor"&gt;TimerTask&lt;/span&gt;] []
    (run []
      (&lt;span class="org-variable-name"&gt;println&lt;/span&gt; &lt;span class="org-string"&gt;"&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;"&lt;/span&gt;))
    )) 
&lt;/pre&gt;


&lt;p&gt;
&#12486;&#12473;&#12488;&#12375;&#12390;&#12415;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;user&amp;gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; mainloop run) 
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
nil
&lt;/pre&gt;

&lt;p&gt;
&#12358;&#12414;&#12367;&#12356;&#12387;&#12390;&#12356;&#12427;&#12424;&#12358;&#12391;&#12354;&#12427;&#12290;
&lt;/p&gt;
&lt;p&gt;
&#32154;&#12356;&#12390;Time&#12463;&#12521;&#12473;&#12395;mainloop&#12434;&#28193;&#12375;&#12390;&#12415;&#12427;&#12290;&#12371;&#12428;&#12364;&#12399;&#12414;&#12387;&#12383;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;user&amp;gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; (&lt;span class="org-preprocessor"&gt;Timer.&lt;/span&gt;) schedule mainloop 0 500)

&lt;span class="org-preprocessor"&gt;Malformed&lt;/span&gt; member expression
  [&lt;span class="org-preprocessor"&gt;Thrown&lt;/span&gt; class &lt;span class="org-preprocessor"&gt;java.lang.IllegalArgumentException&lt;/span&gt;]

Restarts:
 0: [QUIT] &lt;span class="org-preprocessor"&gt;Quit&lt;/span&gt; to the SLIME top level

Backtrace:
  0: &lt;span class="org-preprocessor"&gt;clojure.lang.Compiler$HostExpr$Parser.parse&lt;/span&gt;(Compiler.java:825)
  1: &lt;span class="org-preprocessor"&gt;clojure.lang.Compiler.analyzeSeq&lt;/span&gt;(Compiler.java:5369)

&lt;/pre&gt;

&lt;p&gt;
&#12300;Malformed member expression&#12301;&#12398;&#21407;&#22240;&#12364;&#12431;&#12363;&#12425;&#12394;&#12367;&#12390;&#12363;&#12394;&#12426;&#12399;&#12414;&#12387;&#12383;&#12290;
&#12368;&#12368;&#12387;&#12383;&#32080;&#26524;&#12289;java&#12398;long&#22411;&#12434;&#24341;&#25968;&#12392;&#12375;&#12390;&#28193;&#12377;&#12392;&#12365;&#12399;&#12289;long&#38306;&#25968;&#12434;&#21628;&#12403;&#20986;&#12377;&#24517;&#35201;&#12364;&#12354;&#12427;&#12371;&#12392;&#12364;&#12431;&#12363;&#12387;&#12383;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;user&amp;gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; (&lt;span class="org-preprocessor"&gt;Timer.&lt;/span&gt;) schedule mainloop (&lt;span class="org-variable-name"&gt;long&lt;/span&gt; 0) (&lt;span class="org-variable-name"&gt;long&lt;/span&gt; 500))
&lt;span class="org-preprocessor"&gt;No&lt;/span&gt; matching field found: schedule for class &lt;span class="org-preprocessor"&gt;java.util.Timer&lt;/span&gt;
  [&lt;span class="org-preprocessor"&gt;Thrown&lt;/span&gt; class &lt;span class="org-preprocessor"&gt;java.lang.IllegalArgumentException&lt;/span&gt;]

Restarts:
 0: [QUIT] &lt;span class="org-preprocessor"&gt;Quit&lt;/span&gt; to the SLIME top level

Backtrace:
  0: &lt;span class="org-preprocessor"&gt;clojure.lang.Reflector.getInstanceField&lt;/span&gt;(Reflector.java:245)
  1: &lt;span class="org-preprocessor"&gt;clojure.lang.Reflector.invokeNoArgInstanceMember&lt;/span&gt;(Reflector.java:267)
&lt;/pre&gt;

&lt;p&gt;
&#12392;&#12371;&#12371;&#12391;&#12414;&#12383;&#12456;&#12521;&#12540;&#12290;&#12391;&#12414;&#12383;&#12368;&#12368;&#12387;&#12383;&#32080;&#26524;&#12289;&#12513;&#12477;&#12483;&#12489;&#12398;&#21628;&#12403;&#20986;&#12375;&#26041;&#12364;&#38291;&#36949;&#12387;&#12390;&#12356;&#12383;orz&#12290;
schedule&#12434;&#12459;&#12483;&#12467;&#12391;&#12367;&#12367;&#12425;&#12394;&#12356;&#12392;&#39364;&#30446;&#12425;&#12375;&#12356;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;user&amp;gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; (&lt;span class="org-preprocessor"&gt;Timer.&lt;/span&gt;) (schedule mainloop (&lt;span class="org-variable-name"&gt;long&lt;/span&gt; 0) (&lt;span class="org-variable-name"&gt;long&lt;/span&gt; 500)))
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
&amp;#21628;&amp;#12403;&amp;#12384;&amp;#12373;&amp;#12428;&amp;#12383;
nil
&lt;/pre&gt;

&lt;p&gt;
&#12392;&#12356;&#12358;&#12371;&#12392;&#12391;&#12420;&#12387;&#12392;Timer&#12463;&#12521;&#12473;&#12395;Timer&#12479;&#12473;&#12463;&#12391;&#20316;&#12387;&#12383;&#12513;&#12452;&#12531;&#12523;&#12540;&#12503;&#12434;&#28193;&#12377;&#12371;&#12392;&#12364;&#12391;&#12365;&#12383;&#12290;&#12405;&#12357;&#12290;
&#27425;&#12399;&#30011;&#20687;&#12434;&#21205;&#12363;&#12375;&#12390;&#12415;&#12427;&#12290;
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-5" class="outline-3"&gt;
&lt;h3 id="sec-5"&gt;&#30011;&#20687;&#12398;&#31227;&#21205;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-5"&gt;

&lt;p&gt;&#12356;&#12424;&#12356;&#12424;&#30011;&#20687;&#12395;&#39746;&#12434;&#19982;&#12360;&#12427;w&#12290;&#12381;&#12398;&#28858;&#12395;&#12399;&#29366;&#24907;&#12434;&#31649;&#29702;&#12375;&#12394;&#12369;&#12428;&#12400;&#12394;&#12425;&#12394;&#12356;&#12290;&#24231;&#27161;&#12384;&#12290;
Clojure&#12399;&#12487;&#12501;&#12457;&#12523;&#12488;&#12391;&#12399;&#20516;&#12434;&#26356;&#26032;&#12391;&#12365;&#12394;&#12356;&#12290;&#12371;&#12428;&#12434;&#22793;&#26356;&#12377;&#12427;&#12383;&#12417;&#12395;&#12399;&#29305;&#21029;&#12394;&#23450;&#32681;&#12364;&#24517;&#35201;&#12290;
&#12473;&#12524;&#12483;&#12489;&#12434;&#20351;&#12358;&#20104;&#23450;&#12399;&#20170;&#12398;&#12392;&#12371;&#12429;&#28961;&#12356;&#12398;&#12391;&#12289;&#25201;&#12356;&#12398;&#31777;&#21336;&#12381;&#12358;&#12394;atom&#12434;&#20351;&#29992;&#12375;&#12390;&#12415;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;&lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#12503;&amp;#12524;&amp;#12452;&amp;#12516;&amp;#12540;&amp;#23450;&amp;#32681;&lt;/span&gt;
(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;player&lt;/span&gt; (&lt;span class="org-variable-name"&gt;atom&lt;/span&gt; {&lt;span class="org-constant"&gt;:pos&lt;/span&gt; [0 0]}))
&lt;/pre&gt;


&lt;p&gt;
&#12371;&#12435;&#12394;&#24863;&#12376;&#12391;&#21442;&#29031;&#12391;&#12365;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;user&amp;gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;)
[0 0]
user&amp;gt; 
&lt;/pre&gt;


&lt;p&gt;
x&#24231;&#27161;&#12399;&#37197;&#21015;&#12398;0&#30058;&#30446;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;user&amp;gt; (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0) 
0
&lt;/pre&gt;


&lt;p&gt;
y&#24231;&#27161;&#12399;&#37197;&#21015;&#12398;1&#30058;&#30446;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;user&amp;gt; (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 1) 
0
&lt;/pre&gt;


&lt;p&gt;
player&#12398;&#24231;&#27161;&#12434;&#26356;&#26032;&#12375;&#12390;&#12415;&#12427;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;user&amp;gt; player
#&amp;lt;Atom@2a134eca: {&lt;span class="org-constant"&gt;:pos&lt;/span&gt; [0 0]}&amp;gt;

&lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#22793;&amp;#26356;&lt;/span&gt;
user&amp;gt; (&lt;span class="org-variable-name"&gt;swap!&lt;/span&gt; player assoc &lt;span class="org-constant"&gt;:pos&lt;/span&gt; [0 1])
{&lt;span class="org-constant"&gt;:pos&lt;/span&gt; [0 1]}

&lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#12383;&amp;#12375;&amp;#12363;&amp;#12395;&amp;#26356;&amp;#26032;&amp;#12373;&amp;#12428;&amp;#12383;&lt;/span&gt;
user&amp;gt; player
#&amp;lt;Atom@2a134eca: {&lt;span class="org-constant"&gt;:pos&lt;/span&gt; [0 1]}&amp;gt;
&lt;/pre&gt;


&lt;p&gt;
x&#24231;&#27161;&#12434;&#26356;&#26032;&#12373;&#12379;&#12427;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;user&amp;gt; (&lt;span class="org-variable-name"&gt;swap!&lt;/span&gt; player assoc &lt;span class="org-constant"&gt;:pos&lt;/span&gt; [(&lt;span class="org-variable-name"&gt;+&lt;/span&gt; 1 (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0)) 1])
{&lt;span class="org-constant"&gt;:pos&lt;/span&gt; [1 1]}
user&amp;gt; (&lt;span class="org-variable-name"&gt;swap!&lt;/span&gt; player assoc &lt;span class="org-constant"&gt;:pos&lt;/span&gt; [(&lt;span class="org-variable-name"&gt;+&lt;/span&gt; 1 (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0)) 1])
{&lt;span class="org-constant"&gt;:pos&lt;/span&gt; [2 1]}
user&amp;gt; (&lt;span class="org-variable-name"&gt;swap!&lt;/span&gt; player assoc &lt;span class="org-constant"&gt;:pos&lt;/span&gt; [(&lt;span class="org-variable-name"&gt;+&lt;/span&gt; 1 (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0)) 1])
{&lt;span class="org-constant"&gt;:pos&lt;/span&gt; [3 1]}
user&amp;gt; (&lt;span class="org-variable-name"&gt;swap!&lt;/span&gt; player assoc &lt;span class="org-constant"&gt;:pos&lt;/span&gt; [(&lt;span class="org-variable-name"&gt;+&lt;/span&gt; 1 (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0)) 1])
{&lt;span class="org-constant"&gt;:pos&lt;/span&gt; [4 1]}
&lt;/pre&gt;


&lt;p&gt;
&#12391;&#12399;&#12371;&#12371;&#12414;&#12391;&#12398;&#31227;&#21205;&#20966;&#29702;&#12434;&#32068;&#12415;&#36796;&#12416;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;mainloop&lt;/span&gt;
  (&lt;span class="org-variable-name"&gt;proxy&lt;/span&gt; [&lt;span class="org-preprocessor"&gt;TimerTask&lt;/span&gt;] []
    (run []
      (&lt;span class="org-variable-name"&gt;swap!&lt;/span&gt; player assoc &lt;span class="org-constant"&gt;:pos&lt;/span&gt; [(&lt;span class="org-variable-name"&gt;+&lt;/span&gt; 1 (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0)) 1]) &lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#24231;&amp;#27161;&amp;#26356;&amp;#26032;&lt;/span&gt;
      (&lt;span class="org-builtin"&gt;if&lt;/span&gt; (&lt;span class="org-variable-name"&gt;&amp;lt;&lt;/span&gt; 640 (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0))
             (&lt;span class="org-variable-name"&gt;swap!&lt;/span&gt; player assoc &lt;span class="org-constant"&gt;:pos&lt;/span&gt; [0 0]))

      (&lt;span class="org-builtin"&gt;let&lt;/span&gt; [g (&lt;span class="org-builtin"&gt;..&lt;/span&gt; frame (&lt;span class="org-preprocessor"&gt;getGraphics&lt;/span&gt;))
            player-x (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0)
            player-y (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 1)]

        (&lt;span class="org-builtin"&gt;doto&lt;/span&gt; g
          (&lt;span class="org-preprocessor"&gt;.translate&lt;/span&gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets left) (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets top))
          (&lt;span class="org-preprocessor"&gt;.setColor&lt;/span&gt; clear-color)
          (&lt;span class="org-preprocessor"&gt;.fillRect&lt;/span&gt; 0 0 640 480)
          (&lt;span class="org-preprocessor"&gt;.drawImage&lt;/span&gt; image
                      player-x player-y
                      (&lt;span class="org-variable-name"&gt;+&lt;/span&gt; player-x 32) (&lt;span class="org-variable-name"&gt;+&lt;/span&gt; player-y 32)
                      0 0 32 32
                      frame)
          (&lt;span class="org-preprocessor"&gt;.dispose&lt;/span&gt;))))))
&lt;/pre&gt;


&lt;p&gt;
&#23450;&#32681;&#12375;&#12383;&#12513;&#12452;&#12531;&#12523;&#12540;&#12503;&#12434;20ms&#38291;&#38548;&#12391;&#21628;&#12403;&#20986;&#12377;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(&lt;span class="org-builtin"&gt;..&lt;/span&gt; (&lt;span class="org-preprocessor"&gt;Timer.&lt;/span&gt;) (schedule mainloop (&lt;span class="org-variable-name"&gt;long&lt;/span&gt; 0) (&lt;span class="org-variable-name"&gt;long&lt;/span&gt; 20)))
&lt;/pre&gt;


&lt;iframe width="425" height="349" src="http://www.youtube.com/embed/T4LLkAqETLQ?hl=ja&amp;fs=1" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;
&#30011;&#38754;&#12364;&#12385;&#12425;&#12388;&#12365;&#12392;&#12356;&#12358;&#12363;&#12289;&#30011;&#20687;&#12364;&#28857;&#28357;&#12375;&#12390;&#12356;&#12390;&#35441;&#12395;&#12394;&#12425;&#12394;&#12356;&#12290;
&#27425;&#12399;&#12371;&#12398;&#12481;&#12521;&#12484;&#12461;&#12434;&#25233;&#12360;&#12427;&#12383;&#12417;&#12395; java.awt.image.BufferStrategy&#12434;&#20351;&#12387;&#12390;&#12415;&#12427;&#12290; 
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-6" class="outline-3"&gt;
&lt;h3 id="sec-6"&gt;&#12385;&#12425;&#12388;&#12365;&#38450;&#27490;&#23550;&#31574;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6"&gt;

&lt;p&gt;&#19979;&#35352;&#12398;&#12424;&#12358;&#12395;JFrame#setIgnoreRepaint, JFrame#createBufferStrategy&#12434;&#21628;&#12403;&#20986;&#12375;&#12496;&#12483;&#12501;&#12449;&#12398;&#28310;&#20633;&#12434;&#12377;&#12427;&#12290;
&#12371;&#12398;&#26178;&#27880;&#24847;&#12377;&#12409;&#12365;&#12399;&#12289;JFrame#createBufferStrategy&#12399;JFrame#setVisible&#12398;&#12354;&#12392;&#12395;&#21628;&#12403;&#20986;&#12373;&#12394;&#12369;&#12428;&#12400;&#12394;&#12425;&#12394;&#12356;&#12371;&#12392;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(&lt;span class="org-builtin"&gt;doto&lt;/span&gt; frame
    (&lt;span class="org-preprocessor"&gt;.setSize&lt;/span&gt; (&lt;span class="org-variable-name"&gt;+&lt;/span&gt; 640 (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets left) (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets right)) (&lt;span class="org-variable-name"&gt;+&lt;/span&gt; 480 (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets top) (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets bottom)))
    (&lt;span class="org-preprocessor"&gt;.setVisible&lt;/span&gt; true)
    (&lt;span class="org-preprocessor"&gt;.setIgnoreRepaint&lt;/span&gt; true) &lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#12454;&amp;#12451;&amp;#12531;&amp;#12489;&amp;#12454;&amp;#12398;&amp;#20877;&amp;#25551;&amp;#30011;&amp;#12434;&amp;#28961;&amp;#21177;&amp;#12395;(BufferStrategy&amp;#12434;&amp;#20351;&amp;#12358;&amp;#12398;&amp;#12391;)&lt;/span&gt;
    (&lt;span class="org-preprocessor"&gt;.createBufferStrategy&lt;/span&gt; 2) &lt;span class="org-comment-delimiter"&gt;;;  &lt;/span&gt;&lt;span class="org-comment"&gt;setVisible&amp;#12513;&amp;#12477;&amp;#12483;&amp;#12489;&amp;#12398;&amp;#12354;&amp;#12392;&amp;#12391;&amp;#21628;&amp;#12400;&amp;#12394;&amp;#12356;&amp;#12392;&amp;#23455;&amp;#34892;&amp;#26178;&amp;#12456;&amp;#12521;&amp;#12540;&amp;#12395;&amp;#12394;&amp;#12427;&lt;/span&gt;
    )
&lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#12496;&amp;#12483;&amp;#12501;&amp;#12449;&amp;#20316;&amp;#25104;&lt;/span&gt;
(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;buffer&lt;/span&gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; frame (&lt;span class="org-preprocessor"&gt;getBufferStrategy&lt;/span&gt;)))
&lt;/pre&gt;


&lt;p&gt;
buffer&#12434;&#20351;&#12387;&#12390;&#20197;&#19979;&#12398;&#12424;&#12358;&#12395;&#21628;&#12403;&#20986;&#12375;&#12290;TimerTask&#12463;&#12521;&#12473;&#12458;&#12502;&#12472;&#12455;&#12463;&#12488;&#12399;&#37117;&#24230;&#29983;&#25104;&#12391;&#12365;&#12427;&#12424;&#12358;&#12395;&#38306;&#25968;&#21270;&#12375;&#12390;&#12362;&#12356;&#12383;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(&lt;span class="org-keyword"&gt;defn&lt;/span&gt; &lt;span class="org-function-name"&gt;create-mainloop&lt;/span&gt;
  []
  (&lt;span class="org-variable-name"&gt;proxy&lt;/span&gt; [&lt;span class="org-preprocessor"&gt;TimerTask&lt;/span&gt;] []
    (run []
      (&lt;span class="org-variable-name"&gt;swap!&lt;/span&gt; player assoc &lt;span class="org-constant"&gt;:pos&lt;/span&gt; [(&lt;span class="org-variable-name"&gt;+&lt;/span&gt; 1 (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0)) 1]) &lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#24231;&amp;#27161;&amp;#26356;&amp;#26032;&lt;/span&gt;
      (&lt;span class="org-builtin"&gt;if&lt;/span&gt; (&lt;span class="org-variable-name"&gt;&amp;lt;&lt;/span&gt; 640 (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0))
             (&lt;span class="org-variable-name"&gt;swap!&lt;/span&gt; player assoc &lt;span class="org-constant"&gt;:pos&lt;/span&gt; [0 0]))

      (&lt;span class="org-builtin"&gt;if&lt;/span&gt; (&lt;span class="org-variable-name"&gt;not&lt;/span&gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; buffer (&lt;span class="org-preprocessor"&gt;contentsLost&lt;/span&gt;)))
        (&lt;span class="org-builtin"&gt;let&lt;/span&gt; [g (&lt;span class="org-builtin"&gt;..&lt;/span&gt; buffer (&lt;span class="org-preprocessor"&gt;getDrawGraphics&lt;/span&gt;))
              player-x (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0)
              player-y (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 1)]
          (&lt;span class="org-builtin"&gt;doto&lt;/span&gt; g
            (&lt;span class="org-preprocessor"&gt;.translate&lt;/span&gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets left) (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets top))
            (&lt;span class="org-preprocessor"&gt;.setColor&lt;/span&gt; clear-color)
            (&lt;span class="org-preprocessor"&gt;.fillRect&lt;/span&gt; 0 0 640 480)
            (&lt;span class="org-preprocessor"&gt;.translate&lt;/span&gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets left) (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets top))
            (&lt;span class="org-preprocessor"&gt;.drawImage&lt;/span&gt; image
                        player-x player-y
                        (&lt;span class="org-variable-name"&gt;+&lt;/span&gt; player-x 32) (&lt;span class="org-variable-name"&gt;+&lt;/span&gt; player-y 32)
                        0 0 32 32
                        frame)
            (&lt;span class="org-preprocessor"&gt;.dispose&lt;/span&gt;))
          (&lt;span class="org-builtin"&gt;..&lt;/span&gt; buffer (show))
          )))))
&lt;/pre&gt;

&lt;iframe width="425" height="349" src="http://www.youtube.com/embed/3mO4EUh9cl0?hl=ja&amp;fs=1" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;



&lt;p&gt;
&#26368;&#32066;&#30340;&#12394;&#12467;&#12540;&#12489;&#12290;
&lt;/p&gt;


&lt;pre class="src src-clojure"&gt;(&lt;span class="org-builtin"&gt;ns&lt;/span&gt; hello-cube.core)

(&lt;span class="org-builtin"&gt;import&lt;/span&gt; (javax.swing &lt;span class="org-preprocessor"&gt;JFrame&lt;/span&gt;))
(&lt;span class="org-builtin"&gt;import&lt;/span&gt; (java.util &lt;span class="org-preprocessor"&gt;Timer&lt;/span&gt; &lt;span class="org-preprocessor"&gt;TimerTask&lt;/span&gt;))
(&lt;span class="org-builtin"&gt;import&lt;/span&gt; (java.awt &lt;span class="org-preprocessor"&gt;Graphics&lt;/span&gt; &lt;span class="org-preprocessor"&gt;Color&lt;/span&gt;))
(&lt;span class="org-builtin"&gt;import&lt;/span&gt; (java.awt.image &lt;span class="org-preprocessor"&gt;BufferedImage&lt;/span&gt;))
(&lt;span class="org-builtin"&gt;import&lt;/span&gt; (javax.imageio &lt;span class="org-preprocessor"&gt;ImageIO&lt;/span&gt;))
(&lt;span class="org-builtin"&gt;import&lt;/span&gt; (java.io &lt;span class="org-preprocessor"&gt;File&lt;/span&gt;))

(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;clear-color&lt;/span&gt; (&lt;span class="org-preprocessor"&gt;Color.&lt;/span&gt; 0 0 127))
(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;frame&lt;/span&gt; (&lt;span class="org-preprocessor"&gt;JFrame.&lt;/span&gt; &lt;span class="org-string"&gt;"Clojure Sample Game"&lt;/span&gt;)) 
(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;image&lt;/span&gt; (&lt;span class="org-preprocessor"&gt;ImageIO/read&lt;/span&gt; (&lt;span class="org-preprocessor"&gt;File.&lt;/span&gt; &lt;span class="org-string"&gt;"gai.png"&lt;/span&gt;))) &lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#30011;&amp;#20687;&amp;#35501;&amp;#12415;&amp;#36796;&amp;#12415;&lt;/span&gt;
(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;player&lt;/span&gt; (&lt;span class="org-variable-name"&gt;atom&lt;/span&gt; {&lt;span class="org-constant"&gt;:pos&lt;/span&gt; [0 0]}))

&lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#26528;&amp;#12434;&amp;#32771;&amp;#24942;&amp;#12375;&amp;#12390;&amp;#12469;&amp;#12452;&amp;#12474;&amp;#25351;&amp;#23450;&lt;/span&gt;
(&lt;span class="org-builtin"&gt;doto&lt;/span&gt; frame
    (&lt;span class="org-preprocessor"&gt;.setVisible&lt;/span&gt; true)
    (&lt;span class="org-preprocessor"&gt;.setIgnoreRepaint&lt;/span&gt; true) &lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#12454;&amp;#12451;&amp;#12531;&amp;#12489;&amp;#12454;&amp;#12398;&amp;#20877;&amp;#25551;&amp;#30011;&amp;#12434;&amp;#28961;&amp;#21177;&amp;#12395;(BufferStrategy&amp;#12434;&amp;#20351;&amp;#12358;&amp;#12398;&amp;#12391;)&lt;/span&gt;
    (&lt;span class="org-preprocessor"&gt;.createBufferStrategy&lt;/span&gt; 2) &lt;span class="org-comment-delimiter"&gt;;;  &lt;/span&gt;&lt;span class="org-comment"&gt;setVisible&amp;#12513;&amp;#12477;&amp;#12483;&amp;#12489;&amp;#12398;&amp;#12354;&amp;#12392;&amp;#12391;&amp;#21628;&amp;#12400;&amp;#12394;&amp;#12356;&amp;#12392;&amp;#23455;&amp;#34892;&amp;#26178;&amp;#12456;&amp;#12521;&amp;#12540;&amp;#12395;&amp;#12394;&amp;#12427;&lt;/span&gt;
    )

&lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#12496;&amp;#12483;&amp;#12501;&amp;#12449;&amp;#20316;&amp;#25104;&lt;/span&gt;
(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;buffer&lt;/span&gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; frame (&lt;span class="org-preprocessor"&gt;getBufferStrategy&lt;/span&gt;)))
(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;insets&lt;/span&gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; frame &lt;span class="org-preprocessor"&gt;getInsets&lt;/span&gt;))  &lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#12454;&amp;#12451;&amp;#12531;&amp;#12489;&amp;#12454;&amp;#12434;&amp;#34920;&amp;#31034;&amp;#12375;&amp;#12390;&amp;#12363;&amp;#12425;&amp;#20986;&amp;#12394;&amp;#12356;&amp;#12392;&amp;#20516;&amp;#12364;&amp;#20837;&amp;#12425;&amp;#12394;&amp;#12356;&amp;#12290;&lt;/span&gt;

(&lt;span class="org-builtin"&gt;doto&lt;/span&gt; frame
    (&lt;span class="org-preprocessor"&gt;.setSize&lt;/span&gt; (&lt;span class="org-variable-name"&gt;+&lt;/span&gt; 640 (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets left) (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets right)) (&lt;span class="org-variable-name"&gt;+&lt;/span&gt; 480 (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets top) (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets bottom))))


(&lt;span class="org-keyword"&gt;defn&lt;/span&gt; &lt;span class="org-function-name"&gt;create-mainloop&lt;/span&gt;
  []
  (&lt;span class="org-variable-name"&gt;proxy&lt;/span&gt; [&lt;span class="org-preprocessor"&gt;TimerTask&lt;/span&gt;] []
    (run []
      (&lt;span class="org-variable-name"&gt;swap!&lt;/span&gt; player assoc &lt;span class="org-constant"&gt;:pos&lt;/span&gt; [(&lt;span class="org-variable-name"&gt;+&lt;/span&gt; 1 (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0)) 1]) &lt;span class="org-comment-delimiter"&gt;;; &lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#24231;&amp;#27161;&amp;#26356;&amp;#26032;&lt;/span&gt;
      (&lt;span class="org-builtin"&gt;if&lt;/span&gt; (&lt;span class="org-variable-name"&gt;&amp;lt;&lt;/span&gt; 640 (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0))
             (&lt;span class="org-variable-name"&gt;swap!&lt;/span&gt; player assoc &lt;span class="org-constant"&gt;:pos&lt;/span&gt; [0 0]))

      (&lt;span class="org-builtin"&gt;if&lt;/span&gt; (&lt;span class="org-variable-name"&gt;not&lt;/span&gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; buffer (&lt;span class="org-preprocessor"&gt;contentsLost&lt;/span&gt;)))
        (&lt;span class="org-builtin"&gt;let&lt;/span&gt; [g (&lt;span class="org-builtin"&gt;..&lt;/span&gt; buffer (&lt;span class="org-preprocessor"&gt;getDrawGraphics&lt;/span&gt;))
              player-x (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 0)
              player-y (&lt;span class="org-variable-name"&gt;nth&lt;/span&gt; (@player &lt;span class="org-constant"&gt;:pos&lt;/span&gt;) 1)]
          (&lt;span class="org-builtin"&gt;doto&lt;/span&gt; g
            (&lt;span class="org-preprocessor"&gt;.translate&lt;/span&gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets left) (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets top))
            (&lt;span class="org-preprocessor"&gt;.setColor&lt;/span&gt; clear-color)
            (&lt;span class="org-preprocessor"&gt;.fillRect&lt;/span&gt; 0 0 640 480)
            (&lt;span class="org-preprocessor"&gt;.translate&lt;/span&gt; (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets left) (&lt;span class="org-builtin"&gt;..&lt;/span&gt; insets top))
            (&lt;span class="org-preprocessor"&gt;.drawImage&lt;/span&gt; image
                        player-x player-y
                        (&lt;span class="org-variable-name"&gt;+&lt;/span&gt; player-x 32) (&lt;span class="org-variable-name"&gt;+&lt;/span&gt; player-y 32)
                        0 0 32 32
                        frame)
            (&lt;span class="org-preprocessor"&gt;.dispose&lt;/span&gt;))
          (&lt;span class="org-builtin"&gt;..&lt;/span&gt; buffer (show))
          )))))

(&lt;span class="org-keyword"&gt;def&lt;/span&gt; &lt;span class="org-function-name"&gt;timer&lt;/span&gt; (&lt;span class="org-preprocessor"&gt;Timer.&lt;/span&gt;))
(&lt;span class="org-builtin"&gt;..&lt;/span&gt; timer (schedule (create-mainloop) (&lt;span class="org-variable-name"&gt;long&lt;/span&gt; 0) (&lt;span class="org-variable-name"&gt;long&lt;/span&gt; 20)))
&lt;/pre&gt;


&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-7" class="outline-3"&gt;
&lt;h3 id="sec-7"&gt;&#25152;&#24863;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-7"&gt;

&lt;p&gt;&#12411;&#12392;&#12435;&#12393;Java&#12398;&#12513;&#12477;&#12483;&#12489;&#12375;&#12363;&#20351;&#12387;&#12390;&#12394;&#12356;&#12369;&#12393;&#12418;SLIME&#12398;&#33391;&#12373;&#12399;&#20307;&#24863;&#12391;&#12365;&#12383;&#12290;
&#12467;&#12540;&#12489;&#12364;&#21363;&#26178;&#21453;&#26144;&#12373;&#12428;&#12390;&#30011;&#20687;&#12364;&#21205;&#12367;&#12398;&#12399;&#27005;&#12375;&#12356;&#12290;
&#29702;&#24819;&#12399;SLIME&#19978;&#12363;&#12425;GameObject&#12434;&#12522;&#12450;&#12523;&#12479;&#12452;&#12512;&#12395;&#25805;&#20316;&#12377;&#12427;&#12371;&#12392;&#12384;&#12369;&#12393;&#12289;&#12371;&#12428;&#12434;&#23455;&#29694;&#12377;&#12427;&#12395;&#12399;atom&#12391;&#12399;&#28961;&#29702;&#12363;&#12418;&#12290;
&#12354;&#12392;&#12399;&#12473;&#12524;&#12483;&#12489;&#12392;SLIME&#12398;&#38306;&#20418;&#12364;&#12424;&#12367;&#12431;&#12363;&#12387;&#12390;&#12394;&#12356;&#12290;TimerTask&#12434;&#20351;&#12356;&#12395;&#12367;&#12367;&#24863;&#12376;&#12383;&#12398;&#12391;&#12513;&#12452;&#12531;&#12523;&#12540;&#12503;&#12399;&#21029;&#12398;&#26041;&#27861;&#12391;&#23455;&#29694;&#12375;&#12383;&#12356;&#12290;
&lt;/p&gt;
&lt;p&gt;
&#27425;&#22238;&#12399;&#12418;&#12358;&#12385;&#12423;&#12387;&#12392;&#12467;&#12540;&#12489;&#12398;&#12522;&#12501;&#12449;&#12463;&#12479;&#12522;&#12531;&#12464;&#12434;&#26045;&#12375;&#12388;&#12388;&#12289;
&#12450;&#12491;&#12513;&#12540;&#12471;&#12519;&#12531;&#12392;&#12461;&#12540;&#12508;&#12540;&#12489;&#25805;&#20316;&#12434;&#12391;&#12365;&#12427;&#12424;&#12358;&#12395;&#12375;&#12390;&#12415;&#12427;&#12290;
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-8" class="outline-3"&gt;
&lt;h3 id="sec-8"&gt;&#21442;&#32771;&#26360;&#31821;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-8"&gt;


&lt;ul class="thumbnails"&gt;
&lt;li class="span2"&gt;
&lt;a href="http://www.amazon.co.jp/gp/product/4274067890/ref=as_li_tf_il?ie=UTF8&amp;amp;tag=ocha04-22&amp;amp;linkCode=as2&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4274067890"&gt;&lt;img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&amp;amp;Format=_SL160_&amp;amp;ASIN=4274067890&amp;amp;MarketPlace=JP&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;tag=ocha04-22&amp;amp;ServiceVersion=20070822"&gt;&lt;/a&gt;&lt;img width="1" height="1" border="0" style="border:none !important; margin:0px !important;" alt="" src="http://www.assoc-amazon.jp/e/ir?t=ocha04-22&amp;amp;l=as2&amp;amp;o=9&amp;amp;a=4274067890"&gt;
&lt;/li&gt;
&lt;li class="span2"&gt;
&lt;a href="http://www.amazon.co.jp/gp/product/4899772319/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;amp;tag=ocha04-22&amp;amp;linkCode=as2&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4899772319"&gt;&lt;img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&amp;amp;Format=_SL160_&amp;amp;ASIN=4899772319&amp;amp;MarketPlace=JP&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;tag=ocha04-22&amp;amp;ServiceVersion=20070822"&gt;&lt;/a&gt;&lt;img width="1" height="1" border="0" style="border:none !important; margin:0px !important;" alt="" src="http://www.assoc-amazon.jp/e/ir?t=ocha04-22&amp;amp;l=as2&amp;amp;o=9&amp;amp;a=4899772319"&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title type="html">CLojureのインストール</title><author><name>nil</name></author><link href="http://mikio.github.com//article/2011/06/23_clojure.html"/><updated>2011-06-23T21:45:00Z</updated><published>2011-06-23T21:45:00Z</published><id>article/2011/06/23_clojure.html</id><category scheme="/tags/clojure.html" term="clojure" label="clojure"/><content type="html">&lt;div id="outline-container-1" class="outline-3"&gt;
&lt;h3 id="sec-1"&gt;&#12399;&#12376;&#12417;&#12395;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1"&gt;

&lt;p&gt;&#12371;&#12398;&#35352;&#20107;&#12399;&#12289;&#33258;&#20998;&#12364;Clojure&#12391;&#38283;&#30330;&#29872;&#22659;&#12434;&#28310;&#20633;&#12377;&#12427;&#12383;&#12417;&#12395;&#35519;&#12409;&#12383;&#12371;&#12392;&#12434;&#12414;&#12392;&#12417;&#12390;&#12356;&#12414;&#12377;&#12290;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&#23550;&#35937;&#35501;&#32773;
&lt;ul&gt;
&lt;li&gt;Clojure&#12395;&#33288;&#21619;&#12354;&#12427;&#12369;&#12393;&#22987;&#12417;&#26041;&#12364;&#12431;&#12363;&#12425;&#12435;&#12392;&#12356;&#12358;&#20154;&#12290;
&lt;/li&gt;
&lt;li&gt;&#32032;&#12398;REPL&#12391;Clojure&#12375;&#12390;&#12427;&#12369;&#12393;&#20351;&#12356;&#12395;&#12367;&#12356;&#12392;&#24863;&#12376;&#12390;&#12427;&#20154;&#12290;
&lt;/li&gt;
&lt;li&gt;&#26222;&#27573;Emacs&#20351;&#12387;&#12390;&#12427;&#12369;&#12393;&#12289;SLIME?&#12394;&#12395;&#12381;&#12428;&#65311;&#12387;&#12390;&#20154;&#12290;

&lt;/li&gt;
&lt;/ul&gt;

&lt;/li&gt;
&lt;li&gt;&#25512;&#23450;&#29872;&#22659;
&lt;ul&gt;
&lt;li&gt;Java6
&lt;/li&gt;
&lt;li&gt;emacs23
&lt;/li&gt;
&lt;li&gt;lein
&lt;/li&gt;
&lt;li&gt;slime
&lt;/li&gt;
&lt;/ul&gt;

&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;
OS&#12399;&#12289;Ubuntu10.04&#12392;windows7, windowsxp&#12391;&#21205;&#20316;&#30906;&#35469;&#12375;&#12390;&#12356;&#12414;&#12377;&#12290;
&lt;/p&gt;
&lt;p&gt;
Clojure&#12398;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12399;&#12289;&#12499;&#12523;&#12489;&#12484;&#12540;&#12523;&#12398;Leiningen&#12434;&#20351;&#12360;&#12400;&#12392;&#12387;&#12390;&#12418;&#31777;&#21336;&#12391;&#12377;&#12290;
Leiningen&#12392;&#12399;&#12289;Clojure&#29992;&#12398;&#12499;&#12523;&#12489;&#12484;&#12540;&#12523;&#12391;&#12289;Java&#12391;&#12356;&#12358;Maven&#12415;&#12383;&#12356;&#12394;&#12418;&#12398;&#12391;&#12377;&#12290;
&#12503;&#12525;&#12472;&#12455;&#12463;&#12488;&#12398;&#12501;&#12457;&#12523;&#12480;&#12398;&#12402;&#12394;&#24418;&#12420;&#12289;&#12467;&#12531;&#12497;&#12452;&#12523;&#12289;&#12521;&#12452;&#12502;&#12521;&#12522;&#12398;&#31649;&#29702;&#12434;&#12375;&#12390;&#12367;&#12428;&#12414;&#12377;&#12290;
&lt;/p&gt;
&lt;p&gt;
&#26222;&#36890;&#12395;&#32771;&#12360;&#12427;&#12392;&#12289;Clojure&#26412;&#20307;&#12434;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12375;&#12390;&#12289;&#12521;&#12452;&#12502;&#12521;&#12522;&#12398;&#12463;&#12521;&#12473;&#12497;&#12473;&#12434;&#36890;&#12375;&#12390;&#12289;
&#36215;&#21205;&#12467;&#12510;&#12531;&#12489;&#12434;&#35373;&#23450;&#12375;&#12390;&#12394;&#12393;&#12289;&#12356;&#12429;&#12356;&#12429;&#12392;&#25163;&#38291;&#12434;&#12363;&#12369;&#12390;&#12420;&#12387;&#12392;&#21205;&#12367;&#12424;&#12358;&#12395;&#12394;&#12427;&#12418;&#12435;&#12391;&#12377;&#12364;&#12289;
Leiningen&#12399;&#12289;lein&#12392;&#12356;&#12358;&#12471;&#12455;&#12523;&#12473;&#12463;&#12522;&#12503;&#12488;&#12434;&#12497;&#12473;&#12398;&#36890;&#12387;&#12383;&#22580;&#25152;&#12395;&#12362;&#12367;&#12384;&#12369;&#12391;&#12289;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12364;&#23436;&#20102;&#12375;&#12385;&#12419;&#12356;&#12414;&#12377;&#12290;
&#12354;&#12392;&#12399;&#12289;&#25351;&#23450;&#12398;&#12467;&#12510;&#12531;&#12489;&#12434;&#21481;&#12367;&#12384;&#12369;&#12391;&#12289;lein&#12473;&#12463;&#12522;&#12503;&#12488;&#33258;&#20307;&#12364;Leiningen&#26412;&#20307;&#12399;&#12418;&#12385;&#12429;&#12435;Clojure&#26412;&#20307;&#12418;&#12480;&#12454;&#12531;&#12525;&#12540;&#12489;&#12375;&#12390;&#12367;&#12428;&#12414;&#12377;
&#65288;Java&#26412;&#20307;&#12384;&#12369;&#12399;&#20104;&#12417;&#20837;&#12428;&#12390;&#12362;&#12367;&#24517;&#35201;&#12364;&#12354;&#12426;&#12414;&#12377;&#12364;&#65289;&#12290;
&lt;/p&gt;
&lt;p&gt;
&#12385;&#12394;&#12415;&#12395;&#35501;&#12415;&#26041;&#12399;&#12300;&#12521;&#12452;&#12491;&#12466;&#12531;&#12301;&#12384;&#12381;&#12358;&#12391;&#12377;&#12290;&#33258;&#20998;&#12399;&#12356;&#12388;&#12418;&#12300;&#12428;&#12356;&#20154;&#38291;&#12301;&#12392;&#35501;&#12435;&#12391;&#12414;&#12377;&#65367;&#12290;
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="http://d.hatena.ne.jp/masa_edw/20100508/1273284275"&gt;http://d.hatena.ne.jp/masa_edw/20100508/1273284275&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-2" class="outline-3"&gt;
&lt;h3 id="sec-2"&gt;Leiningen&#12398;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2"&gt;

&lt;p&gt;&#12414;&#12378;&#12399;Java&#12398;&#26368;&#26032;&#29256;&#12434;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12375;&#12385;&#12419;&#12356;&#12414;&#12375;&#12423;&#12358;
(&#29694;&#26178;&#28857;&#12391;&#12399;JavaSE7&#12399;&#12356;&#12429;&#12356;&#12429;&#19981;&#23433;&#23450;&#12394;&#12398;&#12391;Java6&#12434;&#12362;&#21223;&#12417;&#12375;&#12414;&#12377;)&#12290;
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="http://java.com/ja/download/manual.jsp"&gt;http://java.com/ja/download/manual.jsp&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;
&#32154;&#12356;&#12390;&#19979;&#35352;&#12469;&#12452;&#12488;&#12363;&#12425;Leiningen&#12398;&#12450;&#12540;&#12459;&#12452;&#12502;&#12434;&#21462;&#12387;&#12390;&#12365;&#12414;&#12377;&#12290;
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/technomancy/leiningen"&gt;https://github.com/technomancy/leiningen&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;
&#30452;&#12522;&#12531;&#12399;&#20197;&#19979;&#12290;
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/downloads/technomancy/leiningen/leiningen-1.5.2-win.zip"&gt;https://github.com/downloads/technomancy/leiningen/leiningen-1.5.2-win.zip&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;
&#35299;&#20941;&#12375;&#12383;&#12425;&#12391;&#12365;&#12383;&#12501;&#12457;&#12523;&#12480;&#12434;PATH&#12395;&#36890;&#12375;&#12414;&#12377;&#12290;
&#33258;&#20998;&#12398;&#22580;&#21512;&#12399;%HOME%\bin&#12392;&#12356;&#12358;&#12487;&#12451;&#12524;&#12463;&#12488;&#12522;&#12395;lein&#12501;&#12457;&#12523;&#12480;&#12398;&#20013;&#36523;(windwos&#12398;&#22580;&#21512;&#12399;&#12289;lein.bat&#12392;wget.exe&#12289;linux&#12398;&#22580;&#21512;&#12399;&#12289;lein)&#12434;&#12467;&#12500;&#12540;&#12375;&#12414;&#12375;&#12383;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ cd %HOME%
$ mkdir bin
&lt;/pre&gt;


&lt;p&gt;
Windwos&#12398;&#29872;&#22659;&#22793;&#25968;&#12384;&#12392;&#12371;&#12435;&#12394;&#24863;&#12376;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;&lt;span class="org-variable-name"&gt;JAVA_HOME&lt;/span&gt;=C:\Program Files\Java\jdk1.6.0_24
&lt;span class="org-variable-name"&gt;PATH&lt;/span&gt;=%PATH%;%HOME%\bin;%JAVA_HOME%\bin;
&lt;/pre&gt;


&lt;p&gt;
linux&#12398;&#22580;&#21512;&#12399;&#23455;&#34892;&#27177;&#12434;&#20184;&#19982;&#12375;&#12390;&#12362;&#12365;&#12414;&#12377;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ chmod +x lein 
&lt;/pre&gt;


&lt;p&gt;
&#12497;&#12473;&#12364;&#36890;&#12387;&#12390;&#12427;&#12398;&#12434;&#30906;&#35469;&#12375;&#12383;&#12425;&#20197;&#19979;&#12391;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#38283;&#22987;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ lein self-install
&lt;/pre&gt;

&lt;p&gt;
&#12371;&#12428;&#12391;&#26368;&#26032;&#29256;&#12398;Clojure&#12418;&#21547;&#12417;&#12390;Leiningen&#12364;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12373;&#12428;&#12414;&#12377;&#12290;
&lt;/p&gt;



&lt;pre class="src src-sh"&gt;$ lein
Leiningen is a build tool for Clojure.
 :
 :
&lt;/pre&gt;


&lt;p&gt;
repl&#12434;&#36215;&#21205;&#12375;&#12390;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12373;&#12428;&#12383;&#12371;&#12392;&#12434;&#30906;&#35469;&#12375;&#12414;&#12377;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ lein repl
&lt;/pre&gt;

&lt;p&gt;
C-c&#12391;&#32066;&#20102;&#12391;&#12377;&#12290;
&lt;/p&gt;

&lt;/div&gt;

&lt;div id="outline-container-2-1" class="outline-4"&gt;
&lt;h4 id="sec-2-1"&gt;&#31777;&#21336;&#12394;&#20351;&#12356;&#26041;&#12290;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-1"&gt;

&lt;p&gt;&#12503;&#12525;&#12472;&#12455;&#12463;&#12488;&#20316;&#25104;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ cd ~/dev
$ lein new myproject
$ cd myproject
&lt;/pre&gt;


&lt;p&gt;
&#20381;&#23384;&#38306;&#20418;&#12398;&#35299;&#27770;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ lein deps
&lt;/pre&gt;


&lt;p&gt;
&#12503;&#12525;&#12472;&#12455;&#12463;&#12488;&#12398;&#12497;&#12483;&#12465;&#12540;&#12472;&#12531;&#12464;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ lein jar
&lt;/pre&gt;



&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-2-2" class="outline-4"&gt;
&lt;h4 id="sec-2-2"&gt;Leiningen&#12398;&#27425;&#12399;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-2"&gt;

&lt;p&gt;Leiningen&#12364;&#12354;&#12428;&#12400;&#12289;repl&#12418;&#36215;&#21205;&#12391;&#12365;&#12427;&#12375;&#12289;&#12354;&#12392;&#12399;&#12486;&#12461;&#12473;&#12488;&#12456;&#12487;&#12451;&#12479;&#12373;&#12360;&#12354;&#12428;&#12400;&#38283;&#30330;&#12364;&#12391;&#12365;&#12414;&#12377;&#12290;
&#26997;&#31471;&#12394;&#35441;&#12289;&#12513;&#12514;&#24115;&#12392;DOS&#31379;&#12289;Linux&#12384;&#12387;&#12383;&#12425;&#31471;&#26411;&#12392;vi&#12373;&#12360;&#12354;&#12428;&#12400;&#38283;&#30330;&#12391;&#12365;&#12427;&#12392;&#12356;&#12358;&#12371;&#12392;&#12391;&#12377;&#12290;
&lt;/p&gt;
&lt;p&gt;
&#12392;&#12399;&#12356;&#12360;&#12289;&#20170;&#26178;&#12513;&#12514;&#24115;&#12391;&#38283;&#30330;&#12394;&#12435;&#12390;&#12354;&#12426;&#12360;&#12414;&#12379;&#12435;&#12290;&#12513;&#12514;&#24115;&#12420;(&#32032;&#12398;)vi&#12391;&#12399;&#12459;&#12483;&#12467;&#12398;&#23550;&#24540;&#12364;&#12377;&#12368;&#23849;&#12428;&#12390;&#12375;&#12414;&#12356;&#12414;&#12377;&#12290;
vim&#12420;&#39640;&#24615;&#33021;&#12456;&#12487;&#12451;&#12479;&#12434;&#20351;&#12360;&#12400;&#12381;&#12428;&#12394;&#12426;&#12395;&#24555;&#36969;&#12394;&#29872;&#22659;&#12364;&#27083;&#31689;&#12391;&#12365;&#12427;&#12363;&#12418;&#12375;&#12428;&#12414;&#12379;&#12435;&#12364;&#12289;&#12411;&#12392;&#12435;&#12393;Lisp&#12391;&#26360;&#12363;&#12428;&#12390;&#12356;&#12427;Emacs&#12395;&#12399;&#12363;&#12394;&#12356;&#12414;&#12379;&#12435;&#12290;&lt;sup&gt;&lt;a class="footref" name="fnr.1" href="#fn.1"&gt;1&lt;/a&gt;&lt;/sup&gt;
&#12371;&#12398;&#38555;&#12459;&#12483;&#12467;&#12391;&#12391;&#12365;&#12383;Emacs&#12434;&#20351;&#12387;&#12385;&#12419;&#12356;&#12414;&#12375;&#12423;&#12358;w&#12290;
&lt;/p&gt;
&lt;p&gt;
&#12390;&#12371;&#12392;&#12391;&#12289;Emacs&#29992;&#12398;IDE&#12391;&#12354;&#12427;SLIME&#12392;&#12356;&#12358;&#32113;&#21512;&#38283;&#30330;&#29872;&#22659;&#12434;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12375;&#12414;&#12377;&#12290;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-3" class="outline-3"&gt;
&lt;h3 id="sec-3"&gt;SLIME&#12392;&#12399;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-3"&gt;


&lt;p&gt;
Emacs&#12395;&#12399;&#26377;&#21517;&#12394;&#65288;&#12392;&#12356;&#12358;&#12363;Lisp&#12398;&#12487;&#12501;&#12449;&#12463;&#12488;&#12473;&#12479;&#12531;&#12480;&#12540;&#12489;&#12391;&#12354;&#12427;&#65289;SLIME&#12392;&#12356;&#12358;&#38283;&#30330;&#29872;&#22659;&#12364;&#12354;&#12426;&#12414;&#12377;&#12290;&lt;sup&gt;&lt;a class="footref" name="fnr.2" href="#fn.2"&gt;2&lt;/a&gt;&lt;/sup&gt;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;SLIME is the Superior Lisp Interaction Mode for Emacs. 
&lt;/pre&gt;

&lt;p&gt;
&#30452;&#35379;&#12377;&#12427;&#12392;&#12300;SLIME&#12399;Emacs&#21521;&#12369;&#12398;&#20778;&#12428;&#12383;lisp&#23550;&#35441;&#12514;&#12540;&#12489;&#12391;&#12377;&#12301;&#12391;&#12377;&#12397;&#12290;
&lt;/p&gt;
&lt;p&gt;
SLIME&#12398;&#29305;&#24500;&#12399;&#20197;&#19979;&#12395;&#35443;&#12375;&#12356;&#12391;&#12377;&#12364;&#12289;
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="http://lispuser.net/emacs/lisphacking.html#sec-2.1"&gt;http://lispuser.net/emacs/lisphacking.html#sec-2.1&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&#31777;&#21336;&#12395;&#12414;&#12392;&#12417;&#12427;&#12392;
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&#12487;&#12496;&#12483;&#12460;&#12420;&#12471;&#12531;&#12508;&#12523;&#12398;&#35036;&#23436;
&lt;/li&gt;
&lt;li&gt;&#38306;&#25968;&#12398;&#24341;&#25968;&#34920;&#31034;&#12420;&#12489;&#12461;&#12517;&#12513;&#12531;&#12488;&#12408;&#12398;&#31777;&#21336;&#12450;&#12463;&#12475;&#12473;
&lt;/li&gt;
&lt;li&gt;&#20966;&#29702;&#31995;&#12372;&#12392;&#12395;&#36949;&#12358;REPL&#12398;&#24046;&#12434;&#21560;&#21454;&#12375;&#12383;UI&#12398;&#25552;&#20379;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&#12394;&#12393;&#12364;&#12354;&#12426;&#12414;&#12377;&#12290;
&lt;/p&gt;
&lt;p&gt;
&#12411;&#12363;&#12395;Clojure&#12391;SLIME&#12434;&#12388;&#12363;&#12358;&#12513;&#12522;&#12483;&#12488;&#12392;&#12375;&#12390;&#12289;&#12473;&#12463;&#12522;&#12503;&#12488;&#36215;&#21205;&#12391;&#24453;&#12383;&#12373;&#12428;&#12427;&#12371;&#12392;&#12364;&#12394;&#12356;&#12392;&#12356;&#12358;&#12371;&#12392;&#12364;&#12354;&#12426;&#12414;&#12377;&#12290;
Clojure&#12399;JVM&#12505;&#12540;&#12473;&#25925;&#12395;&#36215;&#21205;&#12364;&#12392;&#12390;&#12418;&#37325;&#12356;&#12398;&#12391;&#12289;&#20182;&#12398;&#12473;&#12463;&#12522;&#12503;&#12488;&#35328;&#35486;&#12398;&#12424;&#12358;&#12395;&#12469;&#12463;&#12483;&#12392;&#36215;&#21205;&#12375;&#12390;&#12385;&#12419;&#12385;&#12419;&#12387;&#12392;&#20966;&#29702;&#12377;&#12427;&#12398;&#12364;&#33510;&#25163;&#12391;&#12377;&#12364;&#12289;
SLIME&#12391;&#38283;&#30330;&#12377;&#12428;&#12400;&#12381;&#12398;&#12424;&#12358;&#12394;&#12371;&#12392;&#12399;&#12394;&#12367;&#12289;&#21363;&#23455;&#34892;&#12364;&#12391;&#12365;&#12427;&#12398;&#12391;&#24555;&#36969;&#12395;&#20351;&#12360;&#12427;&#12392;&#24605;&#12356;&#12414;&#12377;&#12290;Linux&#12394;&#12393;&#12391;&#12356;&#12358;&#31471;&#26411;&#12415;&#12383;&#12356;&#12394;&#24441;&#21106;&#12434;&#26524;&#12383;&#12377;&#12392;&#12356;&#12358;&#12371;&#12392;&#12391;&#12377;&#12363;&#12397;&#12290;
&#12371;&#12398;&#12424;&#12358;&#12395;&#20415;&#21033;&#12394;SLIME&#12391;&#12377;&#12363;&#12425;&#12289;&#22810;&#12367;&#12398;Lisper&#12399;&#12459;&#12483;&#12467;&#12364;&#22909;&#12365;&#12392;&#12356;&#12358;&#12424;&#12426;&#12418;SLIME&#12398;&#25805;&#20316;&#24615;&#12398;&#34396;&#12395;&#12394;&#12387;&#12390;&#12427;&#12398;&#12391;&#12399;&#12394;&#12356;&#12363;&#12387;&#12394;&#12387;&#12390;&#24605;&#12356;&#12414;&#12377;&#12290;
&lt;/p&gt;
&lt;p&gt;
&#31169;&#12399;&#26368;&#21021;&#12289;LISP&#12398;&#20966;&#29702;&#31995;&#12391;&#12354;&#12428;&#12400;&#12394;&#12435;&#12391;&#12418;SLIME&#12364;&#20351;&#12360;&#12427;&#12418;&#12398;&#12392;&#21213;&#25163;&#12395;&#21208;&#36949;&#12356;&#12375;&#12390;&#12356;&#12383;&#12398;&#12391;&#12377;&#12364;&#12289;
SLIME&#12399;&#12418;&#12392;&#12418;&#12392;CommonLisp&#29992;&#12395;&#38283;&#30330;&#12373;&#12428;&#12383;&#12418;&#12398;&#12391;&#12289;&#24403;&#21021;&#12399;CommonLisp&#20197;&#22806;&#12398;&#29872;&#22659;&#12399;&#12469;&#12509;&#12540;&#12488;&#12373;&#12428;&#12390;&#12356;&#12394;&#12363;&#12387;&#12383;&#12424;&#12358;&#12391;&#12377;&#12290;
&#20363;&#12360;&#12400;Gauche&#12399;&#12289;&#12418;&#12392;&#12418;&#12392;SLIME&#12395;&#23550;&#24540;&#12375;&#12390;&#12356;&#12394;&#12367;&#12390;&#12289;2009&#24180;&#12395;&#26368;&#21021;&#12398;&#12496;&#12540;&#12472;&#12519;&#12531;&#12364;&#12391;&#12365;&#12383;&#12424;&#12358;&#12391;&#12377;&#12290;&#24847;&#22806;&#12391;&#12377;&#12397;&#12290;
&lt;/p&gt;
&lt;p&gt;
Clojure&#12391;SLIME&#12434;&#21033;&#29992;&#12377;&#12427;&#12395;&#12399;&#20197;&#19979;&#12398;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12364;&#24517;&#35201;&#12391;&#12377;&#12290;&lt;sup&gt;&lt;a class="footref" name="fnr.3" href="#fn.3"&gt;3&lt;/a&gt;&lt;/sup&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SLIME(SLIME&#26412;&#20307;&#12289;SLIME-REPL)
&lt;/li&gt;
&lt;li&gt;SWANK&#12469;&#12540;&#12496;&#12540;(swank-clojure)
&lt;/li&gt;
&lt;li&gt;Clojure-mode
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;
SWANK&#12469;&#12540;&#12496;&#12540;&#12392;&#12399;&#12289;SLIME&#12392;Lisp&#20966;&#29702;&#31995;&#12434;&#27211;&#28193;&#12375;&#12377;&#12427;&#12469;&#12540;&#12496;&#12540;&#12391;&#12377;&#12290;
&#12371;&#12398;SWANK&#12469;&#12540;&#12496;&#12398;&#12362;&#12363;&#12370;&#12391;Clojure&#12391;&#12418;SLIME&#12434;&#21033;&#29992;&#12391;&#12365;&#12427;&#12431;&#12369;&#12391;&#12377;&#12290;
&lt;/p&gt;
&lt;p&gt;
&#12371;&#12428;&#12425;&#12398;&#12514;&#12472;&#12517;&#12540;&#12523;&#12399;&#12289;&#12381;&#12428;&#12382;&#12428;&#25163;&#21205;&#12391;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12375;&#12390;&#12418;&#33391;&#12356;&#12398;&#12391;&#12377;&#12364;&#12289;
SLIME&#12392;Clojure-mode&#12395;&#38306;&#12375;&#12390;&#12399;&#12289;&#26368;&#36817;Emacs&#30028;&#38536;&#12391;&#26377;&#21517;&#12394;Marmalade&#12434;&#21033;&#29992;&#12377;&#12427;&#12392;&#31777;&#21336;&#12391;&#12377;&#12290;
Marmalade&#12399;Emacs&#12424;&#12358;&#12395;&#38283;&#30330;&#12373;&#12428;&#12383;&#12497;&#12483;&#12465;&#12540;&#12472;&#12471;&#12473;&#12486;&#12512;&#12391;&#31777;&#21336;&#12395;Emacs&#29992;&#12477;&#12501;&#12488;&#12434;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12391;&#12365;&#12414;&#12377;&#12290;
&#27425;&#12399;Marmalade&#12398;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12434;&#35500;&#26126;&#12375;&#12414;&#12377;&#12290;
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-4" class="outline-3"&gt;
&lt;h3 id="sec-4"&gt;Marmalade&#12398;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-4"&gt;


&lt;p&gt;
&#12411;&#12392;&#12435;&#12393;&#19979;&#35352;&#12395;&#12354;&#12427;&#35500;&#26126;&#12398;&#12392;&#12362;&#12426;&#12391;&#12377;&#12364;
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="http://sheephead.homelinux.org/2011/06/17/6724/"&gt;http://sheephead.homelinux.org/2011/06/17/6724/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;
Marmalade&#12392;&#12399;&#27425;&#26399;Emacs24&#12391;&#12469;&#12509;&#12540;&#12488;&#12373;&#12428;&#12390;&#12356;&#12427;&#12497;&#12483;&#12465;&#12540;&#12472;&#31649;&#29702;&#12469;&#12452;&#12488;&#12391;
Emacs24&#12363;&#12425;&#12399;&#27161;&#28310;&#12391;&#21033;&#29992;&#12391;&#12365;&#12427;&#12425;&#12375;&#12356;&#12391;&#12377;&#12290;
&lt;/p&gt;
&lt;p&gt;
&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#26041;&#27861;&#12418;&#19978;&#35352;&#12469;&#12452;&#12488;&#12363;&#12425;&#12398;&#12497;&#12463;&#12522;&#12391;&#12377;&#12364;
&lt;/p&gt;
&lt;p&gt;
&#19979;&#35352;&#12434;&#23455;&#34892;&#12375;&#12390;
&lt;/p&gt;


&lt;pre class="src src-emacs-lisp"&gt;(install-elisp &lt;span class="org-string"&gt;"http://repo.or.cz/w/emacs.git/blob_plain/1a0a666f941c99882093d7bd08ced15033bc3f0c:/lisp/emacs-lisp/package.el"&lt;/span&gt;)
&lt;/pre&gt;


&lt;p&gt;
&#19979;&#35352;&#12434;.emacs&#12395;&#35373;&#23450;&#12377;&#12428;&#12400;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#23436;&#20102;&#12391;&#12377;&#12290;
&lt;/p&gt;


&lt;pre class="src src-elisp"&gt;(&lt;span class="org-keyword"&gt;require&lt;/span&gt; '&lt;span class="org-constant"&gt;package&lt;/span&gt;)

&lt;span class="org-comment-delimiter"&gt;;;&lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#12522;&amp;#12509;&amp;#12472;&amp;#12488;&amp;#12522;&amp;#12395;Marmalade&amp;#12434;&amp;#36861;&amp;#21152;&lt;/span&gt;
(add-to-list 'package-archives '(&lt;span class="org-string"&gt;"marmalade"&lt;/span&gt; . &lt;span class="org-string"&gt;"http://marmalade-repo.org/packages/"&lt;/span&gt;))

&lt;span class="org-comment-delimiter"&gt;;;&lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#12452;&amp;#12531;&amp;#12473;&amp;#12488;&amp;#12540;&amp;#12523;&amp;#12377;&amp;#12427;&amp;#12487;&amp;#12451;&amp;#12524;&amp;#12463;&amp;#12488;&amp;#12522;&amp;#12434;&amp;#25351;&amp;#23450;&lt;/span&gt;
(setq package-user-dir (concat user-emacs-directory &lt;span class="org-string"&gt;"vendor/elpa"&lt;/span&gt;))

&lt;span class="org-comment-delimiter"&gt;;;&lt;/span&gt;&lt;span class="org-comment"&gt;&amp;#12452;&amp;#12531;&amp;#12473;&amp;#12488;&amp;#12540;&amp;#12523;&amp;#12375;&amp;#12383;&amp;#12497;&amp;#12483;&amp;#12465;&amp;#12540;&amp;#12472;&amp;#12395;&amp;#12525;&amp;#12540;&amp;#12489;&amp;#12497;&amp;#12473;&amp;#12434;&amp;#36890;&amp;#12375;&amp;#12390;&amp;#12525;&amp;#12540;&amp;#12489;&amp;#12377;&amp;#12427;&lt;/span&gt;
(package-initialize)
&lt;/pre&gt;


&lt;p&gt;
&#12371;&#12428;&#12391;&#12497;&#12483;&#12465;&#12540;&#12472;&#12434;&#31777;&#21336;&#12395;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12391;&#12365;&#12427;&#12424;&#12358;&#12395;&#12394;&#12426;&#12414;&#12375;&#12383;&#12290;
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-5" class="outline-3"&gt;
&lt;h3 id="sec-5"&gt;SLIME&#12398;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-5"&gt;

&lt;p&gt;Marmalade&#12363;&#12425;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12375;&#12414;&#12377;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;M-x package-install
&lt;/pre&gt;

&lt;p&gt;
&#19979;&#35352;&#12434;i&#12391;&#36984;&#25246;&#12375;&#12289;x&#12391;&#23455;&#34892;&#12375;&#12390;&#12367;&#12384;&#12373;&#12356;&#12290;
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;slime
&lt;/li&gt;
&lt;li&gt;slime-repl
&lt;/li&gt;
&lt;li&gt;clojure-mode
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;SLIME&#33258;&#36523;&#12399;&#12289;SLIME&#26412;&#20307;&#12392;SLIME-REPL&#12392;&#12356;&#12358;2&#37096;&#27083;&#25104;&#12395;&#12394;&#12387;&#12390;&#12356;&#12427;&#12387;&#12413;&#12356;&#12391;&#12377;&#12290;
&#12414;&#12383;&#12289;Clojure-mode&#12399;SLIME&#12392;&#30452;&#25509;&#38306;&#20418;&#12354;&#12426;&#12414;&#12379;&#12435;&#12364;&#12289;&#12388;&#12356;&#12391;&#12395;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12375;&#12390;&#12362;&#12365;&#12414;&#12377;&#12290;
&lt;/p&gt;
&lt;p&gt;
&#35373;&#23450;&#12399;&#20197;&#19979;&#12395;&#12394;&#12426;&#12414;&#12377;&#12290;
&lt;/p&gt;


&lt;pre class="src src-emacs-lisp"&gt;(&lt;span class="org-keyword"&gt;require&lt;/span&gt; '&lt;span class="org-constant"&gt;slime&lt;/span&gt;)
(setq slime-net-coding-system 'utf-8-unix
      slime-protocol-version 'ignore)
(slime-setup '(slime-repl))

(&lt;span class="org-keyword"&gt;require&lt;/span&gt; '&lt;span class="org-constant"&gt;clojure-mode&lt;/span&gt;)
(add-hook 'slime-repl-mode-hook (&lt;span class="org-keyword"&gt;lambda&lt;/span&gt; () (clojure-mode-font-lock-setup)))
&lt;/pre&gt;

&lt;p&gt;
&#33258;&#20998;&#12398;&#22580;&#21512;&#12289;&#19979;&#35352;&#12398;&#12424;&#12358;&#12395;slime-fancy, slime-banner&#12434;&#25351;&#23450;&#12377;&#12427;&#12392;&#21205;&#12365;&#12414;&#12379;&#12435;&#12391;&#12375;&#12383;&#12290;
&lt;/p&gt;


&lt;pre class="src src-emacs-lisp"&gt;(slime-setup '(slime-repl slime-fancy slime-banner))
&lt;/pre&gt;

&lt;p&gt;
&#32154;&#12356;&#12390;SWANK&#12469;&#12540;&#12496;&#12540;&#12434;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12375;&#12414;&#12377;&#12290;
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-6" class="outline-3"&gt;
&lt;h3 id="sec-6"&gt;swank-clojure&#12398;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6"&gt;

&lt;p&gt;Clojure&#29992;&#12398;swank&#12469;&#12540;&#12496;&#12540;&#12399;&#12289;Leiningen&#12398;&#12503;&#12521;&#12464;&#12452;&#12531;&#12392;&#12375;&#12390;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12375;&#12414;&#12377;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ lein plugin install swank-clojure 1.3.3
&lt;/pre&gt;


&lt;p&gt;
&#19979;&#35352;&#12391;swank&#12469;&#12540;&#12496;&#12540;&#12434;&#36215;&#21205;&#12391;&#12365;&#12414;&#12377;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ cd ~/dev/project
$ lein swank
&lt;/pre&gt;

&lt;p&gt;
&#12371;&#12398;&#26041;&#27861;&#12391;&#12399;&#12289;Project&#12487;&#12451;&#12524;&#12463;&#12488;&#12522;&#12395;&#31227;&#21205;&#12375;&#12390;&#12363;&#12425;&#36215;&#21205;&#12375;&#12414;&#12377;&#12364;&#12289;
&#12371;&#12358;&#12377;&#12427;&#12371;&#12392;&#12395;&#12424;&#12426;&#12289;&#24517;&#35201;&#12394;&#12463;&#12521;&#12473;&#12497;&#12473;&#12364;&#35373;&#23450;&#12373;&#12428;&#12383;&#29366;&#24907;&#12391;SWANK&#12469;&#12540;&#12496;&#12540;&#12364;&#36215;&#21205;&#12373;&#12428;&#12414;&#12377;&#12290;
&lt;/p&gt;
&lt;p&gt;
&#19979;&#35352;&#12399;&#12289;&#12503;&#12525;&#12472;&#12455;&#12463;&#12488;&#12434;&#25351;&#23450;&#12375;&#12394;&#12356;&#36215;&#21205;&#26041;&#27861;&#12391;&#12377;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ ~/.lein/bin/swank-clojure
&lt;/pre&gt;

&lt;p&gt;
&#12371;&#12398;&#22580;&#21512;&#12289;&#12463;&#12521;&#12473;&#12497;&#12473;&#12398;&#25351;&#23450;&#12364;&#12394;&#12356;&#12398;&#12391;&#12289;clojure.core&#12398;&#38306;&#25968;&#12368;&#12425;&#12356;&#12375;&#12363;&#20351;&#12360;&#12414;&#12379;&#12435;&#12290;
&lt;/p&gt;

&lt;/div&gt;

&lt;div id="outline-container-6-1" class="outline-4"&gt;
&lt;h4 id="sec-6-1"&gt;&#21442;&#32771;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-6-1"&gt;

&lt;p&gt;&lt;a href="https://github.com/technomancy/swank-clojure"&gt;https://github.com/technomancy/swank-clojure&lt;/a&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-7" class="outline-3"&gt;
&lt;h3 id="sec-7"&gt;SLIME&#12398;&#20351;&#12356;&#26041;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-7"&gt;

&lt;p&gt;&#12371;&#12371;&#12414;&#12391;&#12391;&#12289;Leiningen, SLIME, SWANK-Clojure, Clojure-mode&#12434;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12375;&#12390;&#12365;&#12414;&#12375;&#12383;&#12290;
&#26368;&#24460;&#12395;&#12371;&#12428;&#12425;&#12398;&#20351;&#12356;&#26041;&#12434;&#12414;&#12392;&#12417;&#12414;&#12377;&#12290;
&lt;/p&gt;

&lt;/div&gt;

&lt;div id="outline-container-7-1" class="outline-4"&gt;
&lt;h4 id="sec-7-1"&gt;REPL&#12469;&#12540;&#12496;&#36215;&#21205;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-7-1"&gt;

&lt;p&gt;&#20381;&#23384;&#12377;&#12427;&#12463;&#12521;&#12473;&#12521;&#12452;&#12502;&#12521;&#12522;&#12364;&#35373;&#23450;&#12373;&#12428;&#12383;&#29366;&#24907;&#12391;&#36215;&#21205;&#12375;&#12414;&#12377;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ cd myproject
$ lein swank
&lt;/pre&gt;


&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-7-2" class="outline-4"&gt;
&lt;h4 id="sec-7-2"&gt;&#25509;&#32154;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-7-2"&gt;

&lt;p&gt;SWNAK&#12469;&#12540;&#12496;&#12540;&#12434;&#36215;&#21205;&#12375;&#12383;&#29366;&#24907;&#12391;&#12289;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;M-x slime-connect
localhost:4005
&lt;/pre&gt;

&lt;p&gt;
&#12392;&#12375;&#12414;&#12377;&#12290;
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-7-3" class="outline-4"&gt;
&lt;h4 id="sec-7-3"&gt;&#25805;&#20316;&#26041;&#27861;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-7-3"&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;
&lt;caption&gt;&lt;/caption&gt;
&lt;colgroup&gt;&lt;col class="left" /&gt;&lt;col class="left" /&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td class="left"&gt;C-c C-c&lt;/td&gt;&lt;td class="left"&gt;&#12459;&#12540;&#12477;&#12523;&#20301;&#32622;&#12398;&#12467;&#12540;&#12489;&#12398;&#12467;&#12531;&#12497;&#12452;&#12523;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;C-c C-z&lt;/td&gt;&lt;td class="left"&gt;REPL&#12496;&#12483;&#12501;&#12449;&#12398;&#34920;&#31034;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;C-c C-k&lt;/td&gt;&lt;td class="left"&gt;&#12501;&#12449;&#12452;&#12523;&#20840;&#20307;&#12398;&#12467;&#12531;&#12497;&#12452;&#12523;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;M-.&lt;/td&gt;&lt;td class="left"&gt;&#23450;&#32681;&#12395;&#12472;&#12515;&#12531;&#12503;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;M-,&lt;/td&gt;&lt;td class="left"&gt;&#20803;&#12398;&#23450;&#32681;&#12395;&#25147;&#12427;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;M-r&lt;/td&gt;&lt;td class="left"&gt;&#27491;&#35215;&#34920;&#29694;&#12391;&#23653;&#27508;&#26908;&#32034;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-7-4" class="outline-4"&gt;
&lt;h4 id="sec-7-4"&gt;&#21442;&#32771;URL&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-7-4"&gt;

&lt;p&gt;SLIME&#12398;&#25805;&#20316;&#26041;&#27861;&#12395;&#12388;&#12356;&#12390;&#12399;&#12289;&#19979;&#35352;&#12364;&#38750;&#24120;&#12395;&#21442;&#32771;&#12395;&#12394;&#12426;&#12414;&#12375;&#12383;&#12290;
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="http://modern-cl.blogspot.com/2011/07/5-slime.html"&gt;http://modern-cl.blogspot.com/2011/07/5-slime.html&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&#12371;&#12398;&#12469;&#12452;&#12488;&#12391;&#12418;&#35299;&#35500;&#12373;&#12428;&#12390;&#12356;&#12414;&#12377;&#12364;&#12289;AC&#12514;&#12540;&#12489;&#12420;Popwin&#12418;&#20837;&#12428;&#12383;&#12411;&#12358;&#12364;&#26684;&#27573;&#12395;&#25805;&#20316;&#26041;&#27861;&#12364;&#12424;&#12367;&#12394;&#12426;&#12414;&#12377;&#12290;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-8" class="outline-3"&gt;
&lt;h3 id="sec-8"&gt;windows&#12391;&#26085;&#26412;&#35486;&#12434;&#25201;&#12358;&#22580;&#21512;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-8"&gt;

&lt;p&gt;Windows&#12363;&#12425;lein swank&#12391;&#36215;&#21205;&#12375;&#12383;swank&#12469;&#12540;&#12496;&#12392;&#36899;&#25658;&#12377;&#12427;&#22580;&#21512;
SLIME-REPL&#19978;&#12391;&#26085;&#26412;&#35486;&#12434;&#35413;&#20385;&#12377;&#12427;&#12392;&#12289;&#12469;&#12540;&#12496;&#12540;&#12364;&#20572;&#27490;&#12375;&#12390;&#12375;&#12414;&#12356;&#12414;&#12377;&#12290;
&#12371;&#12428;&#12434;&#22238;&#36991;&#12377;&#12427;&#12395;&#12399;&#12289;lein.bat&#12398;&#20808;&#38957;&#12391;&#19979;&#35352;&#12434;&#36861;&#35352;&#12375;&#12390;&#12362;&#12365;&#12414;&#12377;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;&lt;span class="org-builtin"&gt;set&lt;/span&gt; &lt;span class="org-variable-name"&gt;JAVA_OPTS&lt;/span&gt;=-Dswank.encoding=utf-8-unix
&lt;/pre&gt;



&lt;/div&gt;

&lt;div id="outline-container-8-1" class="outline-4"&gt;
&lt;h4 id="sec-8-1"&gt;&#21442;&#32771;URL&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-8-1"&gt;

&lt;p&gt;&lt;a href="http://rd.clojure-users.org/entry/view/52001"&gt;http://rd.clojure-users.org/entry/view/52001&lt;/a&gt;
&lt;/p&gt;


&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-9" class="outline-3"&gt;
&lt;h3 id="sec-9"&gt;&#21442;&#32771;&#26360;&#31821;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-9"&gt;


&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-10" class="outline-3"&gt;
&lt;h3 id="sec-10"&gt;&#27880;&#37320;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-10"&gt;


&lt;div id="footnotes"&gt;
&lt;h2 class="footnotes"&gt;nil: &lt;/h2&gt;
&lt;div id="text-footnotes"&gt;
&lt;p class="footnote"&gt;&lt;sup&gt;&lt;a class="footnum" name="fn.1" href="#fnr.1"&gt;1&lt;/a&gt;&lt;/sup&gt; &#12371;&#12435;&#12394;&#12371;&#12392;&#12356;&#12358;&#12392;Vimmer&#12363;&#12425;&#38750;&#38627;&#12373;&#12428;&#12390;&#12375;&#12414;&#12356;&#12414;&#12377;&#12364;&#65367;&#12290;
&lt;/p&gt;

&lt;p class="footnote"&gt;&lt;sup&gt;&lt;a class="footnum" name="fn.2" href="#fnr.2"&gt;2&lt;/a&gt;&lt;/sup&gt; SLIME&#12399;&#12289;&#26368;&#36817;&#12391;&#12399;vim&#12420;eclipse&#12363;&#12425;&#12418;&#21033;&#29992;&#12391;&#12365;&#12427;&#12424;&#12358;&#12391;&#12377;&#12290;&#26222;&#21450;&#12377;&#12428;&#12400;Emacs&#12395;&#12371;&#12384;&#12431;&#12427;&#24517;&#35201;&#12399;&#12394;&#12356;&#12363;&#12418;&#12391;&#12377;&#12397;&#12290;&#12521;&#12452;&#12488;&#12518;&#12540;&#12470;&#12395;&#12399;Eclipse&#12399;&#12424;&#12373;&#12381;&#12358;&#12391;&#12377;&#12290;
&lt;/p&gt;

&lt;p class="footnote"&gt;&lt;sup&gt;&lt;a class="footnum" name="fn.3" href="#fnr.3"&gt;3&lt;/a&gt;&lt;/sup&gt; &#12385;&#12394;&#12415;&#12395;&#26222;&#27573;emacs&#12434;&#20351;&#12387;&#12390;&#12394;&#12356;&#20154;&#12399;&#12289;&lt;a href="http://clojure.bighugh.com"&gt;ClojureBox&lt;/a&gt;&#12434;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12377;&#12427;&#12398;&#12364;&#19968;&#30058;&#25163;&#12387;&#21462;&#12426;&#26089;&#12356;&#12391;&#12377;&#12290;
&#12371;&#12428;&#12399;&#12289;Emacs+SLIME+CLojure&#12289;&#38283;&#30330;&#29872;&#22659;&#19968;&#24335;&#12434;&#12377;&#12409;&#12390;&#12414;&#12427;&#12372;&#12392;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12375;&#12390;&#12367;&#12428;&#12427;&#22818;&#12398;&#27096;&#12394;&#12503;&#12525;&#12480;&#12463;&#12488;&#12391;&#12377;&#12290;
Emacs&#12399;&#12381;&#12428;&#33258;&#20307;&#12398;&#35373;&#23450;&#12364;&#22823;&#22793;&#29033;&#38609;&#12394;&#12398;&#12391;&#12289;&#38754;&#20498;&#12364;&#23244;&#12356;&#12394;&#20154;&#12399;&#12371;&#12428;&#12434;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12377;&#12428;&#12400;OK&#12363;&#12392;&#24605;&#12356;&#12414;&#12377;&#12290;
&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title type="html">LVMではまった</title><author><name>nil</name></author><link href="http://mikio.github.com//article/2010/07/26_lvm.html"/><updated>2010-07-26T19:25:00Z</updated><published>2010-07-26T19:25:00Z</published><id>article/2010/07/26_lvm.html</id><category scheme="/tags/hamari.html" term="hamari" label="hamari"/><category scheme="/tags/lvm.html" term="lvm" label="lvm"/><category scheme="/tags/centos.html" term="centos" label="centos"/><content type="html">&lt;div id="outline-container-1" class="outline-3"&gt;
&lt;h3 id="sec-1"&gt;LVM&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1"&gt;

&lt;p&gt;LVM&#12424;&#12367;&#12431;&#12363;&#12425;&#12394;&#12356;&#12398;&#12391;&#12464;&#12464;&#12427;&#12290;
&#19979;&#35352;&#12434;&#35211;&#12427;&#38480;&#12426;&#12289;LVM&#12399;&#20316;&#25104;&#12373;&#12428;&#12390;&#12356;&#12390;&#12289;&#23481;&#37327;&#12364;&#36275;&#12426;&#12394;&#12356;&#12431;&#12369;&#12384;&#12363;&#12425;
&#26082;&#23384;&#12398;LV&#12434;&#22679;&#12420;&#12373;&#12400;&#12356;&#12356;&#12392;&#12356;&#12358;&#12371;&#12392;&#12364;&#12431;&#12363;&#12387;&#12383;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;[miki@localhost ~]$ df -h
Filesystem          &amp;#12469;&amp;#12452;&amp;#12474;  &amp;#20351;&amp;#29992;  &amp;#27531;&amp;#12426; &amp;#20351;&amp;#29992;% &amp;#12510;&amp;#12454;&amp;#12531;&amp;#12488;&amp;#20301;&amp;#32622;
/dev/md0              3.9G  2.3G  1.5G  61% /
/dev/mapper/vg00-home
                      3.9G  3.7G     0 100% /home
/dev/mapper/vg00-var  3.9G  3.7G  836K 100% /var
/dev/mapper/vg00-mysql
                      3.9G  137M  3.6G   4% /var/lib/mysql
tmpfs                1006M     0 1006M   0% /dev/shm
&lt;/pre&gt;


&lt;p&gt;
pgdisplay&#12364;&#35211;&#12388;&#12363;&#12425;&#12394;&#12356;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;[miki@localhost ~]$ which pvdisplay
/usr/bin/which: no pvdisplay&lt;span class="org-keyword"&gt; in&lt;/span&gt; (/usr/kerberos/bin:/usr/local/jdk1.6.0_24//bin:/usr/local/bin:/bin:/usr/bin:/home/miki/bin)
&lt;/pre&gt;


&lt;p&gt;
&#12418;&#12375;&#12363;&#12375;&#12390;&#20491;&#21029;&#12395;&#12452;&#12531;&#12473;&#12488;&#12540;&#12523;&#12364;&#24517;&#35201;&#12394;&#12398;&#12363;&#12392;&#12363;&#12289;root&#12376;&#12419;&#12394;&#12356;&#12392;&#20351;&#12360;&#12394;&#12356;&#12467;&#12510;&#12531;&#12489;&#12394;&#12398;&#12363;&#12392;&#12363;&#12391;
&#12431;&#12374;&#12431;&#12374;VGA&#12398;&#23567;&#22411;&#12514;&#12491;&#12479;&#12363;&#12387;&#12390;root&#12391;&#30452;&#25509;&#20316;&#26989;&#12375;&#12383;&#12369;&#12393;&#35211;&#12388;&#12363;&#12425;&#12378;&#65342;&#65342;&#12290;
&lt;/p&gt;
&lt;p&gt;
&#12381;&#12398;&#24460;&#12289;&#19979;&#35352;&#12467;&#12510;&#12531;&#12489;&#12391;&#35211;&#12388;&#12363;&#12387;&#12383;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;[miki@localhost ~]$ whereis pvdisplay
pvdisplay: /usr/sbin/pvdisplay /usr/share/man/man8/pvdisplay.8.gz
&lt;/pre&gt;

&lt;p&gt;
&#12450;&#12507;&#36942;&#12366;&#12427;&#12290;&#12290;&#12290;
&lt;/p&gt;



&lt;pre class="src src-sh"&gt;[miki@localhost ~]$ sudo /usr/sbin/pvdisplay
  --- Physical volume ---
  PV Name               /dev/md1
  VG Name               vg00
  PV Size               290.10 GB / not usable 5.00 MB
  Allocatable           yes
  PE Size (KByte)       32768
  Total PE              9283
  Free PE               8835
  Allocated PE          448
  PV UUID               p6XFrn-nSDe-mcgf-VcVm-o5ME-VWzW-1RoLh3
&lt;/pre&gt;

&lt;p&gt;
&#29289;&#29702;&#12508;&#12522;&#12517;&#12540;&#12512;&#12364;290GB&#12354;&#12427;&#12392;&#12356;&#12358;&#12371;&#12392;&#12363;&#12290;
&lt;/p&gt;

&lt;p&gt;
PV(PhisicalVolume): &#29289;&#29702;&#12487;&#12451;&#12473;&#12463;
VG(VlumeGroup)    : &#29289;&#29702;&#12487;&#12451;&#12473;&#12463;&#12434;&#26463;&#12397;&#12383;&#29289;(PV&#12434;&#12414;&#12392;&#12417;&#12390;&#22823;&#12365;&#12394;&#35542;&#29702;&#12495;&#12540;&#12489;&#12487;&#12451;&#12473;&#12463;&#12392;&#12415;&#12394;&#12377;&#65289;
&lt;/p&gt;
&lt;p&gt;
LV(LogicalVolume) : &#35542;&#29702;&#12487;&#12451;&#12473;&#12463;
&lt;/p&gt;

&lt;p&gt;
&#35542;&#29702;&#12508;&#12522;&#12517;&#12540;&#12512;&#12398;/home&#12398;&#12487;&#12451;&#12473;&#12463;&#12469;&#12452;&#12474;&#12434;&#22679;&#12420;&#12377;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ sudo /usr/sbin/lvextend -L +80G /dev/vg00/home
&lt;/pre&gt;

&lt;p&gt;
&#22679;&#12420;&#12375;&#12383;&#12425;Filesyste&#12434;&#25313;&#24373;&#12377;&#12427;&#12290;&#26412;&#26469;&#12399;unmount&#12377;&#12427;&#24517;&#35201;&#12364;&#12354;&#12427;&#12364;&#12289;ext3&#12399;&#12458;&#12531;&#12521;&#12452;&#12531;&#12391;&#25313;&#24373;&#12391;&#12365;&#12427;&#12425;&#12356;&#12375;&#12356;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;$ sudo /sbin/resize2fs /dev/vg00/home
&lt;/pre&gt;


&lt;p&gt;
&#32154;&#12356;&#12390;var&#19979;&#12434;&#22679;&#12420;&#12377;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;sudo /usr/sbin/lvextend -L +30G /dev/vg00/var
sudo /sbin/resize2fs /dev/vg00/var
&lt;/pre&gt;


&lt;p&gt;
&#12373;&#12425;&#12395;mysql&#19979;&#12418;&#22679;&#12420;&#12377;&#12290;
&lt;/p&gt;


&lt;pre class="src src-sh"&gt;sudo /usr/sbin/lvextend -L +100G /dev/vg00/mysql
sudo /sbin/resize2fs /dev/vg00/var
&lt;/pre&gt;



&lt;p&gt;
&#12371;&#12428;&#12391;&#12392;&#12426;&#12354;&#12360;&#12378;&#12402;&#12392;&#36890;&#12426;&#22679;&#12420;&#12379;&#12383;&#12290;
/var&#37197;&#19979;&#12399;&#20849;&#26377;&#12487;&#12451;&#12524;&#12463;&#12488;&#12522;&#12434;&#12405;&#12367;&#12435;&#12391;&#12427;&#12398;&#12391;&#20170;&#24460;&#12289;&#12373;&#12425;&#12395;&#22679;&#12420;&#12377;&#24517;&#35201;&#12364;&#12354;&#12427;&#12363;&#12418;&#12290;
&#36870;&#12395;mysql&#12399;wikipedia&#12398;&#12487;&#12540;&#12479;&#12434;&#32622;&#12363;&#12394;&#12356;&#38480;&#12426;100GB&#12418;&#12356;&#12425;&#12394;&#12356;&#12363;&#12418;&#12394;&#12290;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content></entry>
</feed>
